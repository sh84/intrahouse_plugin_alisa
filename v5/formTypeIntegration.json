{
  "spacing": 10,
  "grid": [
    {
      "id": "header",
      "xs": 12,
      "class": "main",
      "hide": ""
    },
    {
      "id": "main",
      "xs": 12,
      "class": "main",
      "table": "_types",
      "hide": ""
    },
    {
      "id": "capability_0",
      "xs": 12,
      "class": "main",
      "table": "_types",
      "hide": "data.main.inherit || data.main.capabilities_count.id == '-' || data.main.capabilities_count.id < 0"
    },
    {
      "id": "capability_1",
      "xs": 12,
      "class": "main",
      "table": "_types",
      "hide": "data.main.inherit || data.main.capabilities_count.id == '-' || data.main.capabilities_count.id < 1"
    },
    {
      "id": "capability_2",
      "xs": 12,
      "class": "main",
      "table": "_types",
      "hide": "data.main.inherit || data.main.capabilities_count.id == '-' || data.main.capabilities_count.id < 2"
    },
    {
      "id": "capability_3",
      "xs": 12,
      "class": "main",
      "table": "_types",
      "hide": "data.main.inherit || data.main.capabilities_count.id == '-' || data.main.capabilities_count.id < 3"
    },
    {
      "id": "capability_4",
      "xs": 12,
      "class": "main",
      "table": "_types",
      "hide": "data.main.inherit || data.main.capabilities_count.id == '-' || data.main.capabilities_count.id < 4"
    },
    {
      "id": "capability_5",
      "xs": 12,
      "class": "main",
      "table": "_types",
      "hide": "data.main.inherit || data.main.capabilities_count.id == '-' || data.main.capabilities_count.id < 5"
    },
    {
      "id": "capability_6",
      "xs": 12,
      "class": "main",
      "table": "_types",
      "hide": "data.main.inherit || data.main.capabilities_count.id == '-' || data.main.capabilities_count.id < 6"
    },
    {
      "id": "capability_7",
      "xs": 12,
      "class": "main",
      "table": "_types",
      "hide": "data.main.inherit || data.main.capabilities_count.id == '-' || data.main.capabilities_count.id < 7"
    },
    {
      "id": "property_0",
      "xs": 12,
      "class": "main",
      "table": "_types",
      "hide": "data.main.inherit || data.main.properties_count.id == '-' || data.main.properties_count.id < 0"
    },
    {
      "id": "property_1",
      "xs": 12,
      "class": "main",
      "table": "_types",
      "hide": "data.main.inherit || data.main.properties_count.id == '-' || data.main.properties_count.id < 1"
    },
    {
      "id": "property_2",
      "xs": 12,
      "class": "main",
      "table": "_types",
      "hide": "data.main.inherit || data.main.properties_count.id == '-' || data.main.properties_count.id < 2"
    },
    {
      "id": "property_3",
      "xs": 12,
      "class": "main",
      "table": "_types",
      "hide": "data.main.inherit || data.main.properties_count.id == '-' || data.main.properties_count.id < 3"
    },
    {
      "id": "property_4",
      "xs": 12,
      "class": "main",
      "table": "_types",
      "hide": "data.main.inherit || data.main.properties_count.id == '-' || data.main.properties_count.id < 4"
    }
  ],
  "header": [
    {
      "prop": "_title1",
      "title": "Информация о типах устройств: https://yandex.ru/dev/dialogs/smart-home/doc/concepts/device-types.html",
      "type": "header"
    },
    {
      "prop": "_title2",
      "title": "Информация о умениях: https://yandex.ru/dev/dialogs/smart-home/doc/concepts/capability-types.html",
      "type": "header"
    },
    {
      "prop": "_title3",
      "title": "Информация о свойствах: https://yandex.ru/dev/dialogs/smart-home/doc/concepts/properties-types.html",
      "type": "header"
    }
  ],
  "main": [
    {
      "prop": "ya_type",
      "title": "Тип устройства (Yandex)",
      "type": "droplist",
      "data": [
        {
          "id": "devices.types.camera",
          "title": "Устройство со встроенной камерой и функцией трансляции видео."
        },
        {
          "id": "devices.types.cooking",
          "title": "Различная умная кухонная техника."
        },
        {
          "id": "devices.types.cooking.coffee_maker",
          "title": "Устройство, которое умеет делать кофе."
        },
        {
          "id": "devices.types.cooking.kettle",
          "title": "Устройство, которое умеет кипятить воду и/или делать чай."
        },
        {
          "id": "devices.types.cooking.multicooker",
          "title": "Устройство, которое выполняет функции мультиварки — приготовление пищи по заданным программам."
        },
        {
          "id": "devices.types.dishwasher",
          "title": "Устройство для мытья посуды."
        },
        {
          "id": "devices.types.humidifier",
          "title": "Устройство, которое умеет изменять влажность в помещении."
        },
        {
          "id": "devices.types.iron",
          "title": "Устройство, которое выполняет функции утюга."
        },
        {
          "id": "devices.types.light",
          "title": "Устройство, которое имеет управляемые светящиеся элементы."
        },
        {
          "id": "devices.types.media_device",
          "title": "Аудио, видео, мультимедиа техника. Устройства, которые умеют воспроизводить звук и видео."
        },
        {
          "id": "devices.types.media_device.receiver",
          "title": "Устройство, подключаемое к телевизору или дисплею, для просмотра видеоконтента. На устройстве можно изменять громкость, переключать каналы и источники аудио-/видеосигнала."
        },
        {
          "id": "devices.types.media_device.tv",
          "title": "Устройство для просмотра видеоконтента. На устройстве можно изменять громкость и переключать каналы."
        },
        {
          "id": "devices.types.media_device.tv_box",
          "title": "Устройство, подключаемое к телевизору или дисплею, для просмотра видеоконтента. На устройстве можно управлять громкостью воспроизведения и переключать каналы."
        },
        {
          "id": "devices.types.openable",
          "title": "Устройство, которое умеет открываться и/или закрываться."
        },
        {
          "id": "devices.types.openable.curtain",
          "title": "Устройство, которое выполняет функцию штор."
        },
        {
          "id": "devices.types.other",
          "title": "Любые устройства, не подходящие под доступные типы. Ограничение. Если для устройства доступен подходящий тип из списка — используйте его. Иначе навык может быть отклонен на этапе модерации и тестирования."
        },
        {
          "id": "devices.types.pet_drinking_fountain",
          "title": "Устройство, которое наполняет водой миску домашнего животного."
        },
        {
          "id": "devices.types.pet_feeder",
          "title": "Устройство для кормления домашних животных."
        },
        {
          "id": "devices.types.purifier",
          "title": "Устройство с функцией очистки воздуха."
        },
        {
          "id": "devices.types.sensor",
          "title": "Устройство, которое передает данные со свойств."
        },
        {
          "id": "devices.types.sensor.button",
          "title": "Устройство, которое сообщает о нажатии на кнопку."
        },
        {
          "id": "devices.types.sensor.climate",
          "title": "Устройство, которое сообщает о температуре и влажности в помещении."
        },
        {
          "id": "devices.types.sensor.gas",
          "title": "Устройство, которое сообщает о наличии газа в помещении."
        },
        {
          "id": "devices.types.sensor.illumination",
          "title": "Устройство, которое сообщает об уровне освещенности."
        },
        {
          "id": "devices.types.sensor.motion",
          "title": "Устройство, которое сообщает о наличии движения."
        },
        {
          "id": "devices.types.sensor.open",
          "title": "Устройство, которое сообщает об открытии/закрытии двери."
        },
        {
          "id": "devices.types.sensor.smoke",
          "title": "Устройство, которое сообщает о наличии дыма в помещении."
        },
        {
          "id": "devices.types.sensor.vibration",
          "title": "Устройство, которое сообщает о физическом воздействии: вибрация, падение, переворачивание."
        },
        {
          "id": "devices.types.sensor.water_leak",
          "title": "Устройство, которое сообщает о протечке воды."
        },
        {
          "id": "devices.types.smart_meter",
          "title": "Устройство, которое измеряет расход чего-либо (универсальный тип для счетчиков)."
        },
        {
          "id": "devices.types.smart_meter.cold_water",
          "title": "Устройство, которое измеряет расход холодной воды."
        },
        {
          "id": "devices.types.smart_meter.electricity",
          "title": "Устройство, которое измеряет расход электроэнергии."
        },
        {
          "id": "devices.types.smart_meter.gas",
          "title": "Устройство, которое измеряет расход газа."
        },
        {
          "id": "devices.types.smart_meter.heat",
          "title": "Устройство, которое измеряет расход тепла."
        },
        {
          "id": "devices.types.smart_meter.hot_water",
          "title": "Устройство, которое измеряет расход горячей воды."
        },
        {
          "id": "devices.types.socket",
          "title": "Розетка."
        },
        {
          "id": "devices.types.switch",
          "title": "Выключатель."
        },
        {
          "id": "devices.types.thermostat",
          "title": "Устройство с возможностью регулирования температуры."
        },
        {
          "id": "devices.types.thermostat.ac",
          "title": "Устройство, управляющее микроклиматом в помещении, с возможностью регулирования температуры и режима работы."
        },
        {
          "id": "devices.types.vacuum_cleaner",
          "title": "Устройство, которое выполняет функцию пылесоса."
        },
        {
          "id": "devices.types.washing_machine",
          "title": "Устройство для стирки белья."
        }
      ],
      "hide": "data.main.inherit"
    },
    {
      "prop": "_title_example_devices.types.camera",
      "title": "Пример: \nВидеокамера, видео-домофон, дверной глазок с камерой.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.camera'"
    },
    {
      "prop": "_title_phrases_devices.types.camera",
      "title": "Фразы: \nАлиса, покажи камеру в прихожей. \n Алиса, включи видео из детской. \n Алиса, видео на даче. \n Алиса, камера в коридоре.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.camera'"
    },
    {
      "prop": "_title_example_devices.types.cooking",
      "title": "Пример: \nХолодильник, духовой шкаф. Для чайника рекомендуется использовать отдельный тип  devices.types.cooking.kettle , для кофеварки —  devices.types.cooking.coffee_maker , для мультиварки —  devices.types.cooking.multicooker .",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.cooking'"
    },
    {
      "prop": "_title_example_devices.types.cooking.coffee_maker",
      "title": "Пример: \nКофеварка, кофемашина.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.cooking.coffee_maker'"
    },
    {
      "prop": "_title_phrases_devices.types.cooking.coffee_maker",
      "title": "Фразы: \nАлиса, включи кофеварку. \n Алиса, свари кофе. \n Алиса, сделай кофе. \n Алиса, включи кофемашину.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.cooking.coffee_maker'"
    },
    {
      "prop": "_title_example_devices.types.cooking.kettle",
      "title": "Пример: \nУмный чайник, термопот.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.cooking.kettle'"
    },
    {
      "prop": "_title_phrases_devices.types.cooking.kettle",
      "title": "Фразы: \nАлиса, поставь чайник. \n Алиса, вскипяти чайник. \n Алиса, нагрей чайник. \n Алиса, подогрей чайник.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.cooking.kettle'"
    },
    {
      "prop": "_title_example_devices.types.cooking.multicooker",
      "title": "Пример: \nМультиварка.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.cooking.multicooker'"
    },
    {
      "prop": "_title_phrases_devices.types.cooking.multicooker",
      "title": "Фразы: \nАлиса, включи мультиварку. \n Алиса, выруби мультиварку.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.cooking.multicooker'"
    },
    {
      "prop": "_title_example_devices.types.dishwasher",
      "title": "Пример: \nПосудомоечная машина.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.dishwasher'"
    },
    {
      "prop": "_title_phrases_devices.types.dishwasher",
      "title": "Фразы: \nАлиса, включи посудомоечную машину. \n Алиса, запусти посудомойку.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.dishwasher'"
    },
    {
      "prop": "_title_example_devices.types.humidifier",
      "title": "Пример: \nУвлажнитель воздуха.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.humidifier'"
    },
    {
      "prop": "_title_phrases_devices.types.humidifier",
      "title": "Фразы: \nАлиса, включи увлажнитель воздуха. \n Алиса, выключи воздухоувлажнитель. \n Алиса, включи увлажнитель.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.humidifier'"
    },
    {
      "prop": "_title_example_devices.types.iron",
      "title": "Пример: \nУтюг, парогенератор.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.iron'"
    },
    {
      "prop": "_title_phrases_devices.types.iron",
      "title": "Фразы: \nАлиса, выключи утюг. \n Алиса, выруби парогенератор.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.iron'"
    },
    {
      "prop": "_title_example_devices.types.light",
      "title": "Пример: \nЛампочка, светильник, ночник, люстра.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.light'"
    },
    {
      "prop": "_title_phrases_devices.types.light",
      "title": "Фразы: \nАлиса, включи свет. \n Алиса, выключи свет. \n Алиса, прибавь яркость света. \n Алиса, сделай свет теплее.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.light'"
    },
    {
      "prop": "_title_example_devices.types.media_device",
      "title": "Пример: \nDVD-плеер и другие медиаустройства. Для телевизора рекомендуется использовать отдельный тип  devices.types.media_device.tv , для умной ТВ-приставки —  devices.types.media_device.tv_box , для ресивера —  devices.types.media_device.receiver .",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.media_device'"
    },
    {
      "prop": "_title_example_devices.types.media_device.receiver",
      "title": "Пример: \nИК-пульт от ресивера, AV-ресивер, спутниковый ресивер.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.media_device.receiver'"
    },
    {
      "prop": "_title_phrases_devices.types.media_device.receiver",
      "title": "Фразы: \nАлиса, включи ресивер. \n Алиса, сделай ресивер погромче. \n Алиса, выключи звук на ресивере. \n Алиса, включи на ресивере пятый канал. \n Алиса, включи первый источник сигнала на ресивере.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.media_device.receiver'"
    },
    {
      "prop": "_title_example_devices.types.media_device.tv",
      "title": "Пример: \nУмный телевизор, ИК-пульт от телевизора, медиаприставка, ресивер.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.media_device.tv'"
    },
    {
      "prop": "_title_phrases_devices.types.media_device.tv",
      "title": "Фразы: \nАлиса, включи телевизор. \n Алиса, выключи телек. \n Алиса, сделай телевизор погромче. \n Алиса, выключи звук на телевизоре. \n Алиса, включи на телеке пятый канал.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.media_device.tv'"
    },
    {
      "prop": "_title_example_devices.types.media_device.tv_box",
      "title": "Пример: \nИК-пульт от ТВ-приставки, умная ТВ-приставка.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.media_device.tv_box'"
    },
    {
      "prop": "_title_phrases_devices.types.media_device.tv_box",
      "title": "Фразы: \nАлиса, включи приставку. \n Алиса, сделай приставку погромче. \n Алиса, выключи звук на приставке. \n Алиса, включи на приставке пятый канал. \n Алиса, поставь приставку на паузу.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.media_device.tv_box'"
    },
    {
      "prop": "_title_example_devices.types.openable",
      "title": "Пример: \nДверь, ворота, окно, ставни. Для штор и жалюзи рекомендуется использовать отдельный тип  devices.types.openable.curtain .",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.openable'"
    },
    {
      "prop": "_title_phrases_devices.types.openable",
      "title": "Фразы: \nАлиса, открой дверь. \n Алиса, закрой окно.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.openable'"
    },
    {
      "prop": "_title_example_devices.types.openable.curtain",
      "title": "Пример: \nШторы, жалюзи.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.openable.curtain'"
    },
    {
      "prop": "_title_phrases_devices.types.openable.curtain",
      "title": "Фразы: \nАлиса, открой шторы. \n Алиса, закрой шторы.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.openable.curtain'"
    },
    {
      "prop": "_title_example_devices.types.other",
      "title": "Пример: \nЛюбые устройства, не подходящие под доступные типы.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.other'"
    },
    {
      "prop": "_title_example_devices.types.pet_drinking_fountain",
      "title": "Пример: \nПоилка.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.pet_drinking_fountain'"
    },
    {
      "prop": "_title_phrases_devices.types.pet_drinking_fountain",
      "title": "Фразы: \nАлиса, включи поилку. \n Алиса, выключи питьевой фонтанчик.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.pet_drinking_fountain'"
    },
    {
      "prop": "_title_example_devices.types.pet_feeder",
      "title": "Пример: \nКормушка.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.pet_feeder'"
    },
    {
      "prop": "_title_phrases_devices.types.pet_feeder",
      "title": "Фразы: \nАлиса, пора накормить моего кота. \n Алиса, покорми котика. \n Алиса, насыпь в миску еды. \n Алиса, наполни чашку кота.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.pet_feeder'"
    },
    {
      "prop": "_title_example_devices.types.purifier",
      "title": "Пример: \nОчиститель воздуха, мойка воздуха.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.purifier'"
    },
    {
      "prop": "_title_phrases_devices.types.purifier",
      "title": "Фразы: \nАлиса, включи очиститель. \n Алиса, включи воздухоочиститель. \n Алиса, включи очиститель воздуха.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.purifier'"
    },
    {
      "prop": "_title_example_devices.types.sensor",
      "title": "Пример: \nДатчик температуры, датчик влажности, датчик открытия двери, датчик движения.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.sensor'"
    },
    {
      "prop": "_title_phrases_devices.types.sensor",
      "title": "Фразы: \nАлиса, что с температурой на кухне? \n Алиса, что с уровнем углекислого газа в спальне? \n Алиса, какая влажность в детской?",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.sensor'"
    },
    {
      "prop": "_title_example_devices.types.sensor.button",
      "title": "Пример: \nУмная кнопка.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.sensor.button'"
    },
    {
      "prop": "_title_phrases_devices.types.sensor.button",
      "title": "Фразы: \nАлиса, когда последний раз нажимали на кнопку? \n Алиса, отключи кнопку до 10 утра.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.sensor.button'"
    },
    {
      "prop": "_title_example_devices.types.sensor.climate",
      "title": "Пример: \nДатчик климата.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.sensor.climate'"
    },
    {
      "prop": "_title_phrases_devices.types.sensor.climate",
      "title": "Фразы: \nАлиса, что с температурой на кухне? \n Алиса, какая влажность в детской?",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.sensor.climate'"
    },
    {
      "prop": "_title_example_devices.types.sensor.gas",
      "title": "Пример: \nДатчик газа.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.sensor.gas'"
    },
    {
      "prop": "_title_phrases_devices.types.sensor.gas",
      "title": "Фразы: \nАлиса, что с уровнем углекислого газа в спальне? \n Алиса, что с датчиком газа?",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.sensor.gas'"
    },
    {
      "prop": "_title_example_devices.types.sensor.illumination",
      "title": "Пример: \nДатчик освещенности.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.sensor.illumination'"
    },
    {
      "prop": "_title_phrases_devices.types.sensor.illumination",
      "title": "Фразы: \nАлиса, какой уровень освещенности в спальне? \n Алиса, что с датчиком освещенности?",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.sensor.illumination'"
    },
    {
      "prop": "_title_example_devices.types.sensor.motion",
      "title": "Пример: \nДатчик движения.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.sensor.motion'"
    },
    {
      "prop": "_title_phrases_devices.types.sensor.motion",
      "title": "Фразы: \nАлиса, когда в прихожей было движение? \n Алиса, что с датчиком движения в гостиной?",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.sensor.motion'"
    },
    {
      "prop": "_title_example_devices.types.sensor.open",
      "title": "Пример: \nДатчик открытия двери.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.sensor.open'"
    },
    {
      "prop": "_title_phrases_devices.types.sensor.open",
      "title": "Фразы: \nАлиса, когда была открыта дверь на кухне? \n Алиса, что с датчиком открытия двери?",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.sensor.open'"
    },
    {
      "prop": "_title_example_devices.types.sensor.smoke",
      "title": "Пример: \nДатчик дыма.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.sensor.smoke'"
    },
    {
      "prop": "_title_phrases_devices.types.sensor.smoke",
      "title": "Фразы: \nАлиса, есть ли дым на кухне? \n Алиса, что с датчиком дыма?",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.sensor.smoke'"
    },
    {
      "prop": "_title_example_devices.types.sensor.vibration",
      "title": "Пример: \nДатчик вибрации.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.sensor.vibration'"
    },
    {
      "prop": "_title_phrases_devices.types.sensor.vibration",
      "title": "Фразы: \nАлиса, установи высокую чувствительность вибрации у датчика вибрации. \n Алиса, когда была вибрация в гостиной?",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.sensor.vibration'"
    },
    {
      "prop": "_title_example_devices.types.sensor.water_leak",
      "title": "Пример: \nДатчик протечки воды.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.sensor.water_leak'"
    },
    {
      "prop": "_title_phrases_devices.types.sensor.water_leak",
      "title": "Фразы: \nАлиса, что с датчиком протечки воды? \n Алиса, когда была протечка воды в ванной?",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.sensor.water_leak'"
    },
    {
      "prop": "_title_example_devices.types.smart_meter",
      "title": "Пример: \nСчетчик.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.smart_meter'"
    },
    {
      "prop": "_title_phrases_devices.types.smart_meter",
      "title": "Фразы: \nАлиса, что со счетчиком? \n Алиса, какие текущие показания счетчика?",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.smart_meter'"
    },
    {
      "prop": "_title_example_devices.types.smart_meter.cold_water",
      "title": "Пример: \nСчетчик холодной воды.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.smart_meter.cold_water'"
    },
    {
      "prop": "_title_phrases_devices.types.smart_meter.cold_water",
      "title": "Фразы: \nАлиса, что со счетчиком холодной воды? \n Алиса, какой расход воды в декабре? \n Алиса, какие текущие показания воды?",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.smart_meter.cold_water'"
    },
    {
      "prop": "_title_example_devices.types.smart_meter.electricity",
      "title": "Пример: \nСчетчик электроэнергии.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.smart_meter.electricity'"
    },
    {
      "prop": "_title_phrases_devices.types.smart_meter.electricity",
      "title": "Фразы: \nАлиса, что со счетчиком электроэнергии? \n Алиса, какой расход электричества в декабре? \n Алиса, какие текущие показания электричества?",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.smart_meter.electricity'"
    },
    {
      "prop": "_title_example_devices.types.smart_meter.gas",
      "title": "Пример: \nСчетчик газа.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.smart_meter.gas'"
    },
    {
      "prop": "_title_phrases_devices.types.smart_meter.gas",
      "title": "Фразы: \nАлиса, что со счетчиком газа? \n Алиса, какой расход газа в декабре? \n Алиса, какие текущие показания газа?",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.smart_meter.gas'"
    },
    {
      "prop": "_title_example_devices.types.smart_meter.heat",
      "title": "Пример: \nСчетчик тепла.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.smart_meter.heat'"
    },
    {
      "prop": "_title_phrases_devices.types.smart_meter.heat",
      "title": "Фразы: \nАлиса, что со счетчиком тепла? \n Алиса, какой расход тепла в декабре? \n Алиса, какие текущие показания тепла?",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.smart_meter.heat'"
    },
    {
      "prop": "_title_example_devices.types.smart_meter.hot_water",
      "title": "Пример: \nСчетчик горячей воды.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.smart_meter.hot_water'"
    },
    {
      "prop": "_title_phrases_devices.types.smart_meter.hot_water",
      "title": "Фразы: \nАлиса, что со счетчиком горячей воды? \n Алиса, какой расход воды в декабре? \n Алиса, какие текущие показания воды?",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.smart_meter.hot_water'"
    },
    {
      "prop": "_title_example_devices.types.socket",
      "title": "Пример: \nУмная розетка.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.socket'"
    },
    {
      "prop": "_title_phrases_devices.types.socket",
      "title": "Фразы: \nАлиса, включи розетку. \n Алиса, выключи розетки в зале.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.socket'"
    },
    {
      "prop": "_title_example_devices.types.switch",
      "title": "Пример: \nНастенный выключатель света, тумблер, автомат в электрическом щитке, умное реле, умная кнопка.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.switch'"
    },
    {
      "prop": "_title_phrases_devices.types.switch",
      "title": "Фразы: \nАлиса, включи переключатель. \n Алиса, включи выключатель.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.switch'"
    },
    {
      "prop": "_title_example_devices.types.thermostat",
      "title": "Пример: \nВодонагреватель, теплый пол, обогреватель, электровентилятор. Для кондиционера рекомендуется использовать отдельный тип  devices.types.thermostat.ac .",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.thermostat'"
    },
    {
      "prop": "_title_phrases_devices.types.thermostat",
      "title": "Фразы: \nАлиса, сделай теплее. \n Алиса, сделай холоднее. \n Алиса, теплее на четыре градуса. \n Алиса, выставь температуру на максимум.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.thermostat'"
    },
    {
      "prop": "_title_example_devices.types.thermostat.ac",
      "title": "Пример: \nКондиционер.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.thermostat.ac'"
    },
    {
      "prop": "_title_phrases_devices.types.thermostat.ac",
      "title": "Фразы: \nАлиса, включи кондиционер. \n Алиса, выключи кондей. \n Алиса, сделай теплее. \n Алиса, сделай холоднее. \n Алиса, теплее на четыре градуса. \n Алиса, выставь температуру на минимум.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.thermostat.ac'"
    },
    {
      "prop": "_title_example_devices.types.vacuum_cleaner",
      "title": "Пример: \nРобот-пылесос.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.vacuum_cleaner'"
    },
    {
      "prop": "_title_phrases_devices.types.vacuum_cleaner",
      "title": "Фразы: \nАлиса, включи пылесос. \n Алиса, включи робот-пылесос. \n Алиса, пропылесось. \n Алиса, уберись. \n Алиса, верни пылесос на зарядку. \n Алиса, верни пылесос на базу.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.vacuum_cleaner'"
    },
    {
      "prop": "_title_example_devices.types.washing_machine",
      "title": "Пример: \nСтиральная машина.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.washing_machine'"
    },
    {
      "prop": "_title_phrases_devices.types.washing_machine",
      "title": "Фразы: \nАлиса, включи стиральную машину. \n Алиса, запусти стиралку.",
      "type": "header",
      "hide": "data.main.inherit || data.main.ya_type.id != 'devices.types.washing_machine'"
    },
    {
      "prop": "capabilities_count",
      "title": "Количество умений",
      "type": "droplist",
      "hide": "data.main.inherit",
      "data": [
        {
          "id": "-",
          "title": "-"
        },
        {
          "id": "0",
          "title": "1"
        },
        {
          "id": "1",
          "title": "2"
        },
        {
          "id": "2",
          "title": "3"
        },
        {
          "id": "3",
          "title": "4"
        },
        {
          "id": "4",
          "title": "5"
        }
      ],
      "default": "-"
    },
    {
      "prop": "properties_count",
      "title": "Количество свойств*событий",
      "type": "droplist",
      "hide": "data.main.inherit",
      "data": [
        {
          "id": "-",
          "title": "-"
        },
        {
          "id": "0",
          "title": "1"
        },
        {
          "id": "1",
          "title": "2"
        },
        {
          "id": "2",
          "title": "3"
        },
        {
          "id": "3",
          "title": "4"
        },
        {
          "id": "4",
          "title": "5"
        },
        {
          "id": "5",
          "title": "6"
        },
        {
          "id": "6",
          "title": "7"
        },
        {
          "id": "7",
          "title": "8"
        }
      ],
      "default": "-"
    }
  ],
  "capability_0": [
    {
      "prop": "_title",
      "title": "Умение №1",
      "type": "header"
    },
    {
      "prop": "ya_cap0_type",
      "title": "Тип умения",
      "type": "droplist",
      "data": [
        {
          "id": "on_off",
          "title": "on_off"
        },
        {
          "id": "color_setting",
          "title": "color_setting"
        },
        {
          "id": "mode",
          "title": "mode"
        },
        {
          "id": "range",
          "title": "range"
        },
        {
          "id": "toggle",
          "title": "toggle"
        }
      ]
    },
    {
      "prop": "_on_off0_title_desc",
      "title": "Удаленное включение и выключение устройства (аналог нажатия кнопки питания на устройстве или его пульте управления). Является базовым умением для большинства устройств.",
      "type": "header",
      "hide": "data.capability_0.ya_cap0_type.id != 'on_off'"
    },
    {
      "prop": "_on_off0_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: true или false",
      "type": "header",
      "hide": "data.capability_0.ya_cap0_type.id != 'on_off'"
    },
    {
      "prop": "ya_cap0_on_off_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_0.ya_cap0_type.id != 'on_off'"
    },
    {
      "prop": "ya_cap0_on_off_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_0.ya_cap0_type.id != 'on_off'"
    },
    {
      "prop": "ya_cap0_on_off_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_0.ya_cap0_type.id != 'on_off'"
    },
    {
      "prop": "ya_cap0_on_off_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "Boolean(value)",
      "hide": "data.capability_0.ya_cap0_type.id != 'on_off'"
    },
    {
      "prop": "ya_cap0_on_off_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value ? 1 : 0",
      "hide": "data.capability_0.ya_cap0_type.id != 'on_off'"
    },
    {
      "prop": "_color_setting0_title_desc",
      "title": "Управление цветом для светящихся элементов в устройстве. Устройство может иметь одну или несколько из перечисленных функций:\n        изменение цвета своих светящихся элементов на произвольный из схемы HSV или из модели RGB;\n        изменение температуры цвета своих светящихся элементов;\n        воспроизведение различных визуальных эффектов.",
      "type": "header",
      "hide": "data.capability_0.ya_cap0_type.id != 'color_setting'"
    },
    {
      "prop": "ya_cap0_color_setting_instance",
      "title": "Название функции умения",
      "type": "droplist",
      "data": [
        {
          "id": "rgb",
          "title": "Произвольное изменение цвета (RGB)."
        },
        {
          "id": "hsv",
          "title": "Произвольное изменение цвета (HSV)."
        },
        {
          "id": "temperature_k",
          "title": "Изменение температуры цвета."
        },
        {
          "id": "scene",
          "title": "Темы и сценарии освещения."
        }
      ],
      "hide": "data.capability_0.ya_cap0_type.id != 'color_setting'"
    },
    {
      "prop": "_color_setting0_rgb_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: число от 0 до 16777215",
      "type": "header",
      "hide": "data.capability_0.ya_cap0_type.id != 'color_setting' || data.capability_0.ya_cap0_color_setting_instance.id != 'rgb'"
    },
    {
      "prop": "ya_cap0_color_setting_rgb_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_0.ya_cap0_type.id != 'color_setting' || data.capability_0.ya_cap0_color_setting_instance.id != 'rgb'"
    },
    {
      "prop": "ya_cap0_color_setting_rgb_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_0.ya_cap0_type.id != 'color_setting' || data.capability_0.ya_cap0_color_setting_instance.id != 'rgb'"
    },
    {
      "prop": "ya_cap0_color_setting_rgb_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_0.ya_cap0_type.id != 'color_setting' || data.capability_0.ya_cap0_color_setting_instance.id != 'rgb'"
    },
    {
      "prop": "ya_cap0_color_setting_rgb_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "value",
      "hide": "data.capability_0.ya_cap0_type.id != 'color_setting' || data.capability_0.ya_cap0_color_setting_instance.id != 'rgb'"
    },
    {
      "prop": "ya_cap0_color_setting_rgb_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value",
      "hide": "data.capability_0.ya_cap0_type.id != 'color_setting' || data.capability_0.ya_cap0_color_setting_instance.id != 'rgb'"
    },
    {
      "prop": "_color_setting0_hsv_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: объект вида {h: 255, s: 100, v: 50}",
      "type": "header",
      "hide": "data.capability_0.ya_cap0_type.id != 'color_setting' || data.capability_0.ya_cap0_color_setting_instance.id != 'hsv'"
    },
    {
      "prop": "ya_cap0_color_setting_hsv_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_0.ya_cap0_type.id != 'color_setting' || data.capability_0.ya_cap0_color_setting_instance.id != 'hsv'"
    },
    {
      "prop": "ya_cap0_color_setting_hsv_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_0.ya_cap0_type.id != 'color_setting' || data.capability_0.ya_cap0_color_setting_instance.id != 'hsv'"
    },
    {
      "prop": "ya_cap0_color_setting_hsv_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_0.ya_cap0_type.id != 'color_setting' || data.capability_0.ya_cap0_color_setting_instance.id != 'hsv'"
    },
    {
      "prop": "ya_cap0_color_setting_hsv_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "value",
      "hide": "data.capability_0.ya_cap0_type.id != 'color_setting' || data.capability_0.ya_cap0_color_setting_instance.id != 'hsv'"
    },
    {
      "prop": "ya_cap0_color_setting_hsv_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value",
      "hide": "data.capability_0.ya_cap0_type.id != 'color_setting' || data.capability_0.ya_cap0_color_setting_instance.id != 'hsv'"
    },
    {
      "prop": "ya_cap0_color_setting_temperature_k_min",
      "title": "Изменение температуры цвета в кельвинах. Min",
      "type": "number",
      "hide": "data.capability_0.ya_cap0_type.id != 'color_setting' || data.capability_0.ya_cap0_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "ya_cap0_color_setting_temperature_k_max",
      "title": "Изменение температуры цвета в кельвинах. Max",
      "type": "number",
      "hide": "data.capability_0.ya_cap0_type.id != 'color_setting' || data.capability_0.ya_cap0_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "_color_setting0_temperature_k_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: число (температура в кельвинах)",
      "type": "header",
      "hide": "data.capability_0.ya_cap0_type.id != 'color_setting' || data.capability_0.ya_cap0_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "ya_cap0_color_setting_temperature_k_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_0.ya_cap0_type.id != 'color_setting' || data.capability_0.ya_cap0_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "ya_cap0_color_setting_temperature_k_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_0.ya_cap0_type.id != 'color_setting' || data.capability_0.ya_cap0_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "ya_cap0_color_setting_temperature_k_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_0.ya_cap0_type.id != 'color_setting' || data.capability_0.ya_cap0_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "ya_cap0_color_setting_temperature_k_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "Number(value)",
      "hide": "data.capability_0.ya_cap0_type.id != 'color_setting' || data.capability_0.ya_cap0_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "ya_cap0_color_setting_temperature_k_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value",
      "hide": "data.capability_0.ya_cap0_type.id != 'color_setting' || data.capability_0.ya_cap0_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "ya_cap0_color_setting_color_scene_scenes",
      "title": "Темы и сценарии освещения. Значения чере запятую.",
      "type": "input",
      "hide": "data.capability_0.ya_cap0_type.id != 'color_setting' || data.capability_0.ya_cap0_color_setting_instance.id != 'scene'"
    },
    {
      "prop": "_color_setting0_color_scene_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: сценарий из списка выше",
      "type": "header",
      "hide": "data.capability_0.ya_cap0_type.id != 'color_setting' || data.capability_0.ya_cap0_color_setting_instance.id != 'scene'"
    },
    {
      "prop": "ya_cap0_color_setting_color_scene_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_0.ya_cap0_type.id != 'color_setting' || data.capability_0.ya_cap0_color_setting_instance.id != 'scene'"
    },
    {
      "prop": "ya_cap0_color_setting_color_scene_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_0.ya_cap0_type.id != 'color_setting' || data.capability_0.ya_cap0_color_setting_instance.id != 'scene'"
    },
    {
      "prop": "ya_cap0_color_setting_color_scene_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_0.ya_cap0_type.id != 'color_setting' || data.capability_0.ya_cap0_color_setting_instance.id != 'scene'"
    },
    {
      "prop": "ya_cap0_color_setting_color_scene_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "value",
      "hide": "data.capability_0.ya_cap0_type.id != 'color_setting' || data.capability_0.ya_cap0_color_setting_instance.id != 'scene'"
    },
    {
      "prop": "ya_cap0_color_setting_color_scene_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value",
      "hide": "data.capability_0.ya_cap0_type.id != 'color_setting' || data.capability_0.ya_cap0_color_setting_instance.id != 'scene'"
    },
    {
      "prop": "_mode0_title_desc",
      "title": "Переключение режимов работы устройства, например, переключение между температурными режимами работы кондиционера: «Охлаждение», «Нагрев» или «Авто».",
      "type": "header",
      "hide": "data.capability_0.ya_cap0_type.id != 'mode'"
    },
    {
      "prop": "ya_cap0_mode_instance",
      "title": "Название функции умения",
      "type": "droplist",
      "data": [
        {
          "id": "cleanup_mode",
          "title": "Установка режима уборки."
        },
        {
          "id": "coffee_mode",
          "title": "Установка режима работы кофеварки."
        },
        {
          "id": "dishwashing",
          "title": "Установка режима мытья посуды."
        },
        {
          "id": "fan_speed",
          "title": "Установка режима работы скорости вентиляции, например, в кондиционере, вентиляторе или обогревателе."
        },
        {
          "id": "heat",
          "title": "Установка режима нагрева."
        },
        {
          "id": "input_source",
          "title": "Установка источника сигнала."
        },
        {
          "id": "program",
          "title": "Установка какой-либо программы работы."
        },
        {
          "id": "swing",
          "title": "Установка направления воздуха в климатической технике."
        },
        {
          "id": "tea_mode",
          "title": "Установка режима приготовления чая."
        },
        {
          "id": "thermostat",
          "title": "Установка температурного режима работы климатической техники, например, в кондиционере."
        },
        {
          "id": "work_speed",
          "title": "Установка скорости работы."
        }
      ],
      "hide": "data.capability_0.ya_cap0_type.id != 'mode'"
    },
    {
      "prop": "ya_cap0_mode_modes",
      "title": "Режимы работы функции. Значения чере запятую.",
      "type": "input",
      "hide": "data.capability_0.ya_cap0_type.id != 'mode'"
    },
    {
      "prop": "_mode0_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: ",
      "type": "header",
      "hide": "data.capability_0.ya_cap0_type.id != 'mode'"
    },
    {
      "prop": "ya_cap0_mode_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_0.ya_cap0_type.id != 'mode'"
    },
    {
      "prop": "ya_cap0_mode_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_0.ya_cap0_type.id != 'mode'"
    },
    {
      "prop": "ya_cap0_mode_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_0.ya_cap0_type.id != 'mode'"
    },
    {
      "prop": "ya_cap0_mode_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "value",
      "hide": "data.capability_0.ya_cap0_type.id != 'mode'"
    },
    {
      "prop": "ya_cap0_mode_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value",
      "hide": "data.capability_0.ya_cap0_type.id != 'mode'"
    },
    {
      "prop": "_range0_title_desc",
      "title": "Управление параметрами устройства, которые имеют диапазон. Например, яркость лампы, громкость звука, температура обогревателя.",
      "type": "header",
      "hide": "data.capability_0.ya_cap0_type.id != 'range'"
    },
    {
      "prop": "ya_cap0_range_instance",
      "title": "Название функции умения",
      "type": "droplist",
      "data": [
        {
          "id": "brightness",
          "title": "Изменение яркости световых элементов."
        },
        {
          "id": "channel",
          "title": "Изменение канала, например телевизионного."
        },
        {
          "id": "humidity",
          "title": "Изменение влажности."
        },
        {
          "id": "open",
          "title": "Открывание чего-либо (открывание штор, окна)."
        },
        {
          "id": "temperature",
          "title": "Изменение температуры. Может обозначать температуру нагрева чайника, обогревателя или температуру кондиционера в каком-либо его режиме."
        },
        {
          "id": "volume",
          "title": "Изменение громкости устройства."
        }
      ],
      "hide": "data.capability_0.ya_cap0_type.id != 'range'"
    },
    {
      "prop": "ya_cap0_range_unit",
      "title": "Единицы измерения значений функции. Должно подходить для выбранной выше функции.",
      "type": "droplist",
      "data": [
        {
          "id": "unit.percent",
          "title": "Проценты"
        },
        {
          "id": "unit.temperature.celsius",
          "title": "Градусы цельсия"
        },
        {
          "id": "unit.temperature.kelvin",
          "title": "Кельвины"
        }
      ],
      "hide": "data.capability_0.ya_cap0_type.id != 'range'"
    },
    {
      "prop": "ya_cap0_range_random_access",
      "title": "Возможность устанавливать произвольные значения функции",
      "type": "cb",
      "default": 1,
      "hide": "data.capability_0.ya_cap0_type.id != 'range'"
    },
    {
      "prop": "ya_cap0_range_range_min",
      "title": "Минимальное допустимое значение",
      "type": "number",
      "hide": "data.capability_0.ya_cap0_type.id != 'range'"
    },
    {
      "prop": "ya_cap0_range_range_max",
      "title": "Максимальное допустимое значение",
      "type": "number",
      "hide": "data.capability_0.ya_cap0_type.id != 'range'"
    },
    {
      "prop": "ya_cap0_range_range_precision",
      "title": "Минимальный шаг изменения значений внутри диапазона",
      "type": "number",
      "default": 1,
      "hide": "data.capability_0.ya_cap0_type.id != 'range'"
    },
    {
      "prop": "_range0_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: ",
      "type": "header",
      "hide": "data.capability_0.ya_cap0_type.id != 'range'"
    },
    {
      "prop": "ya_cap0_range_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_0.ya_cap0_type.id != 'range'"
    },
    {
      "prop": "ya_cap0_range_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_0.ya_cap0_type.id != 'range'"
    },
    {
      "prop": "ya_cap0_range_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_0.ya_cap0_type.id != 'range'"
    },
    {
      "prop": "ya_cap0_range_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "value",
      "hide": "data.capability_0.ya_cap0_type.id != 'range'"
    },
    {
      "prop": "ya_cap0_range_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value",
      "hide": "data.capability_0.ya_cap0_type.id != 'range'"
    },
    {
      "prop": "_toggle0_title_desc",
      "title": "Управление параметрами устройства, которые могут находиться только в одном из двух состояний. Например, кнопки, тумблеры и подобные им элементы управления, которые включают или выключают какую-либо дополнительную функцию устройства.",
      "type": "header",
      "hide": "data.capability_0.ya_cap0_type.id != 'toggle'"
    },
    {
      "prop": "ya_cap0_toggle_instance",
      "title": "Название функции умения",
      "type": "droplist",
      "data": [
        {
          "id": "backlight",
          "title": "Функция отвечает за включение подсветки."
        },
        {
          "id": "controls_locked",
          "title": "Функция отвечает за блокировку управления и включение детского режима."
        },
        {
          "id": "ionization",
          "title": "Функция отвечает за включение ионизации."
        },
        {
          "id": "keep_warm",
          "title": "Функция отвечает за включение поддержания тепла."
        },
        {
          "id": "mute",
          "title": "Функция отвечает за выключение звука на устройстве."
        },
        {
          "id": "oscillation",
          "title": "Функция отвечает за включение вращения. Например, включение вращения вентилятора."
        },
        {
          "id": "pause",
          "title": "Функция отвечает за временную остановку (паузу) текущей деятельности устройства. Например, постановка фильма на паузу или временная остановка работающего робота-пылесоса."
        }
      ],
      "hide": "data.capability_0.ya_cap0_type.id != 'toggle'"
    },
    {
      "prop": "_toggle0_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: ",
      "type": "header",
      "hide": "data.capability_0.ya_cap0_type.id != 'toggle'"
    },
    {
      "prop": "ya_cap0_toggle_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_0.ya_cap0_type.id != 'toggle'"
    },
    {
      "prop": "ya_cap0_toggle_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_0.ya_cap0_type.id != 'toggle'"
    },
    {
      "prop": "ya_cap0_toggle_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_0.ya_cap0_type.id != 'toggle'"
    },
    {
      "prop": "ya_cap0_toggle_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "value",
      "hide": "data.capability_0.ya_cap0_type.id != 'toggle'"
    },
    {
      "prop": "ya_cap0_toggle_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value",
      "hide": "data.capability_0.ya_cap0_type.id != 'toggle'"
    }
  ],
  "capability_1": [
    {
      "prop": "_title",
      "title": "Умение №2",
      "type": "header"
    },
    {
      "prop": "ya_cap1_type",
      "title": "Тип умения",
      "type": "droplist",
      "data": [
        {
          "id": "on_off",
          "title": "on_off"
        },
        {
          "id": "color_setting",
          "title": "color_setting"
        },
        {
          "id": "mode",
          "title": "mode"
        },
        {
          "id": "range",
          "title": "range"
        },
        {
          "id": "toggle",
          "title": "toggle"
        }
      ]
    },
    {
      "prop": "_on_off1_title_desc",
      "title": "Удаленное включение и выключение устройства (аналог нажатия кнопки питания на устройстве или его пульте управления). Является базовым умением для большинства устройств.",
      "type": "header",
      "hide": "data.capability_1.ya_cap1_type.id != 'on_off'"
    },
    {
      "prop": "_on_off1_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: true или false",
      "type": "header",
      "hide": "data.capability_1.ya_cap1_type.id != 'on_off'"
    },
    {
      "prop": "ya_cap1_on_off_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_1.ya_cap1_type.id != 'on_off'"
    },
    {
      "prop": "ya_cap1_on_off_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_1.ya_cap1_type.id != 'on_off'"
    },
    {
      "prop": "ya_cap1_on_off_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_1.ya_cap1_type.id != 'on_off'"
    },
    {
      "prop": "ya_cap1_on_off_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "Boolean(value)",
      "hide": "data.capability_1.ya_cap1_type.id != 'on_off'"
    },
    {
      "prop": "ya_cap1_on_off_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value ? 1 : 0",
      "hide": "data.capability_1.ya_cap1_type.id != 'on_off'"
    },
    {
      "prop": "_color_setting1_title_desc",
      "title": "Управление цветом для светящихся элементов в устройстве. Устройство может иметь одну или несколько из перечисленных функций:\n        изменение цвета своих светящихся элементов на произвольный из схемы HSV или из модели RGB;\n        изменение температуры цвета своих светящихся элементов;\n        воспроизведение различных визуальных эффектов.",
      "type": "header",
      "hide": "data.capability_1.ya_cap1_type.id != 'color_setting'"
    },
    {
      "prop": "ya_cap1_color_setting_instance",
      "title": "Название функции умения",
      "type": "droplist",
      "data": [
        {
          "id": "rgb",
          "title": "Произвольное изменение цвета (RGB)."
        },
        {
          "id": "hsv",
          "title": "Произвольное изменение цвета (HSV)."
        },
        {
          "id": "temperature_k",
          "title": "Изменение температуры цвета."
        },
        {
          "id": "scene",
          "title": "Темы и сценарии освещения."
        }
      ],
      "hide": "data.capability_1.ya_cap1_type.id != 'color_setting'"
    },
    {
      "prop": "_color_setting1_rgb_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: число от 0 до 16777215",
      "type": "header",
      "hide": "data.capability_1.ya_cap1_type.id != 'color_setting' || data.capability_1.ya_cap1_color_setting_instance.id != 'rgb'"
    },
    {
      "prop": "ya_cap1_color_setting_rgb_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_1.ya_cap1_type.id != 'color_setting' || data.capability_1.ya_cap1_color_setting_instance.id != 'rgb'"
    },
    {
      "prop": "ya_cap1_color_setting_rgb_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_1.ya_cap1_type.id != 'color_setting' || data.capability_1.ya_cap1_color_setting_instance.id != 'rgb'"
    },
    {
      "prop": "ya_cap1_color_setting_rgb_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_1.ya_cap1_type.id != 'color_setting' || data.capability_1.ya_cap1_color_setting_instance.id != 'rgb'"
    },
    {
      "prop": "ya_cap1_color_setting_rgb_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "value",
      "hide": "data.capability_1.ya_cap1_type.id != 'color_setting' || data.capability_1.ya_cap1_color_setting_instance.id != 'rgb'"
    },
    {
      "prop": "ya_cap1_color_setting_rgb_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value",
      "hide": "data.capability_1.ya_cap1_type.id != 'color_setting' || data.capability_1.ya_cap1_color_setting_instance.id != 'rgb'"
    },
    {
      "prop": "_color_setting1_hsv_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: объект вида {h: 255, s: 100, v: 50}",
      "type": "header",
      "hide": "data.capability_1.ya_cap1_type.id != 'color_setting' || data.capability_1.ya_cap1_color_setting_instance.id != 'hsv'"
    },
    {
      "prop": "ya_cap1_color_setting_hsv_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_1.ya_cap1_type.id != 'color_setting' || data.capability_1.ya_cap1_color_setting_instance.id != 'hsv'"
    },
    {
      "prop": "ya_cap1_color_setting_hsv_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_1.ya_cap1_type.id != 'color_setting' || data.capability_1.ya_cap1_color_setting_instance.id != 'hsv'"
    },
    {
      "prop": "ya_cap1_color_setting_hsv_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_1.ya_cap1_type.id != 'color_setting' || data.capability_1.ya_cap1_color_setting_instance.id != 'hsv'"
    },
    {
      "prop": "ya_cap1_color_setting_hsv_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "value",
      "hide": "data.capability_1.ya_cap1_type.id != 'color_setting' || data.capability_1.ya_cap1_color_setting_instance.id != 'hsv'"
    },
    {
      "prop": "ya_cap1_color_setting_hsv_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value",
      "hide": "data.capability_1.ya_cap1_type.id != 'color_setting' || data.capability_1.ya_cap1_color_setting_instance.id != 'hsv'"
    },
    {
      "prop": "ya_cap1_color_setting_temperature_k_min",
      "title": "Изменение температуры цвета в кельвинах. Min",
      "type": "number",
      "hide": "data.capability_1.ya_cap1_type.id != 'color_setting' || data.capability_1.ya_cap1_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "ya_cap1_color_setting_temperature_k_max",
      "title": "Изменение температуры цвета в кельвинах. Max",
      "type": "number",
      "hide": "data.capability_1.ya_cap1_type.id != 'color_setting' || data.capability_1.ya_cap1_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "_color_setting1_temperature_k_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: число (температура в кельвинах)",
      "type": "header",
      "hide": "data.capability_1.ya_cap1_type.id != 'color_setting' || data.capability_1.ya_cap1_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "ya_cap1_color_setting_temperature_k_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_1.ya_cap1_type.id != 'color_setting' || data.capability_1.ya_cap1_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "ya_cap1_color_setting_temperature_k_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_1.ya_cap1_type.id != 'color_setting' || data.capability_1.ya_cap1_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "ya_cap1_color_setting_temperature_k_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_1.ya_cap1_type.id != 'color_setting' || data.capability_1.ya_cap1_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "ya_cap1_color_setting_temperature_k_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "Number(value)",
      "hide": "data.capability_1.ya_cap1_type.id != 'color_setting' || data.capability_1.ya_cap1_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "ya_cap1_color_setting_temperature_k_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value",
      "hide": "data.capability_1.ya_cap1_type.id != 'color_setting' || data.capability_1.ya_cap1_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "ya_cap1_color_setting_color_scene_scenes",
      "title": "Темы и сценарии освещения. Значения чере запятую.",
      "type": "input",
      "hide": "data.capability_1.ya_cap1_type.id != 'color_setting' || data.capability_1.ya_cap1_color_setting_instance.id != 'scene'"
    },
    {
      "prop": "_color_setting1_color_scene_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: сценарий из списка выше",
      "type": "header",
      "hide": "data.capability_1.ya_cap1_type.id != 'color_setting' || data.capability_1.ya_cap1_color_setting_instance.id != 'scene'"
    },
    {
      "prop": "ya_cap1_color_setting_color_scene_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_1.ya_cap1_type.id != 'color_setting' || data.capability_1.ya_cap1_color_setting_instance.id != 'scene'"
    },
    {
      "prop": "ya_cap1_color_setting_color_scene_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_1.ya_cap1_type.id != 'color_setting' || data.capability_1.ya_cap1_color_setting_instance.id != 'scene'"
    },
    {
      "prop": "ya_cap1_color_setting_color_scene_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_1.ya_cap1_type.id != 'color_setting' || data.capability_1.ya_cap1_color_setting_instance.id != 'scene'"
    },
    {
      "prop": "ya_cap1_color_setting_color_scene_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "value",
      "hide": "data.capability_1.ya_cap1_type.id != 'color_setting' || data.capability_1.ya_cap1_color_setting_instance.id != 'scene'"
    },
    {
      "prop": "ya_cap1_color_setting_color_scene_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value",
      "hide": "data.capability_1.ya_cap1_type.id != 'color_setting' || data.capability_1.ya_cap1_color_setting_instance.id != 'scene'"
    },
    {
      "prop": "_mode1_title_desc",
      "title": "Переключение режимов работы устройства, например, переключение между температурными режимами работы кондиционера: «Охлаждение», «Нагрев» или «Авто».",
      "type": "header",
      "hide": "data.capability_1.ya_cap1_type.id != 'mode'"
    },
    {
      "prop": "ya_cap1_mode_instance",
      "title": "Название функции умения",
      "type": "droplist",
      "data": [
        {
          "id": "cleanup_mode",
          "title": "Установка режима уборки."
        },
        {
          "id": "coffee_mode",
          "title": "Установка режима работы кофеварки."
        },
        {
          "id": "dishwashing",
          "title": "Установка режима мытья посуды."
        },
        {
          "id": "fan_speed",
          "title": "Установка режима работы скорости вентиляции, например, в кондиционере, вентиляторе или обогревателе."
        },
        {
          "id": "heat",
          "title": "Установка режима нагрева."
        },
        {
          "id": "input_source",
          "title": "Установка источника сигнала."
        },
        {
          "id": "program",
          "title": "Установка какой-либо программы работы."
        },
        {
          "id": "swing",
          "title": "Установка направления воздуха в климатической технике."
        },
        {
          "id": "tea_mode",
          "title": "Установка режима приготовления чая."
        },
        {
          "id": "thermostat",
          "title": "Установка температурного режима работы климатической техники, например, в кондиционере."
        },
        {
          "id": "work_speed",
          "title": "Установка скорости работы."
        }
      ],
      "hide": "data.capability_1.ya_cap1_type.id != 'mode'"
    },
    {
      "prop": "ya_cap1_mode_modes",
      "title": "Режимы работы функции. Значения чере запятую.",
      "type": "input",
      "hide": "data.capability_1.ya_cap1_type.id != 'mode'"
    },
    {
      "prop": "_mode1_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: ",
      "type": "header",
      "hide": "data.capability_1.ya_cap1_type.id != 'mode'"
    },
    {
      "prop": "ya_cap1_mode_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_1.ya_cap1_type.id != 'mode'"
    },
    {
      "prop": "ya_cap1_mode_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_1.ya_cap1_type.id != 'mode'"
    },
    {
      "prop": "ya_cap1_mode_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_1.ya_cap1_type.id != 'mode'"
    },
    {
      "prop": "ya_cap1_mode_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "value",
      "hide": "data.capability_1.ya_cap1_type.id != 'mode'"
    },
    {
      "prop": "ya_cap1_mode_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value",
      "hide": "data.capability_1.ya_cap1_type.id != 'mode'"
    },
    {
      "prop": "_range1_title_desc",
      "title": "Управление параметрами устройства, которые имеют диапазон. Например, яркость лампы, громкость звука, температура обогревателя.",
      "type": "header",
      "hide": "data.capability_1.ya_cap1_type.id != 'range'"
    },
    {
      "prop": "ya_cap1_range_instance",
      "title": "Название функции умения",
      "type": "droplist",
      "data": [
        {
          "id": "brightness",
          "title": "Изменение яркости световых элементов."
        },
        {
          "id": "channel",
          "title": "Изменение канала, например телевизионного."
        },
        {
          "id": "humidity",
          "title": "Изменение влажности."
        },
        {
          "id": "open",
          "title": "Открывание чего-либо (открывание штор, окна)."
        },
        {
          "id": "temperature",
          "title": "Изменение температуры. Может обозначать температуру нагрева чайника, обогревателя или температуру кондиционера в каком-либо его режиме."
        },
        {
          "id": "volume",
          "title": "Изменение громкости устройства."
        }
      ],
      "hide": "data.capability_1.ya_cap1_type.id != 'range'"
    },
    {
      "prop": "ya_cap1_range_unit",
      "title": "Единицы измерения значений функции. Должно подходить для выбранной выше функции.",
      "type": "droplist",
      "data": [
        {
          "id": "unit.percent",
          "title": "Проценты"
        },
        {
          "id": "unit.temperature.celsius",
          "title": "Градусы цельсия"
        },
        {
          "id": "unit.temperature.kelvin",
          "title": "Кельвины"
        }
      ],
      "hide": "data.capability_1.ya_cap1_type.id != 'range'"
    },
    {
      "prop": "ya_cap1_range_random_access",
      "title": "Возможность устанавливать произвольные значения функции",
      "type": "cb",
      "default": 1,
      "hide": "data.capability_1.ya_cap1_type.id != 'range'"
    },
    {
      "prop": "ya_cap1_range_range_min",
      "title": "Минимальное допустимое значение",
      "type": "number",
      "hide": "data.capability_1.ya_cap1_type.id != 'range'"
    },
    {
      "prop": "ya_cap1_range_range_max",
      "title": "Максимальное допустимое значение",
      "type": "number",
      "hide": "data.capability_1.ya_cap1_type.id != 'range'"
    },
    {
      "prop": "ya_cap1_range_range_precision",
      "title": "Минимальный шаг изменения значений внутри диапазона",
      "type": "number",
      "default": 1,
      "hide": "data.capability_1.ya_cap1_type.id != 'range'"
    },
    {
      "prop": "_range1_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: ",
      "type": "header",
      "hide": "data.capability_1.ya_cap1_type.id != 'range'"
    },
    {
      "prop": "ya_cap1_range_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_1.ya_cap1_type.id != 'range'"
    },
    {
      "prop": "ya_cap1_range_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_1.ya_cap1_type.id != 'range'"
    },
    {
      "prop": "ya_cap1_range_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_1.ya_cap1_type.id != 'range'"
    },
    {
      "prop": "ya_cap1_range_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "value",
      "hide": "data.capability_1.ya_cap1_type.id != 'range'"
    },
    {
      "prop": "ya_cap1_range_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value",
      "hide": "data.capability_1.ya_cap1_type.id != 'range'"
    },
    {
      "prop": "_toggle1_title_desc",
      "title": "Управление параметрами устройства, которые могут находиться только в одном из двух состояний. Например, кнопки, тумблеры и подобные им элементы управления, которые включают или выключают какую-либо дополнительную функцию устройства.",
      "type": "header",
      "hide": "data.capability_1.ya_cap1_type.id != 'toggle'"
    },
    {
      "prop": "ya_cap1_toggle_instance",
      "title": "Название функции умения",
      "type": "droplist",
      "data": [
        {
          "id": "backlight",
          "title": "Функция отвечает за включение подсветки."
        },
        {
          "id": "controls_locked",
          "title": "Функция отвечает за блокировку управления и включение детского режима."
        },
        {
          "id": "ionization",
          "title": "Функция отвечает за включение ионизации."
        },
        {
          "id": "keep_warm",
          "title": "Функция отвечает за включение поддержания тепла."
        },
        {
          "id": "mute",
          "title": "Функция отвечает за выключение звука на устройстве."
        },
        {
          "id": "oscillation",
          "title": "Функция отвечает за включение вращения. Например, включение вращения вентилятора."
        },
        {
          "id": "pause",
          "title": "Функция отвечает за временную остановку (паузу) текущей деятельности устройства. Например, постановка фильма на паузу или временная остановка работающего робота-пылесоса."
        }
      ],
      "hide": "data.capability_1.ya_cap1_type.id != 'toggle'"
    },
    {
      "prop": "_toggle1_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: ",
      "type": "header",
      "hide": "data.capability_1.ya_cap1_type.id != 'toggle'"
    },
    {
      "prop": "ya_cap1_toggle_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_1.ya_cap1_type.id != 'toggle'"
    },
    {
      "prop": "ya_cap1_toggle_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_1.ya_cap1_type.id != 'toggle'"
    },
    {
      "prop": "ya_cap1_toggle_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_1.ya_cap1_type.id != 'toggle'"
    },
    {
      "prop": "ya_cap1_toggle_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "value",
      "hide": "data.capability_1.ya_cap1_type.id != 'toggle'"
    },
    {
      "prop": "ya_cap1_toggle_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value",
      "hide": "data.capability_1.ya_cap1_type.id != 'toggle'"
    }
  ],
  "capability_2": [
    {
      "prop": "_title",
      "title": "Умение №3",
      "type": "header"
    },
    {
      "prop": "ya_cap2_type",
      "title": "Тип умения",
      "type": "droplist",
      "data": [
        {
          "id": "on_off",
          "title": "on_off"
        },
        {
          "id": "color_setting",
          "title": "color_setting"
        },
        {
          "id": "mode",
          "title": "mode"
        },
        {
          "id": "range",
          "title": "range"
        },
        {
          "id": "toggle",
          "title": "toggle"
        }
      ]
    },
    {
      "prop": "_on_off2_title_desc",
      "title": "Удаленное включение и выключение устройства (аналог нажатия кнопки питания на устройстве или его пульте управления). Является базовым умением для большинства устройств.",
      "type": "header",
      "hide": "data.capability_2.ya_cap2_type.id != 'on_off'"
    },
    {
      "prop": "_on_off2_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: true или false",
      "type": "header",
      "hide": "data.capability_2.ya_cap2_type.id != 'on_off'"
    },
    {
      "prop": "ya_cap2_on_off_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_2.ya_cap2_type.id != 'on_off'"
    },
    {
      "prop": "ya_cap2_on_off_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_2.ya_cap2_type.id != 'on_off'"
    },
    {
      "prop": "ya_cap2_on_off_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_2.ya_cap2_type.id != 'on_off'"
    },
    {
      "prop": "ya_cap2_on_off_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "Boolean(value)",
      "hide": "data.capability_2.ya_cap2_type.id != 'on_off'"
    },
    {
      "prop": "ya_cap2_on_off_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value ? 1 : 0",
      "hide": "data.capability_2.ya_cap2_type.id != 'on_off'"
    },
    {
      "prop": "_color_setting2_title_desc",
      "title": "Управление цветом для светящихся элементов в устройстве. Устройство может иметь одну или несколько из перечисленных функций:\n        изменение цвета своих светящихся элементов на произвольный из схемы HSV или из модели RGB;\n        изменение температуры цвета своих светящихся элементов;\n        воспроизведение различных визуальных эффектов.",
      "type": "header",
      "hide": "data.capability_2.ya_cap2_type.id != 'color_setting'"
    },
    {
      "prop": "ya_cap2_color_setting_instance",
      "title": "Название функции умения",
      "type": "droplist",
      "data": [
        {
          "id": "rgb",
          "title": "Произвольное изменение цвета (RGB)."
        },
        {
          "id": "hsv",
          "title": "Произвольное изменение цвета (HSV)."
        },
        {
          "id": "temperature_k",
          "title": "Изменение температуры цвета."
        },
        {
          "id": "scene",
          "title": "Темы и сценарии освещения."
        }
      ],
      "hide": "data.capability_2.ya_cap2_type.id != 'color_setting'"
    },
    {
      "prop": "_color_setting2_rgb_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: число от 0 до 16777215",
      "type": "header",
      "hide": "data.capability_2.ya_cap2_type.id != 'color_setting' || data.capability_2.ya_cap2_color_setting_instance.id != 'rgb'"
    },
    {
      "prop": "ya_cap2_color_setting_rgb_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_2.ya_cap2_type.id != 'color_setting' || data.capability_2.ya_cap2_color_setting_instance.id != 'rgb'"
    },
    {
      "prop": "ya_cap2_color_setting_rgb_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_2.ya_cap2_type.id != 'color_setting' || data.capability_2.ya_cap2_color_setting_instance.id != 'rgb'"
    },
    {
      "prop": "ya_cap2_color_setting_rgb_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_2.ya_cap2_type.id != 'color_setting' || data.capability_2.ya_cap2_color_setting_instance.id != 'rgb'"
    },
    {
      "prop": "ya_cap2_color_setting_rgb_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "value",
      "hide": "data.capability_2.ya_cap2_type.id != 'color_setting' || data.capability_2.ya_cap2_color_setting_instance.id != 'rgb'"
    },
    {
      "prop": "ya_cap2_color_setting_rgb_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value",
      "hide": "data.capability_2.ya_cap2_type.id != 'color_setting' || data.capability_2.ya_cap2_color_setting_instance.id != 'rgb'"
    },
    {
      "prop": "_color_setting2_hsv_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: объект вида {h: 255, s: 100, v: 50}",
      "type": "header",
      "hide": "data.capability_2.ya_cap2_type.id != 'color_setting' || data.capability_2.ya_cap2_color_setting_instance.id != 'hsv'"
    },
    {
      "prop": "ya_cap2_color_setting_hsv_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_2.ya_cap2_type.id != 'color_setting' || data.capability_2.ya_cap2_color_setting_instance.id != 'hsv'"
    },
    {
      "prop": "ya_cap2_color_setting_hsv_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_2.ya_cap2_type.id != 'color_setting' || data.capability_2.ya_cap2_color_setting_instance.id != 'hsv'"
    },
    {
      "prop": "ya_cap2_color_setting_hsv_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_2.ya_cap2_type.id != 'color_setting' || data.capability_2.ya_cap2_color_setting_instance.id != 'hsv'"
    },
    {
      "prop": "ya_cap2_color_setting_hsv_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "value",
      "hide": "data.capability_2.ya_cap2_type.id != 'color_setting' || data.capability_2.ya_cap2_color_setting_instance.id != 'hsv'"
    },
    {
      "prop": "ya_cap2_color_setting_hsv_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value",
      "hide": "data.capability_2.ya_cap2_type.id != 'color_setting' || data.capability_2.ya_cap2_color_setting_instance.id != 'hsv'"
    },
    {
      "prop": "ya_cap2_color_setting_temperature_k_min",
      "title": "Изменение температуры цвета в кельвинах. Min",
      "type": "number",
      "hide": "data.capability_2.ya_cap2_type.id != 'color_setting' || data.capability_2.ya_cap2_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "ya_cap2_color_setting_temperature_k_max",
      "title": "Изменение температуры цвета в кельвинах. Max",
      "type": "number",
      "hide": "data.capability_2.ya_cap2_type.id != 'color_setting' || data.capability_2.ya_cap2_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "_color_setting2_temperature_k_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: число (температура в кельвинах)",
      "type": "header",
      "hide": "data.capability_2.ya_cap2_type.id != 'color_setting' || data.capability_2.ya_cap2_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "ya_cap2_color_setting_temperature_k_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_2.ya_cap2_type.id != 'color_setting' || data.capability_2.ya_cap2_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "ya_cap2_color_setting_temperature_k_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_2.ya_cap2_type.id != 'color_setting' || data.capability_2.ya_cap2_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "ya_cap2_color_setting_temperature_k_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_2.ya_cap2_type.id != 'color_setting' || data.capability_2.ya_cap2_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "ya_cap2_color_setting_temperature_k_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "Number(value)",
      "hide": "data.capability_2.ya_cap2_type.id != 'color_setting' || data.capability_2.ya_cap2_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "ya_cap2_color_setting_temperature_k_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value",
      "hide": "data.capability_2.ya_cap2_type.id != 'color_setting' || data.capability_2.ya_cap2_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "ya_cap2_color_setting_color_scene_scenes",
      "title": "Темы и сценарии освещения. Значения чере запятую.",
      "type": "input",
      "hide": "data.capability_2.ya_cap2_type.id != 'color_setting' || data.capability_2.ya_cap2_color_setting_instance.id != 'scene'"
    },
    {
      "prop": "_color_setting2_color_scene_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: сценарий из списка выше",
      "type": "header",
      "hide": "data.capability_2.ya_cap2_type.id != 'color_setting' || data.capability_2.ya_cap2_color_setting_instance.id != 'scene'"
    },
    {
      "prop": "ya_cap2_color_setting_color_scene_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_2.ya_cap2_type.id != 'color_setting' || data.capability_2.ya_cap2_color_setting_instance.id != 'scene'"
    },
    {
      "prop": "ya_cap2_color_setting_color_scene_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_2.ya_cap2_type.id != 'color_setting' || data.capability_2.ya_cap2_color_setting_instance.id != 'scene'"
    },
    {
      "prop": "ya_cap2_color_setting_color_scene_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_2.ya_cap2_type.id != 'color_setting' || data.capability_2.ya_cap2_color_setting_instance.id != 'scene'"
    },
    {
      "prop": "ya_cap2_color_setting_color_scene_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "value",
      "hide": "data.capability_2.ya_cap2_type.id != 'color_setting' || data.capability_2.ya_cap2_color_setting_instance.id != 'scene'"
    },
    {
      "prop": "ya_cap2_color_setting_color_scene_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value",
      "hide": "data.capability_2.ya_cap2_type.id != 'color_setting' || data.capability_2.ya_cap2_color_setting_instance.id != 'scene'"
    },
    {
      "prop": "_mode2_title_desc",
      "title": "Переключение режимов работы устройства, например, переключение между температурными режимами работы кондиционера: «Охлаждение», «Нагрев» или «Авто».",
      "type": "header",
      "hide": "data.capability_2.ya_cap2_type.id != 'mode'"
    },
    {
      "prop": "ya_cap2_mode_instance",
      "title": "Название функции умения",
      "type": "droplist",
      "data": [
        {
          "id": "cleanup_mode",
          "title": "Установка режима уборки."
        },
        {
          "id": "coffee_mode",
          "title": "Установка режима работы кофеварки."
        },
        {
          "id": "dishwashing",
          "title": "Установка режима мытья посуды."
        },
        {
          "id": "fan_speed",
          "title": "Установка режима работы скорости вентиляции, например, в кондиционере, вентиляторе или обогревателе."
        },
        {
          "id": "heat",
          "title": "Установка режима нагрева."
        },
        {
          "id": "input_source",
          "title": "Установка источника сигнала."
        },
        {
          "id": "program",
          "title": "Установка какой-либо программы работы."
        },
        {
          "id": "swing",
          "title": "Установка направления воздуха в климатической технике."
        },
        {
          "id": "tea_mode",
          "title": "Установка режима приготовления чая."
        },
        {
          "id": "thermostat",
          "title": "Установка температурного режима работы климатической техники, например, в кондиционере."
        },
        {
          "id": "work_speed",
          "title": "Установка скорости работы."
        }
      ],
      "hide": "data.capability_2.ya_cap2_type.id != 'mode'"
    },
    {
      "prop": "ya_cap2_mode_modes",
      "title": "Режимы работы функции. Значения чере запятую.",
      "type": "input",
      "hide": "data.capability_2.ya_cap2_type.id != 'mode'"
    },
    {
      "prop": "_mode2_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: ",
      "type": "header",
      "hide": "data.capability_2.ya_cap2_type.id != 'mode'"
    },
    {
      "prop": "ya_cap2_mode_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_2.ya_cap2_type.id != 'mode'"
    },
    {
      "prop": "ya_cap2_mode_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_2.ya_cap2_type.id != 'mode'"
    },
    {
      "prop": "ya_cap2_mode_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_2.ya_cap2_type.id != 'mode'"
    },
    {
      "prop": "ya_cap2_mode_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "value",
      "hide": "data.capability_2.ya_cap2_type.id != 'mode'"
    },
    {
      "prop": "ya_cap2_mode_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value",
      "hide": "data.capability_2.ya_cap2_type.id != 'mode'"
    },
    {
      "prop": "_range2_title_desc",
      "title": "Управление параметрами устройства, которые имеют диапазон. Например, яркость лампы, громкость звука, температура обогревателя.",
      "type": "header",
      "hide": "data.capability_2.ya_cap2_type.id != 'range'"
    },
    {
      "prop": "ya_cap2_range_instance",
      "title": "Название функции умения",
      "type": "droplist",
      "data": [
        {
          "id": "brightness",
          "title": "Изменение яркости световых элементов."
        },
        {
          "id": "channel",
          "title": "Изменение канала, например телевизионного."
        },
        {
          "id": "humidity",
          "title": "Изменение влажности."
        },
        {
          "id": "open",
          "title": "Открывание чего-либо (открывание штор, окна)."
        },
        {
          "id": "temperature",
          "title": "Изменение температуры. Может обозначать температуру нагрева чайника, обогревателя или температуру кондиционера в каком-либо его режиме."
        },
        {
          "id": "volume",
          "title": "Изменение громкости устройства."
        }
      ],
      "hide": "data.capability_2.ya_cap2_type.id != 'range'"
    },
    {
      "prop": "ya_cap2_range_unit",
      "title": "Единицы измерения значений функции. Должно подходить для выбранной выше функции.",
      "type": "droplist",
      "data": [
        {
          "id": "unit.percent",
          "title": "Проценты"
        },
        {
          "id": "unit.temperature.celsius",
          "title": "Градусы цельсия"
        },
        {
          "id": "unit.temperature.kelvin",
          "title": "Кельвины"
        }
      ],
      "hide": "data.capability_2.ya_cap2_type.id != 'range'"
    },
    {
      "prop": "ya_cap2_range_random_access",
      "title": "Возможность устанавливать произвольные значения функции",
      "type": "cb",
      "default": 1,
      "hide": "data.capability_2.ya_cap2_type.id != 'range'"
    },
    {
      "prop": "ya_cap2_range_range_min",
      "title": "Минимальное допустимое значение",
      "type": "number",
      "hide": "data.capability_2.ya_cap2_type.id != 'range'"
    },
    {
      "prop": "ya_cap2_range_range_max",
      "title": "Максимальное допустимое значение",
      "type": "number",
      "hide": "data.capability_2.ya_cap2_type.id != 'range'"
    },
    {
      "prop": "ya_cap2_range_range_precision",
      "title": "Минимальный шаг изменения значений внутри диапазона",
      "type": "number",
      "default": 1,
      "hide": "data.capability_2.ya_cap2_type.id != 'range'"
    },
    {
      "prop": "_range2_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: ",
      "type": "header",
      "hide": "data.capability_2.ya_cap2_type.id != 'range'"
    },
    {
      "prop": "ya_cap2_range_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_2.ya_cap2_type.id != 'range'"
    },
    {
      "prop": "ya_cap2_range_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_2.ya_cap2_type.id != 'range'"
    },
    {
      "prop": "ya_cap2_range_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_2.ya_cap2_type.id != 'range'"
    },
    {
      "prop": "ya_cap2_range_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "value",
      "hide": "data.capability_2.ya_cap2_type.id != 'range'"
    },
    {
      "prop": "ya_cap2_range_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value",
      "hide": "data.capability_2.ya_cap2_type.id != 'range'"
    },
    {
      "prop": "_toggle2_title_desc",
      "title": "Управление параметрами устройства, которые могут находиться только в одном из двух состояний. Например, кнопки, тумблеры и подобные им элементы управления, которые включают или выключают какую-либо дополнительную функцию устройства.",
      "type": "header",
      "hide": "data.capability_2.ya_cap2_type.id != 'toggle'"
    },
    {
      "prop": "ya_cap2_toggle_instance",
      "title": "Название функции умения",
      "type": "droplist",
      "data": [
        {
          "id": "backlight",
          "title": "Функция отвечает за включение подсветки."
        },
        {
          "id": "controls_locked",
          "title": "Функция отвечает за блокировку управления и включение детского режима."
        },
        {
          "id": "ionization",
          "title": "Функция отвечает за включение ионизации."
        },
        {
          "id": "keep_warm",
          "title": "Функция отвечает за включение поддержания тепла."
        },
        {
          "id": "mute",
          "title": "Функция отвечает за выключение звука на устройстве."
        },
        {
          "id": "oscillation",
          "title": "Функция отвечает за включение вращения. Например, включение вращения вентилятора."
        },
        {
          "id": "pause",
          "title": "Функция отвечает за временную остановку (паузу) текущей деятельности устройства. Например, постановка фильма на паузу или временная остановка работающего робота-пылесоса."
        }
      ],
      "hide": "data.capability_2.ya_cap2_type.id != 'toggle'"
    },
    {
      "prop": "_toggle2_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: ",
      "type": "header",
      "hide": "data.capability_2.ya_cap2_type.id != 'toggle'"
    },
    {
      "prop": "ya_cap2_toggle_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_2.ya_cap2_type.id != 'toggle'"
    },
    {
      "prop": "ya_cap2_toggle_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_2.ya_cap2_type.id != 'toggle'"
    },
    {
      "prop": "ya_cap2_toggle_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_2.ya_cap2_type.id != 'toggle'"
    },
    {
      "prop": "ya_cap2_toggle_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "value",
      "hide": "data.capability_2.ya_cap2_type.id != 'toggle'"
    },
    {
      "prop": "ya_cap2_toggle_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value",
      "hide": "data.capability_2.ya_cap2_type.id != 'toggle'"
    }
  ],
  "capability_3": [
    {
      "prop": "_title",
      "title": "Умение №4",
      "type": "header"
    },
    {
      "prop": "ya_cap3_type",
      "title": "Тип умения",
      "type": "droplist",
      "data": [
        {
          "id": "on_off",
          "title": "on_off"
        },
        {
          "id": "color_setting",
          "title": "color_setting"
        },
        {
          "id": "mode",
          "title": "mode"
        },
        {
          "id": "range",
          "title": "range"
        },
        {
          "id": "toggle",
          "title": "toggle"
        }
      ]
    },
    {
      "prop": "_on_off3_title_desc",
      "title": "Удаленное включение и выключение устройства (аналог нажатия кнопки питания на устройстве или его пульте управления). Является базовым умением для большинства устройств.",
      "type": "header",
      "hide": "data.capability_3.ya_cap3_type.id != 'on_off'"
    },
    {
      "prop": "_on_off3_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: true или false",
      "type": "header",
      "hide": "data.capability_3.ya_cap3_type.id != 'on_off'"
    },
    {
      "prop": "ya_cap3_on_off_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_3.ya_cap3_type.id != 'on_off'"
    },
    {
      "prop": "ya_cap3_on_off_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_3.ya_cap3_type.id != 'on_off'"
    },
    {
      "prop": "ya_cap3_on_off_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_3.ya_cap3_type.id != 'on_off'"
    },
    {
      "prop": "ya_cap3_on_off_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "Boolean(value)",
      "hide": "data.capability_3.ya_cap3_type.id != 'on_off'"
    },
    {
      "prop": "ya_cap3_on_off_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value ? 1 : 0",
      "hide": "data.capability_3.ya_cap3_type.id != 'on_off'"
    },
    {
      "prop": "_color_setting3_title_desc",
      "title": "Управление цветом для светящихся элементов в устройстве. Устройство может иметь одну или несколько из перечисленных функций:\n        изменение цвета своих светящихся элементов на произвольный из схемы HSV или из модели RGB;\n        изменение температуры цвета своих светящихся элементов;\n        воспроизведение различных визуальных эффектов.",
      "type": "header",
      "hide": "data.capability_3.ya_cap3_type.id != 'color_setting'"
    },
    {
      "prop": "ya_cap3_color_setting_instance",
      "title": "Название функции умения",
      "type": "droplist",
      "data": [
        {
          "id": "rgb",
          "title": "Произвольное изменение цвета (RGB)."
        },
        {
          "id": "hsv",
          "title": "Произвольное изменение цвета (HSV)."
        },
        {
          "id": "temperature_k",
          "title": "Изменение температуры цвета."
        },
        {
          "id": "scene",
          "title": "Темы и сценарии освещения."
        }
      ],
      "hide": "data.capability_3.ya_cap3_type.id != 'color_setting'"
    },
    {
      "prop": "_color_setting3_rgb_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: число от 0 до 16777215",
      "type": "header",
      "hide": "data.capability_3.ya_cap3_type.id != 'color_setting' || data.capability_3.ya_cap3_color_setting_instance.id != 'rgb'"
    },
    {
      "prop": "ya_cap3_color_setting_rgb_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_3.ya_cap3_type.id != 'color_setting' || data.capability_3.ya_cap3_color_setting_instance.id != 'rgb'"
    },
    {
      "prop": "ya_cap3_color_setting_rgb_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_3.ya_cap3_type.id != 'color_setting' || data.capability_3.ya_cap3_color_setting_instance.id != 'rgb'"
    },
    {
      "prop": "ya_cap3_color_setting_rgb_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_3.ya_cap3_type.id != 'color_setting' || data.capability_3.ya_cap3_color_setting_instance.id != 'rgb'"
    },
    {
      "prop": "ya_cap3_color_setting_rgb_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "value",
      "hide": "data.capability_3.ya_cap3_type.id != 'color_setting' || data.capability_3.ya_cap3_color_setting_instance.id != 'rgb'"
    },
    {
      "prop": "ya_cap3_color_setting_rgb_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value",
      "hide": "data.capability_3.ya_cap3_type.id != 'color_setting' || data.capability_3.ya_cap3_color_setting_instance.id != 'rgb'"
    },
    {
      "prop": "_color_setting3_hsv_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: объект вида {h: 255, s: 100, v: 50}",
      "type": "header",
      "hide": "data.capability_3.ya_cap3_type.id != 'color_setting' || data.capability_3.ya_cap3_color_setting_instance.id != 'hsv'"
    },
    {
      "prop": "ya_cap3_color_setting_hsv_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_3.ya_cap3_type.id != 'color_setting' || data.capability_3.ya_cap3_color_setting_instance.id != 'hsv'"
    },
    {
      "prop": "ya_cap3_color_setting_hsv_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_3.ya_cap3_type.id != 'color_setting' || data.capability_3.ya_cap3_color_setting_instance.id != 'hsv'"
    },
    {
      "prop": "ya_cap3_color_setting_hsv_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_3.ya_cap3_type.id != 'color_setting' || data.capability_3.ya_cap3_color_setting_instance.id != 'hsv'"
    },
    {
      "prop": "ya_cap3_color_setting_hsv_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "value",
      "hide": "data.capability_3.ya_cap3_type.id != 'color_setting' || data.capability_3.ya_cap3_color_setting_instance.id != 'hsv'"
    },
    {
      "prop": "ya_cap3_color_setting_hsv_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value",
      "hide": "data.capability_3.ya_cap3_type.id != 'color_setting' || data.capability_3.ya_cap3_color_setting_instance.id != 'hsv'"
    },
    {
      "prop": "ya_cap3_color_setting_temperature_k_min",
      "title": "Изменение температуры цвета в кельвинах. Min",
      "type": "number",
      "hide": "data.capability_3.ya_cap3_type.id != 'color_setting' || data.capability_3.ya_cap3_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "ya_cap3_color_setting_temperature_k_max",
      "title": "Изменение температуры цвета в кельвинах. Max",
      "type": "number",
      "hide": "data.capability_3.ya_cap3_type.id != 'color_setting' || data.capability_3.ya_cap3_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "_color_setting3_temperature_k_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: число (температура в кельвинах)",
      "type": "header",
      "hide": "data.capability_3.ya_cap3_type.id != 'color_setting' || data.capability_3.ya_cap3_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "ya_cap3_color_setting_temperature_k_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_3.ya_cap3_type.id != 'color_setting' || data.capability_3.ya_cap3_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "ya_cap3_color_setting_temperature_k_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_3.ya_cap3_type.id != 'color_setting' || data.capability_3.ya_cap3_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "ya_cap3_color_setting_temperature_k_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_3.ya_cap3_type.id != 'color_setting' || data.capability_3.ya_cap3_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "ya_cap3_color_setting_temperature_k_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "Number(value)",
      "hide": "data.capability_3.ya_cap3_type.id != 'color_setting' || data.capability_3.ya_cap3_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "ya_cap3_color_setting_temperature_k_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value",
      "hide": "data.capability_3.ya_cap3_type.id != 'color_setting' || data.capability_3.ya_cap3_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "ya_cap3_color_setting_color_scene_scenes",
      "title": "Темы и сценарии освещения. Значения чере запятую.",
      "type": "input",
      "hide": "data.capability_3.ya_cap3_type.id != 'color_setting' || data.capability_3.ya_cap3_color_setting_instance.id != 'scene'"
    },
    {
      "prop": "_color_setting3_color_scene_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: сценарий из списка выше",
      "type": "header",
      "hide": "data.capability_3.ya_cap3_type.id != 'color_setting' || data.capability_3.ya_cap3_color_setting_instance.id != 'scene'"
    },
    {
      "prop": "ya_cap3_color_setting_color_scene_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_3.ya_cap3_type.id != 'color_setting' || data.capability_3.ya_cap3_color_setting_instance.id != 'scene'"
    },
    {
      "prop": "ya_cap3_color_setting_color_scene_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_3.ya_cap3_type.id != 'color_setting' || data.capability_3.ya_cap3_color_setting_instance.id != 'scene'"
    },
    {
      "prop": "ya_cap3_color_setting_color_scene_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_3.ya_cap3_type.id != 'color_setting' || data.capability_3.ya_cap3_color_setting_instance.id != 'scene'"
    },
    {
      "prop": "ya_cap3_color_setting_color_scene_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "value",
      "hide": "data.capability_3.ya_cap3_type.id != 'color_setting' || data.capability_3.ya_cap3_color_setting_instance.id != 'scene'"
    },
    {
      "prop": "ya_cap3_color_setting_color_scene_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value",
      "hide": "data.capability_3.ya_cap3_type.id != 'color_setting' || data.capability_3.ya_cap3_color_setting_instance.id != 'scene'"
    },
    {
      "prop": "_mode3_title_desc",
      "title": "Переключение режимов работы устройства, например, переключение между температурными режимами работы кондиционера: «Охлаждение», «Нагрев» или «Авто».",
      "type": "header",
      "hide": "data.capability_3.ya_cap3_type.id != 'mode'"
    },
    {
      "prop": "ya_cap3_mode_instance",
      "title": "Название функции умения",
      "type": "droplist",
      "data": [
        {
          "id": "cleanup_mode",
          "title": "Установка режима уборки."
        },
        {
          "id": "coffee_mode",
          "title": "Установка режима работы кофеварки."
        },
        {
          "id": "dishwashing",
          "title": "Установка режима мытья посуды."
        },
        {
          "id": "fan_speed",
          "title": "Установка режима работы скорости вентиляции, например, в кондиционере, вентиляторе или обогревателе."
        },
        {
          "id": "heat",
          "title": "Установка режима нагрева."
        },
        {
          "id": "input_source",
          "title": "Установка источника сигнала."
        },
        {
          "id": "program",
          "title": "Установка какой-либо программы работы."
        },
        {
          "id": "swing",
          "title": "Установка направления воздуха в климатической технике."
        },
        {
          "id": "tea_mode",
          "title": "Установка режима приготовления чая."
        },
        {
          "id": "thermostat",
          "title": "Установка температурного режима работы климатической техники, например, в кондиционере."
        },
        {
          "id": "work_speed",
          "title": "Установка скорости работы."
        }
      ],
      "hide": "data.capability_3.ya_cap3_type.id != 'mode'"
    },
    {
      "prop": "ya_cap3_mode_modes",
      "title": "Режимы работы функции. Значения чере запятую.",
      "type": "input",
      "hide": "data.capability_3.ya_cap3_type.id != 'mode'"
    },
    {
      "prop": "_mode3_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: ",
      "type": "header",
      "hide": "data.capability_3.ya_cap3_type.id != 'mode'"
    },
    {
      "prop": "ya_cap3_mode_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_3.ya_cap3_type.id != 'mode'"
    },
    {
      "prop": "ya_cap3_mode_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_3.ya_cap3_type.id != 'mode'"
    },
    {
      "prop": "ya_cap3_mode_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_3.ya_cap3_type.id != 'mode'"
    },
    {
      "prop": "ya_cap3_mode_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "value",
      "hide": "data.capability_3.ya_cap3_type.id != 'mode'"
    },
    {
      "prop": "ya_cap3_mode_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value",
      "hide": "data.capability_3.ya_cap3_type.id != 'mode'"
    },
    {
      "prop": "_range3_title_desc",
      "title": "Управление параметрами устройства, которые имеют диапазон. Например, яркость лампы, громкость звука, температура обогревателя.",
      "type": "header",
      "hide": "data.capability_3.ya_cap3_type.id != 'range'"
    },
    {
      "prop": "ya_cap3_range_instance",
      "title": "Название функции умения",
      "type": "droplist",
      "data": [
        {
          "id": "brightness",
          "title": "Изменение яркости световых элементов."
        },
        {
          "id": "channel",
          "title": "Изменение канала, например телевизионного."
        },
        {
          "id": "humidity",
          "title": "Изменение влажности."
        },
        {
          "id": "open",
          "title": "Открывание чего-либо (открывание штор, окна)."
        },
        {
          "id": "temperature",
          "title": "Изменение температуры. Может обозначать температуру нагрева чайника, обогревателя или температуру кондиционера в каком-либо его режиме."
        },
        {
          "id": "volume",
          "title": "Изменение громкости устройства."
        }
      ],
      "hide": "data.capability_3.ya_cap3_type.id != 'range'"
    },
    {
      "prop": "ya_cap3_range_unit",
      "title": "Единицы измерения значений функции. Должно подходить для выбранной выше функции.",
      "type": "droplist",
      "data": [
        {
          "id": "unit.percent",
          "title": "Проценты"
        },
        {
          "id": "unit.temperature.celsius",
          "title": "Градусы цельсия"
        },
        {
          "id": "unit.temperature.kelvin",
          "title": "Кельвины"
        }
      ],
      "hide": "data.capability_3.ya_cap3_type.id != 'range'"
    },
    {
      "prop": "ya_cap3_range_random_access",
      "title": "Возможность устанавливать произвольные значения функции",
      "type": "cb",
      "default": 1,
      "hide": "data.capability_3.ya_cap3_type.id != 'range'"
    },
    {
      "prop": "ya_cap3_range_range_min",
      "title": "Минимальное допустимое значение",
      "type": "number",
      "hide": "data.capability_3.ya_cap3_type.id != 'range'"
    },
    {
      "prop": "ya_cap3_range_range_max",
      "title": "Максимальное допустимое значение",
      "type": "number",
      "hide": "data.capability_3.ya_cap3_type.id != 'range'"
    },
    {
      "prop": "ya_cap3_range_range_precision",
      "title": "Минимальный шаг изменения значений внутри диапазона",
      "type": "number",
      "default": 1,
      "hide": "data.capability_3.ya_cap3_type.id != 'range'"
    },
    {
      "prop": "_range3_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: ",
      "type": "header",
      "hide": "data.capability_3.ya_cap3_type.id != 'range'"
    },
    {
      "prop": "ya_cap3_range_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_3.ya_cap3_type.id != 'range'"
    },
    {
      "prop": "ya_cap3_range_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_3.ya_cap3_type.id != 'range'"
    },
    {
      "prop": "ya_cap3_range_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_3.ya_cap3_type.id != 'range'"
    },
    {
      "prop": "ya_cap3_range_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "value",
      "hide": "data.capability_3.ya_cap3_type.id != 'range'"
    },
    {
      "prop": "ya_cap3_range_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value",
      "hide": "data.capability_3.ya_cap3_type.id != 'range'"
    },
    {
      "prop": "_toggle3_title_desc",
      "title": "Управление параметрами устройства, которые могут находиться только в одном из двух состояний. Например, кнопки, тумблеры и подобные им элементы управления, которые включают или выключают какую-либо дополнительную функцию устройства.",
      "type": "header",
      "hide": "data.capability_3.ya_cap3_type.id != 'toggle'"
    },
    {
      "prop": "ya_cap3_toggle_instance",
      "title": "Название функции умения",
      "type": "droplist",
      "data": [
        {
          "id": "backlight",
          "title": "Функция отвечает за включение подсветки."
        },
        {
          "id": "controls_locked",
          "title": "Функция отвечает за блокировку управления и включение детского режима."
        },
        {
          "id": "ionization",
          "title": "Функция отвечает за включение ионизации."
        },
        {
          "id": "keep_warm",
          "title": "Функция отвечает за включение поддержания тепла."
        },
        {
          "id": "mute",
          "title": "Функция отвечает за выключение звука на устройстве."
        },
        {
          "id": "oscillation",
          "title": "Функция отвечает за включение вращения. Например, включение вращения вентилятора."
        },
        {
          "id": "pause",
          "title": "Функция отвечает за временную остановку (паузу) текущей деятельности устройства. Например, постановка фильма на паузу или временная остановка работающего робота-пылесоса."
        }
      ],
      "hide": "data.capability_3.ya_cap3_type.id != 'toggle'"
    },
    {
      "prop": "_toggle3_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: ",
      "type": "header",
      "hide": "data.capability_3.ya_cap3_type.id != 'toggle'"
    },
    {
      "prop": "ya_cap3_toggle_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_3.ya_cap3_type.id != 'toggle'"
    },
    {
      "prop": "ya_cap3_toggle_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_3.ya_cap3_type.id != 'toggle'"
    },
    {
      "prop": "ya_cap3_toggle_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_3.ya_cap3_type.id != 'toggle'"
    },
    {
      "prop": "ya_cap3_toggle_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "value",
      "hide": "data.capability_3.ya_cap3_type.id != 'toggle'"
    },
    {
      "prop": "ya_cap3_toggle_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value",
      "hide": "data.capability_3.ya_cap3_type.id != 'toggle'"
    }
  ],
  "capability_4": [
    {
      "prop": "_title",
      "title": "Умение №5",
      "type": "header"
    },
    {
      "prop": "ya_cap4_type",
      "title": "Тип умения",
      "type": "droplist",
      "data": [
        {
          "id": "on_off",
          "title": "on_off"
        },
        {
          "id": "color_setting",
          "title": "color_setting"
        },
        {
          "id": "mode",
          "title": "mode"
        },
        {
          "id": "range",
          "title": "range"
        },
        {
          "id": "toggle",
          "title": "toggle"
        }
      ]
    },
    {
      "prop": "_on_off4_title_desc",
      "title": "Удаленное включение и выключение устройства (аналог нажатия кнопки питания на устройстве или его пульте управления). Является базовым умением для большинства устройств.",
      "type": "header",
      "hide": "data.capability_4.ya_cap4_type.id != 'on_off'"
    },
    {
      "prop": "_on_off4_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: true или false",
      "type": "header",
      "hide": "data.capability_4.ya_cap4_type.id != 'on_off'"
    },
    {
      "prop": "ya_cap4_on_off_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_4.ya_cap4_type.id != 'on_off'"
    },
    {
      "prop": "ya_cap4_on_off_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_4.ya_cap4_type.id != 'on_off'"
    },
    {
      "prop": "ya_cap4_on_off_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_4.ya_cap4_type.id != 'on_off'"
    },
    {
      "prop": "ya_cap4_on_off_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "Boolean(value)",
      "hide": "data.capability_4.ya_cap4_type.id != 'on_off'"
    },
    {
      "prop": "ya_cap4_on_off_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value ? 1 : 0",
      "hide": "data.capability_4.ya_cap4_type.id != 'on_off'"
    },
    {
      "prop": "_color_setting4_title_desc",
      "title": "Управление цветом для светящихся элементов в устройстве. Устройство может иметь одну или несколько из перечисленных функций:\n        изменение цвета своих светящихся элементов на произвольный из схемы HSV или из модели RGB;\n        изменение температуры цвета своих светящихся элементов;\n        воспроизведение различных визуальных эффектов.",
      "type": "header",
      "hide": "data.capability_4.ya_cap4_type.id != 'color_setting'"
    },
    {
      "prop": "ya_cap4_color_setting_instance",
      "title": "Название функции умения",
      "type": "droplist",
      "data": [
        {
          "id": "rgb",
          "title": "Произвольное изменение цвета (RGB)."
        },
        {
          "id": "hsv",
          "title": "Произвольное изменение цвета (HSV)."
        },
        {
          "id": "temperature_k",
          "title": "Изменение температуры цвета."
        },
        {
          "id": "scene",
          "title": "Темы и сценарии освещения."
        }
      ],
      "hide": "data.capability_4.ya_cap4_type.id != 'color_setting'"
    },
    {
      "prop": "_color_setting4_rgb_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: число от 0 до 16777215",
      "type": "header",
      "hide": "data.capability_4.ya_cap4_type.id != 'color_setting' || data.capability_4.ya_cap4_color_setting_instance.id != 'rgb'"
    },
    {
      "prop": "ya_cap4_color_setting_rgb_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_4.ya_cap4_type.id != 'color_setting' || data.capability_4.ya_cap4_color_setting_instance.id != 'rgb'"
    },
    {
      "prop": "ya_cap4_color_setting_rgb_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_4.ya_cap4_type.id != 'color_setting' || data.capability_4.ya_cap4_color_setting_instance.id != 'rgb'"
    },
    {
      "prop": "ya_cap4_color_setting_rgb_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_4.ya_cap4_type.id != 'color_setting' || data.capability_4.ya_cap4_color_setting_instance.id != 'rgb'"
    },
    {
      "prop": "ya_cap4_color_setting_rgb_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "value",
      "hide": "data.capability_4.ya_cap4_type.id != 'color_setting' || data.capability_4.ya_cap4_color_setting_instance.id != 'rgb'"
    },
    {
      "prop": "ya_cap4_color_setting_rgb_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value",
      "hide": "data.capability_4.ya_cap4_type.id != 'color_setting' || data.capability_4.ya_cap4_color_setting_instance.id != 'rgb'"
    },
    {
      "prop": "_color_setting4_hsv_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: объект вида {h: 255, s: 100, v: 50}",
      "type": "header",
      "hide": "data.capability_4.ya_cap4_type.id != 'color_setting' || data.capability_4.ya_cap4_color_setting_instance.id != 'hsv'"
    },
    {
      "prop": "ya_cap4_color_setting_hsv_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_4.ya_cap4_type.id != 'color_setting' || data.capability_4.ya_cap4_color_setting_instance.id != 'hsv'"
    },
    {
      "prop": "ya_cap4_color_setting_hsv_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_4.ya_cap4_type.id != 'color_setting' || data.capability_4.ya_cap4_color_setting_instance.id != 'hsv'"
    },
    {
      "prop": "ya_cap4_color_setting_hsv_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_4.ya_cap4_type.id != 'color_setting' || data.capability_4.ya_cap4_color_setting_instance.id != 'hsv'"
    },
    {
      "prop": "ya_cap4_color_setting_hsv_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "value",
      "hide": "data.capability_4.ya_cap4_type.id != 'color_setting' || data.capability_4.ya_cap4_color_setting_instance.id != 'hsv'"
    },
    {
      "prop": "ya_cap4_color_setting_hsv_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value",
      "hide": "data.capability_4.ya_cap4_type.id != 'color_setting' || data.capability_4.ya_cap4_color_setting_instance.id != 'hsv'"
    },
    {
      "prop": "ya_cap4_color_setting_temperature_k_min",
      "title": "Изменение температуры цвета в кельвинах. Min",
      "type": "number",
      "hide": "data.capability_4.ya_cap4_type.id != 'color_setting' || data.capability_4.ya_cap4_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "ya_cap4_color_setting_temperature_k_max",
      "title": "Изменение температуры цвета в кельвинах. Max",
      "type": "number",
      "hide": "data.capability_4.ya_cap4_type.id != 'color_setting' || data.capability_4.ya_cap4_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "_color_setting4_temperature_k_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: число (температура в кельвинах)",
      "type": "header",
      "hide": "data.capability_4.ya_cap4_type.id != 'color_setting' || data.capability_4.ya_cap4_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "ya_cap4_color_setting_temperature_k_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_4.ya_cap4_type.id != 'color_setting' || data.capability_4.ya_cap4_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "ya_cap4_color_setting_temperature_k_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_4.ya_cap4_type.id != 'color_setting' || data.capability_4.ya_cap4_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "ya_cap4_color_setting_temperature_k_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_4.ya_cap4_type.id != 'color_setting' || data.capability_4.ya_cap4_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "ya_cap4_color_setting_temperature_k_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "Number(value)",
      "hide": "data.capability_4.ya_cap4_type.id != 'color_setting' || data.capability_4.ya_cap4_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "ya_cap4_color_setting_temperature_k_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value",
      "hide": "data.capability_4.ya_cap4_type.id != 'color_setting' || data.capability_4.ya_cap4_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "ya_cap4_color_setting_color_scene_scenes",
      "title": "Темы и сценарии освещения. Значения чере запятую.",
      "type": "input",
      "hide": "data.capability_4.ya_cap4_type.id != 'color_setting' || data.capability_4.ya_cap4_color_setting_instance.id != 'scene'"
    },
    {
      "prop": "_color_setting4_color_scene_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: сценарий из списка выше",
      "type": "header",
      "hide": "data.capability_4.ya_cap4_type.id != 'color_setting' || data.capability_4.ya_cap4_color_setting_instance.id != 'scene'"
    },
    {
      "prop": "ya_cap4_color_setting_color_scene_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_4.ya_cap4_type.id != 'color_setting' || data.capability_4.ya_cap4_color_setting_instance.id != 'scene'"
    },
    {
      "prop": "ya_cap4_color_setting_color_scene_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_4.ya_cap4_type.id != 'color_setting' || data.capability_4.ya_cap4_color_setting_instance.id != 'scene'"
    },
    {
      "prop": "ya_cap4_color_setting_color_scene_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_4.ya_cap4_type.id != 'color_setting' || data.capability_4.ya_cap4_color_setting_instance.id != 'scene'"
    },
    {
      "prop": "ya_cap4_color_setting_color_scene_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "value",
      "hide": "data.capability_4.ya_cap4_type.id != 'color_setting' || data.capability_4.ya_cap4_color_setting_instance.id != 'scene'"
    },
    {
      "prop": "ya_cap4_color_setting_color_scene_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value",
      "hide": "data.capability_4.ya_cap4_type.id != 'color_setting' || data.capability_4.ya_cap4_color_setting_instance.id != 'scene'"
    },
    {
      "prop": "_mode4_title_desc",
      "title": "Переключение режимов работы устройства, например, переключение между температурными режимами работы кондиционера: «Охлаждение», «Нагрев» или «Авто».",
      "type": "header",
      "hide": "data.capability_4.ya_cap4_type.id != 'mode'"
    },
    {
      "prop": "ya_cap4_mode_instance",
      "title": "Название функции умения",
      "type": "droplist",
      "data": [
        {
          "id": "cleanup_mode",
          "title": "Установка режима уборки."
        },
        {
          "id": "coffee_mode",
          "title": "Установка режима работы кофеварки."
        },
        {
          "id": "dishwashing",
          "title": "Установка режима мытья посуды."
        },
        {
          "id": "fan_speed",
          "title": "Установка режима работы скорости вентиляции, например, в кондиционере, вентиляторе или обогревателе."
        },
        {
          "id": "heat",
          "title": "Установка режима нагрева."
        },
        {
          "id": "input_source",
          "title": "Установка источника сигнала."
        },
        {
          "id": "program",
          "title": "Установка какой-либо программы работы."
        },
        {
          "id": "swing",
          "title": "Установка направления воздуха в климатической технике."
        },
        {
          "id": "tea_mode",
          "title": "Установка режима приготовления чая."
        },
        {
          "id": "thermostat",
          "title": "Установка температурного режима работы климатической техники, например, в кондиционере."
        },
        {
          "id": "work_speed",
          "title": "Установка скорости работы."
        }
      ],
      "hide": "data.capability_4.ya_cap4_type.id != 'mode'"
    },
    {
      "prop": "ya_cap4_mode_modes",
      "title": "Режимы работы функции. Значения чере запятую.",
      "type": "input",
      "hide": "data.capability_4.ya_cap4_type.id != 'mode'"
    },
    {
      "prop": "_mode4_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: ",
      "type": "header",
      "hide": "data.capability_4.ya_cap4_type.id != 'mode'"
    },
    {
      "prop": "ya_cap4_mode_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_4.ya_cap4_type.id != 'mode'"
    },
    {
      "prop": "ya_cap4_mode_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_4.ya_cap4_type.id != 'mode'"
    },
    {
      "prop": "ya_cap4_mode_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_4.ya_cap4_type.id != 'mode'"
    },
    {
      "prop": "ya_cap4_mode_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "value",
      "hide": "data.capability_4.ya_cap4_type.id != 'mode'"
    },
    {
      "prop": "ya_cap4_mode_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value",
      "hide": "data.capability_4.ya_cap4_type.id != 'mode'"
    },
    {
      "prop": "_range4_title_desc",
      "title": "Управление параметрами устройства, которые имеют диапазон. Например, яркость лампы, громкость звука, температура обогревателя.",
      "type": "header",
      "hide": "data.capability_4.ya_cap4_type.id != 'range'"
    },
    {
      "prop": "ya_cap4_range_instance",
      "title": "Название функции умения",
      "type": "droplist",
      "data": [
        {
          "id": "brightness",
          "title": "Изменение яркости световых элементов."
        },
        {
          "id": "channel",
          "title": "Изменение канала, например телевизионного."
        },
        {
          "id": "humidity",
          "title": "Изменение влажности."
        },
        {
          "id": "open",
          "title": "Открывание чего-либо (открывание штор, окна)."
        },
        {
          "id": "temperature",
          "title": "Изменение температуры. Может обозначать температуру нагрева чайника, обогревателя или температуру кондиционера в каком-либо его режиме."
        },
        {
          "id": "volume",
          "title": "Изменение громкости устройства."
        }
      ],
      "hide": "data.capability_4.ya_cap4_type.id != 'range'"
    },
    {
      "prop": "ya_cap4_range_unit",
      "title": "Единицы измерения значений функции. Должно подходить для выбранной выше функции.",
      "type": "droplist",
      "data": [
        {
          "id": "unit.percent",
          "title": "Проценты"
        },
        {
          "id": "unit.temperature.celsius",
          "title": "Градусы цельсия"
        },
        {
          "id": "unit.temperature.kelvin",
          "title": "Кельвины"
        }
      ],
      "hide": "data.capability_4.ya_cap4_type.id != 'range'"
    },
    {
      "prop": "ya_cap4_range_random_access",
      "title": "Возможность устанавливать произвольные значения функции",
      "type": "cb",
      "default": 1,
      "hide": "data.capability_4.ya_cap4_type.id != 'range'"
    },
    {
      "prop": "ya_cap4_range_range_min",
      "title": "Минимальное допустимое значение",
      "type": "number",
      "hide": "data.capability_4.ya_cap4_type.id != 'range'"
    },
    {
      "prop": "ya_cap4_range_range_max",
      "title": "Максимальное допустимое значение",
      "type": "number",
      "hide": "data.capability_4.ya_cap4_type.id != 'range'"
    },
    {
      "prop": "ya_cap4_range_range_precision",
      "title": "Минимальный шаг изменения значений внутри диапазона",
      "type": "number",
      "default": 1,
      "hide": "data.capability_4.ya_cap4_type.id != 'range'"
    },
    {
      "prop": "_range4_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: ",
      "type": "header",
      "hide": "data.capability_4.ya_cap4_type.id != 'range'"
    },
    {
      "prop": "ya_cap4_range_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_4.ya_cap4_type.id != 'range'"
    },
    {
      "prop": "ya_cap4_range_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_4.ya_cap4_type.id != 'range'"
    },
    {
      "prop": "ya_cap4_range_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_4.ya_cap4_type.id != 'range'"
    },
    {
      "prop": "ya_cap4_range_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "value",
      "hide": "data.capability_4.ya_cap4_type.id != 'range'"
    },
    {
      "prop": "ya_cap4_range_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value",
      "hide": "data.capability_4.ya_cap4_type.id != 'range'"
    },
    {
      "prop": "_toggle4_title_desc",
      "title": "Управление параметрами устройства, которые могут находиться только в одном из двух состояний. Например, кнопки, тумблеры и подобные им элементы управления, которые включают или выключают какую-либо дополнительную функцию устройства.",
      "type": "header",
      "hide": "data.capability_4.ya_cap4_type.id != 'toggle'"
    },
    {
      "prop": "ya_cap4_toggle_instance",
      "title": "Название функции умения",
      "type": "droplist",
      "data": [
        {
          "id": "backlight",
          "title": "Функция отвечает за включение подсветки."
        },
        {
          "id": "controls_locked",
          "title": "Функция отвечает за блокировку управления и включение детского режима."
        },
        {
          "id": "ionization",
          "title": "Функция отвечает за включение ионизации."
        },
        {
          "id": "keep_warm",
          "title": "Функция отвечает за включение поддержания тепла."
        },
        {
          "id": "mute",
          "title": "Функция отвечает за выключение звука на устройстве."
        },
        {
          "id": "oscillation",
          "title": "Функция отвечает за включение вращения. Например, включение вращения вентилятора."
        },
        {
          "id": "pause",
          "title": "Функция отвечает за временную остановку (паузу) текущей деятельности устройства. Например, постановка фильма на паузу или временная остановка работающего робота-пылесоса."
        }
      ],
      "hide": "data.capability_4.ya_cap4_type.id != 'toggle'"
    },
    {
      "prop": "_toggle4_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: ",
      "type": "header",
      "hide": "data.capability_4.ya_cap4_type.id != 'toggle'"
    },
    {
      "prop": "ya_cap4_toggle_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_4.ya_cap4_type.id != 'toggle'"
    },
    {
      "prop": "ya_cap4_toggle_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_4.ya_cap4_type.id != 'toggle'"
    },
    {
      "prop": "ya_cap4_toggle_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_4.ya_cap4_type.id != 'toggle'"
    },
    {
      "prop": "ya_cap4_toggle_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "value",
      "hide": "data.capability_4.ya_cap4_type.id != 'toggle'"
    },
    {
      "prop": "ya_cap4_toggle_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value",
      "hide": "data.capability_4.ya_cap4_type.id != 'toggle'"
    }
  ],
  "capability_5": [
    {
      "prop": "_title",
      "title": "Умение №6",
      "type": "header"
    },
    {
      "prop": "ya_cap5_type",
      "title": "Тип умения",
      "type": "droplist",
      "data": [
        {
          "id": "on_off",
          "title": "on_off"
        },
        {
          "id": "color_setting",
          "title": "color_setting"
        },
        {
          "id": "mode",
          "title": "mode"
        },
        {
          "id": "range",
          "title": "range"
        },
        {
          "id": "toggle",
          "title": "toggle"
        }
      ]
    },
    {
      "prop": "_on_off5_title_desc",
      "title": "Удаленное включение и выключение устройства (аналог нажатия кнопки питания на устройстве или его пульте управления). Является базовым умением для большинства устройств.",
      "type": "header",
      "hide": "data.capability_5.ya_cap5_type.id != 'on_off'"
    },
    {
      "prop": "_on_off5_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: true или false",
      "type": "header",
      "hide": "data.capability_5.ya_cap5_type.id != 'on_off'"
    },
    {
      "prop": "ya_cap5_on_off_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_5.ya_cap5_type.id != 'on_off'"
    },
    {
      "prop": "ya_cap5_on_off_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_5.ya_cap5_type.id != 'on_off'"
    },
    {
      "prop": "ya_cap5_on_off_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_5.ya_cap5_type.id != 'on_off'"
    },
    {
      "prop": "ya_cap5_on_off_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "Boolean(value)",
      "hide": "data.capability_5.ya_cap5_type.id != 'on_off'"
    },
    {
      "prop": "ya_cap5_on_off_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value ? 1 : 0",
      "hide": "data.capability_5.ya_cap5_type.id != 'on_off'"
    },
    {
      "prop": "_color_setting5_title_desc",
      "title": "Управление цветом для светящихся элементов в устройстве. Устройство может иметь одну или несколько из перечисленных функций:\n        изменение цвета своих светящихся элементов на произвольный из схемы HSV или из модели RGB;\n        изменение температуры цвета своих светящихся элементов;\n        воспроизведение различных визуальных эффектов.",
      "type": "header",
      "hide": "data.capability_5.ya_cap5_type.id != 'color_setting'"
    },
    {
      "prop": "ya_cap5_color_setting_instance",
      "title": "Название функции умения",
      "type": "droplist",
      "data": [
        {
          "id": "rgb",
          "title": "Произвольное изменение цвета (RGB)."
        },
        {
          "id": "hsv",
          "title": "Произвольное изменение цвета (HSV)."
        },
        {
          "id": "temperature_k",
          "title": "Изменение температуры цвета."
        },
        {
          "id": "scene",
          "title": "Темы и сценарии освещения."
        }
      ],
      "hide": "data.capability_5.ya_cap5_type.id != 'color_setting'"
    },
    {
      "prop": "_color_setting5_rgb_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: число от 0 до 16777215",
      "type": "header",
      "hide": "data.capability_5.ya_cap5_type.id != 'color_setting' || data.capability_5.ya_cap5_color_setting_instance.id != 'rgb'"
    },
    {
      "prop": "ya_cap5_color_setting_rgb_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_5.ya_cap5_type.id != 'color_setting' || data.capability_5.ya_cap5_color_setting_instance.id != 'rgb'"
    },
    {
      "prop": "ya_cap5_color_setting_rgb_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_5.ya_cap5_type.id != 'color_setting' || data.capability_5.ya_cap5_color_setting_instance.id != 'rgb'"
    },
    {
      "prop": "ya_cap5_color_setting_rgb_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_5.ya_cap5_type.id != 'color_setting' || data.capability_5.ya_cap5_color_setting_instance.id != 'rgb'"
    },
    {
      "prop": "ya_cap5_color_setting_rgb_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "value",
      "hide": "data.capability_5.ya_cap5_type.id != 'color_setting' || data.capability_5.ya_cap5_color_setting_instance.id != 'rgb'"
    },
    {
      "prop": "ya_cap5_color_setting_rgb_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value",
      "hide": "data.capability_5.ya_cap5_type.id != 'color_setting' || data.capability_5.ya_cap5_color_setting_instance.id != 'rgb'"
    },
    {
      "prop": "_color_setting5_hsv_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: объект вида {h: 255, s: 100, v: 50}",
      "type": "header",
      "hide": "data.capability_5.ya_cap5_type.id != 'color_setting' || data.capability_5.ya_cap5_color_setting_instance.id != 'hsv'"
    },
    {
      "prop": "ya_cap5_color_setting_hsv_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_5.ya_cap5_type.id != 'color_setting' || data.capability_5.ya_cap5_color_setting_instance.id != 'hsv'"
    },
    {
      "prop": "ya_cap5_color_setting_hsv_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_5.ya_cap5_type.id != 'color_setting' || data.capability_5.ya_cap5_color_setting_instance.id != 'hsv'"
    },
    {
      "prop": "ya_cap5_color_setting_hsv_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_5.ya_cap5_type.id != 'color_setting' || data.capability_5.ya_cap5_color_setting_instance.id != 'hsv'"
    },
    {
      "prop": "ya_cap5_color_setting_hsv_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "value",
      "hide": "data.capability_5.ya_cap5_type.id != 'color_setting' || data.capability_5.ya_cap5_color_setting_instance.id != 'hsv'"
    },
    {
      "prop": "ya_cap5_color_setting_hsv_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value",
      "hide": "data.capability_5.ya_cap5_type.id != 'color_setting' || data.capability_5.ya_cap5_color_setting_instance.id != 'hsv'"
    },
    {
      "prop": "ya_cap5_color_setting_temperature_k_min",
      "title": "Изменение температуры цвета в кельвинах. Min",
      "type": "number",
      "hide": "data.capability_5.ya_cap5_type.id != 'color_setting' || data.capability_5.ya_cap5_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "ya_cap5_color_setting_temperature_k_max",
      "title": "Изменение температуры цвета в кельвинах. Max",
      "type": "number",
      "hide": "data.capability_5.ya_cap5_type.id != 'color_setting' || data.capability_5.ya_cap5_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "_color_setting5_temperature_k_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: число (температура в кельвинах)",
      "type": "header",
      "hide": "data.capability_5.ya_cap5_type.id != 'color_setting' || data.capability_5.ya_cap5_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "ya_cap5_color_setting_temperature_k_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_5.ya_cap5_type.id != 'color_setting' || data.capability_5.ya_cap5_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "ya_cap5_color_setting_temperature_k_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_5.ya_cap5_type.id != 'color_setting' || data.capability_5.ya_cap5_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "ya_cap5_color_setting_temperature_k_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_5.ya_cap5_type.id != 'color_setting' || data.capability_5.ya_cap5_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "ya_cap5_color_setting_temperature_k_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "Number(value)",
      "hide": "data.capability_5.ya_cap5_type.id != 'color_setting' || data.capability_5.ya_cap5_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "ya_cap5_color_setting_temperature_k_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value",
      "hide": "data.capability_5.ya_cap5_type.id != 'color_setting' || data.capability_5.ya_cap5_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "ya_cap5_color_setting_color_scene_scenes",
      "title": "Темы и сценарии освещения. Значения чере запятую.",
      "type": "input",
      "hide": "data.capability_5.ya_cap5_type.id != 'color_setting' || data.capability_5.ya_cap5_color_setting_instance.id != 'scene'"
    },
    {
      "prop": "_color_setting5_color_scene_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: сценарий из списка выше",
      "type": "header",
      "hide": "data.capability_5.ya_cap5_type.id != 'color_setting' || data.capability_5.ya_cap5_color_setting_instance.id != 'scene'"
    },
    {
      "prop": "ya_cap5_color_setting_color_scene_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_5.ya_cap5_type.id != 'color_setting' || data.capability_5.ya_cap5_color_setting_instance.id != 'scene'"
    },
    {
      "prop": "ya_cap5_color_setting_color_scene_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_5.ya_cap5_type.id != 'color_setting' || data.capability_5.ya_cap5_color_setting_instance.id != 'scene'"
    },
    {
      "prop": "ya_cap5_color_setting_color_scene_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_5.ya_cap5_type.id != 'color_setting' || data.capability_5.ya_cap5_color_setting_instance.id != 'scene'"
    },
    {
      "prop": "ya_cap5_color_setting_color_scene_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "value",
      "hide": "data.capability_5.ya_cap5_type.id != 'color_setting' || data.capability_5.ya_cap5_color_setting_instance.id != 'scene'"
    },
    {
      "prop": "ya_cap5_color_setting_color_scene_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value",
      "hide": "data.capability_5.ya_cap5_type.id != 'color_setting' || data.capability_5.ya_cap5_color_setting_instance.id != 'scene'"
    },
    {
      "prop": "_mode5_title_desc",
      "title": "Переключение режимов работы устройства, например, переключение между температурными режимами работы кондиционера: «Охлаждение», «Нагрев» или «Авто».",
      "type": "header",
      "hide": "data.capability_5.ya_cap5_type.id != 'mode'"
    },
    {
      "prop": "ya_cap5_mode_instance",
      "title": "Название функции умения",
      "type": "droplist",
      "data": [
        {
          "id": "cleanup_mode",
          "title": "Установка режима уборки."
        },
        {
          "id": "coffee_mode",
          "title": "Установка режима работы кофеварки."
        },
        {
          "id": "dishwashing",
          "title": "Установка режима мытья посуды."
        },
        {
          "id": "fan_speed",
          "title": "Установка режима работы скорости вентиляции, например, в кондиционере, вентиляторе или обогревателе."
        },
        {
          "id": "heat",
          "title": "Установка режима нагрева."
        },
        {
          "id": "input_source",
          "title": "Установка источника сигнала."
        },
        {
          "id": "program",
          "title": "Установка какой-либо программы работы."
        },
        {
          "id": "swing",
          "title": "Установка направления воздуха в климатической технике."
        },
        {
          "id": "tea_mode",
          "title": "Установка режима приготовления чая."
        },
        {
          "id": "thermostat",
          "title": "Установка температурного режима работы климатической техники, например, в кондиционере."
        },
        {
          "id": "work_speed",
          "title": "Установка скорости работы."
        }
      ],
      "hide": "data.capability_5.ya_cap5_type.id != 'mode'"
    },
    {
      "prop": "ya_cap5_mode_modes",
      "title": "Режимы работы функции. Значения чере запятую.",
      "type": "input",
      "hide": "data.capability_5.ya_cap5_type.id != 'mode'"
    },
    {
      "prop": "_mode5_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: ",
      "type": "header",
      "hide": "data.capability_5.ya_cap5_type.id != 'mode'"
    },
    {
      "prop": "ya_cap5_mode_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_5.ya_cap5_type.id != 'mode'"
    },
    {
      "prop": "ya_cap5_mode_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_5.ya_cap5_type.id != 'mode'"
    },
    {
      "prop": "ya_cap5_mode_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_5.ya_cap5_type.id != 'mode'"
    },
    {
      "prop": "ya_cap5_mode_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "value",
      "hide": "data.capability_5.ya_cap5_type.id != 'mode'"
    },
    {
      "prop": "ya_cap5_mode_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value",
      "hide": "data.capability_5.ya_cap5_type.id != 'mode'"
    },
    {
      "prop": "_range5_title_desc",
      "title": "Управление параметрами устройства, которые имеют диапазон. Например, яркость лампы, громкость звука, температура обогревателя.",
      "type": "header",
      "hide": "data.capability_5.ya_cap5_type.id != 'range'"
    },
    {
      "prop": "ya_cap5_range_instance",
      "title": "Название функции умения",
      "type": "droplist",
      "data": [
        {
          "id": "brightness",
          "title": "Изменение яркости световых элементов."
        },
        {
          "id": "channel",
          "title": "Изменение канала, например телевизионного."
        },
        {
          "id": "humidity",
          "title": "Изменение влажности."
        },
        {
          "id": "open",
          "title": "Открывание чего-либо (открывание штор, окна)."
        },
        {
          "id": "temperature",
          "title": "Изменение температуры. Может обозначать температуру нагрева чайника, обогревателя или температуру кондиционера в каком-либо его режиме."
        },
        {
          "id": "volume",
          "title": "Изменение громкости устройства."
        }
      ],
      "hide": "data.capability_5.ya_cap5_type.id != 'range'"
    },
    {
      "prop": "ya_cap5_range_unit",
      "title": "Единицы измерения значений функции. Должно подходить для выбранной выше функции.",
      "type": "droplist",
      "data": [
        {
          "id": "unit.percent",
          "title": "Проценты"
        },
        {
          "id": "unit.temperature.celsius",
          "title": "Градусы цельсия"
        },
        {
          "id": "unit.temperature.kelvin",
          "title": "Кельвины"
        }
      ],
      "hide": "data.capability_5.ya_cap5_type.id != 'range'"
    },
    {
      "prop": "ya_cap5_range_random_access",
      "title": "Возможность устанавливать произвольные значения функции",
      "type": "cb",
      "default": 1,
      "hide": "data.capability_5.ya_cap5_type.id != 'range'"
    },
    {
      "prop": "ya_cap5_range_range_min",
      "title": "Минимальное допустимое значение",
      "type": "number",
      "hide": "data.capability_5.ya_cap5_type.id != 'range'"
    },
    {
      "prop": "ya_cap5_range_range_max",
      "title": "Максимальное допустимое значение",
      "type": "number",
      "hide": "data.capability_5.ya_cap5_type.id != 'range'"
    },
    {
      "prop": "ya_cap5_range_range_precision",
      "title": "Минимальный шаг изменения значений внутри диапазона",
      "type": "number",
      "default": 1,
      "hide": "data.capability_5.ya_cap5_type.id != 'range'"
    },
    {
      "prop": "_range5_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: ",
      "type": "header",
      "hide": "data.capability_5.ya_cap5_type.id != 'range'"
    },
    {
      "prop": "ya_cap5_range_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_5.ya_cap5_type.id != 'range'"
    },
    {
      "prop": "ya_cap5_range_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_5.ya_cap5_type.id != 'range'"
    },
    {
      "prop": "ya_cap5_range_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_5.ya_cap5_type.id != 'range'"
    },
    {
      "prop": "ya_cap5_range_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "value",
      "hide": "data.capability_5.ya_cap5_type.id != 'range'"
    },
    {
      "prop": "ya_cap5_range_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value",
      "hide": "data.capability_5.ya_cap5_type.id != 'range'"
    },
    {
      "prop": "_toggle5_title_desc",
      "title": "Управление параметрами устройства, которые могут находиться только в одном из двух состояний. Например, кнопки, тумблеры и подобные им элементы управления, которые включают или выключают какую-либо дополнительную функцию устройства.",
      "type": "header",
      "hide": "data.capability_5.ya_cap5_type.id != 'toggle'"
    },
    {
      "prop": "ya_cap5_toggle_instance",
      "title": "Название функции умения",
      "type": "droplist",
      "data": [
        {
          "id": "backlight",
          "title": "Функция отвечает за включение подсветки."
        },
        {
          "id": "controls_locked",
          "title": "Функция отвечает за блокировку управления и включение детского режима."
        },
        {
          "id": "ionization",
          "title": "Функция отвечает за включение ионизации."
        },
        {
          "id": "keep_warm",
          "title": "Функция отвечает за включение поддержания тепла."
        },
        {
          "id": "mute",
          "title": "Функция отвечает за выключение звука на устройстве."
        },
        {
          "id": "oscillation",
          "title": "Функция отвечает за включение вращения. Например, включение вращения вентилятора."
        },
        {
          "id": "pause",
          "title": "Функция отвечает за временную остановку (паузу) текущей деятельности устройства. Например, постановка фильма на паузу или временная остановка работающего робота-пылесоса."
        }
      ],
      "hide": "data.capability_5.ya_cap5_type.id != 'toggle'"
    },
    {
      "prop": "_toggle5_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: ",
      "type": "header",
      "hide": "data.capability_5.ya_cap5_type.id != 'toggle'"
    },
    {
      "prop": "ya_cap5_toggle_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_5.ya_cap5_type.id != 'toggle'"
    },
    {
      "prop": "ya_cap5_toggle_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_5.ya_cap5_type.id != 'toggle'"
    },
    {
      "prop": "ya_cap5_toggle_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_5.ya_cap5_type.id != 'toggle'"
    },
    {
      "prop": "ya_cap5_toggle_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "value",
      "hide": "data.capability_5.ya_cap5_type.id != 'toggle'"
    },
    {
      "prop": "ya_cap5_toggle_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value",
      "hide": "data.capability_5.ya_cap5_type.id != 'toggle'"
    }
  ],
  "capability_6": [
    {
      "prop": "_title",
      "title": "Умение №7",
      "type": "header"
    },
    {
      "prop": "ya_cap6_type",
      "title": "Тип умения",
      "type": "droplist",
      "data": [
        {
          "id": "on_off",
          "title": "on_off"
        },
        {
          "id": "color_setting",
          "title": "color_setting"
        },
        {
          "id": "mode",
          "title": "mode"
        },
        {
          "id": "range",
          "title": "range"
        },
        {
          "id": "toggle",
          "title": "toggle"
        }
      ]
    },
    {
      "prop": "_on_off6_title_desc",
      "title": "Удаленное включение и выключение устройства (аналог нажатия кнопки питания на устройстве или его пульте управления). Является базовым умением для большинства устройств.",
      "type": "header",
      "hide": "data.capability_6.ya_cap6_type.id != 'on_off'"
    },
    {
      "prop": "_on_off6_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: true или false",
      "type": "header",
      "hide": "data.capability_6.ya_cap6_type.id != 'on_off'"
    },
    {
      "prop": "ya_cap6_on_off_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_6.ya_cap6_type.id != 'on_off'"
    },
    {
      "prop": "ya_cap6_on_off_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_6.ya_cap6_type.id != 'on_off'"
    },
    {
      "prop": "ya_cap6_on_off_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_6.ya_cap6_type.id != 'on_off'"
    },
    {
      "prop": "ya_cap6_on_off_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "Boolean(value)",
      "hide": "data.capability_6.ya_cap6_type.id != 'on_off'"
    },
    {
      "prop": "ya_cap6_on_off_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value ? 1 : 0",
      "hide": "data.capability_6.ya_cap6_type.id != 'on_off'"
    },
    {
      "prop": "_color_setting6_title_desc",
      "title": "Управление цветом для светящихся элементов в устройстве. Устройство может иметь одну или несколько из перечисленных функций:\n        изменение цвета своих светящихся элементов на произвольный из схемы HSV или из модели RGB;\n        изменение температуры цвета своих светящихся элементов;\n        воспроизведение различных визуальных эффектов.",
      "type": "header",
      "hide": "data.capability_6.ya_cap6_type.id != 'color_setting'"
    },
    {
      "prop": "ya_cap6_color_setting_instance",
      "title": "Название функции умения",
      "type": "droplist",
      "data": [
        {
          "id": "rgb",
          "title": "Произвольное изменение цвета (RGB)."
        },
        {
          "id": "hsv",
          "title": "Произвольное изменение цвета (HSV)."
        },
        {
          "id": "temperature_k",
          "title": "Изменение температуры цвета."
        },
        {
          "id": "scene",
          "title": "Темы и сценарии освещения."
        }
      ],
      "hide": "data.capability_6.ya_cap6_type.id != 'color_setting'"
    },
    {
      "prop": "_color_setting6_rgb_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: число от 0 до 16777215",
      "type": "header",
      "hide": "data.capability_6.ya_cap6_type.id != 'color_setting' || data.capability_6.ya_cap6_color_setting_instance.id != 'rgb'"
    },
    {
      "prop": "ya_cap6_color_setting_rgb_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_6.ya_cap6_type.id != 'color_setting' || data.capability_6.ya_cap6_color_setting_instance.id != 'rgb'"
    },
    {
      "prop": "ya_cap6_color_setting_rgb_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_6.ya_cap6_type.id != 'color_setting' || data.capability_6.ya_cap6_color_setting_instance.id != 'rgb'"
    },
    {
      "prop": "ya_cap6_color_setting_rgb_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_6.ya_cap6_type.id != 'color_setting' || data.capability_6.ya_cap6_color_setting_instance.id != 'rgb'"
    },
    {
      "prop": "ya_cap6_color_setting_rgb_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "value",
      "hide": "data.capability_6.ya_cap6_type.id != 'color_setting' || data.capability_6.ya_cap6_color_setting_instance.id != 'rgb'"
    },
    {
      "prop": "ya_cap6_color_setting_rgb_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value",
      "hide": "data.capability_6.ya_cap6_type.id != 'color_setting' || data.capability_6.ya_cap6_color_setting_instance.id != 'rgb'"
    },
    {
      "prop": "_color_setting6_hsv_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: объект вида {h: 255, s: 100, v: 50}",
      "type": "header",
      "hide": "data.capability_6.ya_cap6_type.id != 'color_setting' || data.capability_6.ya_cap6_color_setting_instance.id != 'hsv'"
    },
    {
      "prop": "ya_cap6_color_setting_hsv_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_6.ya_cap6_type.id != 'color_setting' || data.capability_6.ya_cap6_color_setting_instance.id != 'hsv'"
    },
    {
      "prop": "ya_cap6_color_setting_hsv_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_6.ya_cap6_type.id != 'color_setting' || data.capability_6.ya_cap6_color_setting_instance.id != 'hsv'"
    },
    {
      "prop": "ya_cap6_color_setting_hsv_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_6.ya_cap6_type.id != 'color_setting' || data.capability_6.ya_cap6_color_setting_instance.id != 'hsv'"
    },
    {
      "prop": "ya_cap6_color_setting_hsv_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "value",
      "hide": "data.capability_6.ya_cap6_type.id != 'color_setting' || data.capability_6.ya_cap6_color_setting_instance.id != 'hsv'"
    },
    {
      "prop": "ya_cap6_color_setting_hsv_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value",
      "hide": "data.capability_6.ya_cap6_type.id != 'color_setting' || data.capability_6.ya_cap6_color_setting_instance.id != 'hsv'"
    },
    {
      "prop": "ya_cap6_color_setting_temperature_k_min",
      "title": "Изменение температуры цвета в кельвинах. Min",
      "type": "number",
      "hide": "data.capability_6.ya_cap6_type.id != 'color_setting' || data.capability_6.ya_cap6_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "ya_cap6_color_setting_temperature_k_max",
      "title": "Изменение температуры цвета в кельвинах. Max",
      "type": "number",
      "hide": "data.capability_6.ya_cap6_type.id != 'color_setting' || data.capability_6.ya_cap6_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "_color_setting6_temperature_k_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: число (температура в кельвинах)",
      "type": "header",
      "hide": "data.capability_6.ya_cap6_type.id != 'color_setting' || data.capability_6.ya_cap6_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "ya_cap6_color_setting_temperature_k_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_6.ya_cap6_type.id != 'color_setting' || data.capability_6.ya_cap6_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "ya_cap6_color_setting_temperature_k_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_6.ya_cap6_type.id != 'color_setting' || data.capability_6.ya_cap6_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "ya_cap6_color_setting_temperature_k_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_6.ya_cap6_type.id != 'color_setting' || data.capability_6.ya_cap6_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "ya_cap6_color_setting_temperature_k_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "Number(value)",
      "hide": "data.capability_6.ya_cap6_type.id != 'color_setting' || data.capability_6.ya_cap6_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "ya_cap6_color_setting_temperature_k_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value",
      "hide": "data.capability_6.ya_cap6_type.id != 'color_setting' || data.capability_6.ya_cap6_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "ya_cap6_color_setting_color_scene_scenes",
      "title": "Темы и сценарии освещения. Значения чере запятую.",
      "type": "input",
      "hide": "data.capability_6.ya_cap6_type.id != 'color_setting' || data.capability_6.ya_cap6_color_setting_instance.id != 'scene'"
    },
    {
      "prop": "_color_setting6_color_scene_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: сценарий из списка выше",
      "type": "header",
      "hide": "data.capability_6.ya_cap6_type.id != 'color_setting' || data.capability_6.ya_cap6_color_setting_instance.id != 'scene'"
    },
    {
      "prop": "ya_cap6_color_setting_color_scene_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_6.ya_cap6_type.id != 'color_setting' || data.capability_6.ya_cap6_color_setting_instance.id != 'scene'"
    },
    {
      "prop": "ya_cap6_color_setting_color_scene_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_6.ya_cap6_type.id != 'color_setting' || data.capability_6.ya_cap6_color_setting_instance.id != 'scene'"
    },
    {
      "prop": "ya_cap6_color_setting_color_scene_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_6.ya_cap6_type.id != 'color_setting' || data.capability_6.ya_cap6_color_setting_instance.id != 'scene'"
    },
    {
      "prop": "ya_cap6_color_setting_color_scene_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "value",
      "hide": "data.capability_6.ya_cap6_type.id != 'color_setting' || data.capability_6.ya_cap6_color_setting_instance.id != 'scene'"
    },
    {
      "prop": "ya_cap6_color_setting_color_scene_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value",
      "hide": "data.capability_6.ya_cap6_type.id != 'color_setting' || data.capability_6.ya_cap6_color_setting_instance.id != 'scene'"
    },
    {
      "prop": "_mode6_title_desc",
      "title": "Переключение режимов работы устройства, например, переключение между температурными режимами работы кондиционера: «Охлаждение», «Нагрев» или «Авто».",
      "type": "header",
      "hide": "data.capability_6.ya_cap6_type.id != 'mode'"
    },
    {
      "prop": "ya_cap6_mode_instance",
      "title": "Название функции умения",
      "type": "droplist",
      "data": [
        {
          "id": "cleanup_mode",
          "title": "Установка режима уборки."
        },
        {
          "id": "coffee_mode",
          "title": "Установка режима работы кофеварки."
        },
        {
          "id": "dishwashing",
          "title": "Установка режима мытья посуды."
        },
        {
          "id": "fan_speed",
          "title": "Установка режима работы скорости вентиляции, например, в кондиционере, вентиляторе или обогревателе."
        },
        {
          "id": "heat",
          "title": "Установка режима нагрева."
        },
        {
          "id": "input_source",
          "title": "Установка источника сигнала."
        },
        {
          "id": "program",
          "title": "Установка какой-либо программы работы."
        },
        {
          "id": "swing",
          "title": "Установка направления воздуха в климатической технике."
        },
        {
          "id": "tea_mode",
          "title": "Установка режима приготовления чая."
        },
        {
          "id": "thermostat",
          "title": "Установка температурного режима работы климатической техники, например, в кондиционере."
        },
        {
          "id": "work_speed",
          "title": "Установка скорости работы."
        }
      ],
      "hide": "data.capability_6.ya_cap6_type.id != 'mode'"
    },
    {
      "prop": "ya_cap6_mode_modes",
      "title": "Режимы работы функции. Значения чере запятую.",
      "type": "input",
      "hide": "data.capability_6.ya_cap6_type.id != 'mode'"
    },
    {
      "prop": "_mode6_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: ",
      "type": "header",
      "hide": "data.capability_6.ya_cap6_type.id != 'mode'"
    },
    {
      "prop": "ya_cap6_mode_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_6.ya_cap6_type.id != 'mode'"
    },
    {
      "prop": "ya_cap6_mode_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_6.ya_cap6_type.id != 'mode'"
    },
    {
      "prop": "ya_cap6_mode_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_6.ya_cap6_type.id != 'mode'"
    },
    {
      "prop": "ya_cap6_mode_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "value",
      "hide": "data.capability_6.ya_cap6_type.id != 'mode'"
    },
    {
      "prop": "ya_cap6_mode_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value",
      "hide": "data.capability_6.ya_cap6_type.id != 'mode'"
    },
    {
      "prop": "_range6_title_desc",
      "title": "Управление параметрами устройства, которые имеют диапазон. Например, яркость лампы, громкость звука, температура обогревателя.",
      "type": "header",
      "hide": "data.capability_6.ya_cap6_type.id != 'range'"
    },
    {
      "prop": "ya_cap6_range_instance",
      "title": "Название функции умения",
      "type": "droplist",
      "data": [
        {
          "id": "brightness",
          "title": "Изменение яркости световых элементов."
        },
        {
          "id": "channel",
          "title": "Изменение канала, например телевизионного."
        },
        {
          "id": "humidity",
          "title": "Изменение влажности."
        },
        {
          "id": "open",
          "title": "Открывание чего-либо (открывание штор, окна)."
        },
        {
          "id": "temperature",
          "title": "Изменение температуры. Может обозначать температуру нагрева чайника, обогревателя или температуру кондиционера в каком-либо его режиме."
        },
        {
          "id": "volume",
          "title": "Изменение громкости устройства."
        }
      ],
      "hide": "data.capability_6.ya_cap6_type.id != 'range'"
    },
    {
      "prop": "ya_cap6_range_unit",
      "title": "Единицы измерения значений функции. Должно подходить для выбранной выше функции.",
      "type": "droplist",
      "data": [
        {
          "id": "unit.percent",
          "title": "Проценты"
        },
        {
          "id": "unit.temperature.celsius",
          "title": "Градусы цельсия"
        },
        {
          "id": "unit.temperature.kelvin",
          "title": "Кельвины"
        }
      ],
      "hide": "data.capability_6.ya_cap6_type.id != 'range'"
    },
    {
      "prop": "ya_cap6_range_random_access",
      "title": "Возможность устанавливать произвольные значения функции",
      "type": "cb",
      "default": 1,
      "hide": "data.capability_6.ya_cap6_type.id != 'range'"
    },
    {
      "prop": "ya_cap6_range_range_min",
      "title": "Минимальное допустимое значение",
      "type": "number",
      "hide": "data.capability_6.ya_cap6_type.id != 'range'"
    },
    {
      "prop": "ya_cap6_range_range_max",
      "title": "Максимальное допустимое значение",
      "type": "number",
      "hide": "data.capability_6.ya_cap6_type.id != 'range'"
    },
    {
      "prop": "ya_cap6_range_range_precision",
      "title": "Минимальный шаг изменения значений внутри диапазона",
      "type": "number",
      "default": 1,
      "hide": "data.capability_6.ya_cap6_type.id != 'range'"
    },
    {
      "prop": "_range6_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: ",
      "type": "header",
      "hide": "data.capability_6.ya_cap6_type.id != 'range'"
    },
    {
      "prop": "ya_cap6_range_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_6.ya_cap6_type.id != 'range'"
    },
    {
      "prop": "ya_cap6_range_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_6.ya_cap6_type.id != 'range'"
    },
    {
      "prop": "ya_cap6_range_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_6.ya_cap6_type.id != 'range'"
    },
    {
      "prop": "ya_cap6_range_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "value",
      "hide": "data.capability_6.ya_cap6_type.id != 'range'"
    },
    {
      "prop": "ya_cap6_range_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value",
      "hide": "data.capability_6.ya_cap6_type.id != 'range'"
    },
    {
      "prop": "_toggle6_title_desc",
      "title": "Управление параметрами устройства, которые могут находиться только в одном из двух состояний. Например, кнопки, тумблеры и подобные им элементы управления, которые включают или выключают какую-либо дополнительную функцию устройства.",
      "type": "header",
      "hide": "data.capability_6.ya_cap6_type.id != 'toggle'"
    },
    {
      "prop": "ya_cap6_toggle_instance",
      "title": "Название функции умения",
      "type": "droplist",
      "data": [
        {
          "id": "backlight",
          "title": "Функция отвечает за включение подсветки."
        },
        {
          "id": "controls_locked",
          "title": "Функция отвечает за блокировку управления и включение детского режима."
        },
        {
          "id": "ionization",
          "title": "Функция отвечает за включение ионизации."
        },
        {
          "id": "keep_warm",
          "title": "Функция отвечает за включение поддержания тепла."
        },
        {
          "id": "mute",
          "title": "Функция отвечает за выключение звука на устройстве."
        },
        {
          "id": "oscillation",
          "title": "Функция отвечает за включение вращения. Например, включение вращения вентилятора."
        },
        {
          "id": "pause",
          "title": "Функция отвечает за временную остановку (паузу) текущей деятельности устройства. Например, постановка фильма на паузу или временная остановка работающего робота-пылесоса."
        }
      ],
      "hide": "data.capability_6.ya_cap6_type.id != 'toggle'"
    },
    {
      "prop": "_toggle6_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: ",
      "type": "header",
      "hide": "data.capability_6.ya_cap6_type.id != 'toggle'"
    },
    {
      "prop": "ya_cap6_toggle_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_6.ya_cap6_type.id != 'toggle'"
    },
    {
      "prop": "ya_cap6_toggle_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_6.ya_cap6_type.id != 'toggle'"
    },
    {
      "prop": "ya_cap6_toggle_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_6.ya_cap6_type.id != 'toggle'"
    },
    {
      "prop": "ya_cap6_toggle_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "value",
      "hide": "data.capability_6.ya_cap6_type.id != 'toggle'"
    },
    {
      "prop": "ya_cap6_toggle_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value",
      "hide": "data.capability_6.ya_cap6_type.id != 'toggle'"
    }
  ],
  "capability_7": [
    {
      "prop": "_title",
      "title": "Умение №8",
      "type": "header"
    },
    {
      "prop": "ya_cap7_type",
      "title": "Тип умения",
      "type": "droplist",
      "data": [
        {
          "id": "on_off",
          "title": "on_off"
        },
        {
          "id": "color_setting",
          "title": "color_setting"
        },
        {
          "id": "mode",
          "title": "mode"
        },
        {
          "id": "range",
          "title": "range"
        },
        {
          "id": "toggle",
          "title": "toggle"
        }
      ]
    },
    {
      "prop": "_on_off7_title_desc",
      "title": "Удаленное включение и выключение устройства (аналог нажатия кнопки питания на устройстве или его пульте управления). Является базовым умением для большинства устройств.",
      "type": "header",
      "hide": "data.capability_7.ya_cap7_type.id != 'on_off'"
    },
    {
      "prop": "_on_off7_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: true или false",
      "type": "header",
      "hide": "data.capability_7.ya_cap7_type.id != 'on_off'"
    },
    {
      "prop": "ya_cap7_on_off_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_7.ya_cap7_type.id != 'on_off'"
    },
    {
      "prop": "ya_cap7_on_off_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_7.ya_cap7_type.id != 'on_off'"
    },
    {
      "prop": "ya_cap7_on_off_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_7.ya_cap7_type.id != 'on_off'"
    },
    {
      "prop": "ya_cap7_on_off_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "Boolean(value)",
      "hide": "data.capability_7.ya_cap7_type.id != 'on_off'"
    },
    {
      "prop": "ya_cap7_on_off_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value ? 1 : 0",
      "hide": "data.capability_7.ya_cap7_type.id != 'on_off'"
    },
    {
      "prop": "_color_setting7_title_desc",
      "title": "Управление цветом для светящихся элементов в устройстве. Устройство может иметь одну или несколько из перечисленных функций:\n        изменение цвета своих светящихся элементов на произвольный из схемы HSV или из модели RGB;\n        изменение температуры цвета своих светящихся элементов;\n        воспроизведение различных визуальных эффектов.",
      "type": "header",
      "hide": "data.capability_7.ya_cap7_type.id != 'color_setting'"
    },
    {
      "prop": "ya_cap7_color_setting_instance",
      "title": "Название функции умения",
      "type": "droplist",
      "data": [
        {
          "id": "rgb",
          "title": "Произвольное изменение цвета (RGB)."
        },
        {
          "id": "hsv",
          "title": "Произвольное изменение цвета (HSV)."
        },
        {
          "id": "temperature_k",
          "title": "Изменение температуры цвета."
        },
        {
          "id": "scene",
          "title": "Темы и сценарии освещения."
        }
      ],
      "hide": "data.capability_7.ya_cap7_type.id != 'color_setting'"
    },
    {
      "prop": "_color_setting7_rgb_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: число от 0 до 16777215",
      "type": "header",
      "hide": "data.capability_7.ya_cap7_type.id != 'color_setting' || data.capability_7.ya_cap7_color_setting_instance.id != 'rgb'"
    },
    {
      "prop": "ya_cap7_color_setting_rgb_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_7.ya_cap7_type.id != 'color_setting' || data.capability_7.ya_cap7_color_setting_instance.id != 'rgb'"
    },
    {
      "prop": "ya_cap7_color_setting_rgb_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_7.ya_cap7_type.id != 'color_setting' || data.capability_7.ya_cap7_color_setting_instance.id != 'rgb'"
    },
    {
      "prop": "ya_cap7_color_setting_rgb_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_7.ya_cap7_type.id != 'color_setting' || data.capability_7.ya_cap7_color_setting_instance.id != 'rgb'"
    },
    {
      "prop": "ya_cap7_color_setting_rgb_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "value",
      "hide": "data.capability_7.ya_cap7_type.id != 'color_setting' || data.capability_7.ya_cap7_color_setting_instance.id != 'rgb'"
    },
    {
      "prop": "ya_cap7_color_setting_rgb_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value",
      "hide": "data.capability_7.ya_cap7_type.id != 'color_setting' || data.capability_7.ya_cap7_color_setting_instance.id != 'rgb'"
    },
    {
      "prop": "_color_setting7_hsv_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: объект вида {h: 255, s: 100, v: 50}",
      "type": "header",
      "hide": "data.capability_7.ya_cap7_type.id != 'color_setting' || data.capability_7.ya_cap7_color_setting_instance.id != 'hsv'"
    },
    {
      "prop": "ya_cap7_color_setting_hsv_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_7.ya_cap7_type.id != 'color_setting' || data.capability_7.ya_cap7_color_setting_instance.id != 'hsv'"
    },
    {
      "prop": "ya_cap7_color_setting_hsv_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_7.ya_cap7_type.id != 'color_setting' || data.capability_7.ya_cap7_color_setting_instance.id != 'hsv'"
    },
    {
      "prop": "ya_cap7_color_setting_hsv_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_7.ya_cap7_type.id != 'color_setting' || data.capability_7.ya_cap7_color_setting_instance.id != 'hsv'"
    },
    {
      "prop": "ya_cap7_color_setting_hsv_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "value",
      "hide": "data.capability_7.ya_cap7_type.id != 'color_setting' || data.capability_7.ya_cap7_color_setting_instance.id != 'hsv'"
    },
    {
      "prop": "ya_cap7_color_setting_hsv_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value",
      "hide": "data.capability_7.ya_cap7_type.id != 'color_setting' || data.capability_7.ya_cap7_color_setting_instance.id != 'hsv'"
    },
    {
      "prop": "ya_cap7_color_setting_temperature_k_min",
      "title": "Изменение температуры цвета в кельвинах. Min",
      "type": "number",
      "hide": "data.capability_7.ya_cap7_type.id != 'color_setting' || data.capability_7.ya_cap7_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "ya_cap7_color_setting_temperature_k_max",
      "title": "Изменение температуры цвета в кельвинах. Max",
      "type": "number",
      "hide": "data.capability_7.ya_cap7_type.id != 'color_setting' || data.capability_7.ya_cap7_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "_color_setting7_temperature_k_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: число (температура в кельвинах)",
      "type": "header",
      "hide": "data.capability_7.ya_cap7_type.id != 'color_setting' || data.capability_7.ya_cap7_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "ya_cap7_color_setting_temperature_k_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_7.ya_cap7_type.id != 'color_setting' || data.capability_7.ya_cap7_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "ya_cap7_color_setting_temperature_k_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_7.ya_cap7_type.id != 'color_setting' || data.capability_7.ya_cap7_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "ya_cap7_color_setting_temperature_k_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_7.ya_cap7_type.id != 'color_setting' || data.capability_7.ya_cap7_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "ya_cap7_color_setting_temperature_k_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "Number(value)",
      "hide": "data.capability_7.ya_cap7_type.id != 'color_setting' || data.capability_7.ya_cap7_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "ya_cap7_color_setting_temperature_k_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value",
      "hide": "data.capability_7.ya_cap7_type.id != 'color_setting' || data.capability_7.ya_cap7_color_setting_instance.id != 'temperature_k'"
    },
    {
      "prop": "ya_cap7_color_setting_color_scene_scenes",
      "title": "Темы и сценарии освещения. Значения чере запятую.",
      "type": "input",
      "hide": "data.capability_7.ya_cap7_type.id != 'color_setting' || data.capability_7.ya_cap7_color_setting_instance.id != 'scene'"
    },
    {
      "prop": "_color_setting7_color_scene_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: сценарий из списка выше",
      "type": "header",
      "hide": "data.capability_7.ya_cap7_type.id != 'color_setting' || data.capability_7.ya_cap7_color_setting_instance.id != 'scene'"
    },
    {
      "prop": "ya_cap7_color_setting_color_scene_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_7.ya_cap7_type.id != 'color_setting' || data.capability_7.ya_cap7_color_setting_instance.id != 'scene'"
    },
    {
      "prop": "ya_cap7_color_setting_color_scene_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_7.ya_cap7_type.id != 'color_setting' || data.capability_7.ya_cap7_color_setting_instance.id != 'scene'"
    },
    {
      "prop": "ya_cap7_color_setting_color_scene_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_7.ya_cap7_type.id != 'color_setting' || data.capability_7.ya_cap7_color_setting_instance.id != 'scene'"
    },
    {
      "prop": "ya_cap7_color_setting_color_scene_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "value",
      "hide": "data.capability_7.ya_cap7_type.id != 'color_setting' || data.capability_7.ya_cap7_color_setting_instance.id != 'scene'"
    },
    {
      "prop": "ya_cap7_color_setting_color_scene_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value",
      "hide": "data.capability_7.ya_cap7_type.id != 'color_setting' || data.capability_7.ya_cap7_color_setting_instance.id != 'scene'"
    },
    {
      "prop": "_mode7_title_desc",
      "title": "Переключение режимов работы устройства, например, переключение между температурными режимами работы кондиционера: «Охлаждение», «Нагрев» или «Авто».",
      "type": "header",
      "hide": "data.capability_7.ya_cap7_type.id != 'mode'"
    },
    {
      "prop": "ya_cap7_mode_instance",
      "title": "Название функции умения",
      "type": "droplist",
      "data": [
        {
          "id": "cleanup_mode",
          "title": "Установка режима уборки."
        },
        {
          "id": "coffee_mode",
          "title": "Установка режима работы кофеварки."
        },
        {
          "id": "dishwashing",
          "title": "Установка режима мытья посуды."
        },
        {
          "id": "fan_speed",
          "title": "Установка режима работы скорости вентиляции, например, в кондиционере, вентиляторе или обогревателе."
        },
        {
          "id": "heat",
          "title": "Установка режима нагрева."
        },
        {
          "id": "input_source",
          "title": "Установка источника сигнала."
        },
        {
          "id": "program",
          "title": "Установка какой-либо программы работы."
        },
        {
          "id": "swing",
          "title": "Установка направления воздуха в климатической технике."
        },
        {
          "id": "tea_mode",
          "title": "Установка режима приготовления чая."
        },
        {
          "id": "thermostat",
          "title": "Установка температурного режима работы климатической техники, например, в кондиционере."
        },
        {
          "id": "work_speed",
          "title": "Установка скорости работы."
        }
      ],
      "hide": "data.capability_7.ya_cap7_type.id != 'mode'"
    },
    {
      "prop": "ya_cap7_mode_modes",
      "title": "Режимы работы функции. Значения чере запятую.",
      "type": "input",
      "hide": "data.capability_7.ya_cap7_type.id != 'mode'"
    },
    {
      "prop": "_mode7_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: ",
      "type": "header",
      "hide": "data.capability_7.ya_cap7_type.id != 'mode'"
    },
    {
      "prop": "ya_cap7_mode_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_7.ya_cap7_type.id != 'mode'"
    },
    {
      "prop": "ya_cap7_mode_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_7.ya_cap7_type.id != 'mode'"
    },
    {
      "prop": "ya_cap7_mode_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_7.ya_cap7_type.id != 'mode'"
    },
    {
      "prop": "ya_cap7_mode_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "value",
      "hide": "data.capability_7.ya_cap7_type.id != 'mode'"
    },
    {
      "prop": "ya_cap7_mode_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value",
      "hide": "data.capability_7.ya_cap7_type.id != 'mode'"
    },
    {
      "prop": "_range7_title_desc",
      "title": "Управление параметрами устройства, которые имеют диапазон. Например, яркость лампы, громкость звука, температура обогревателя.",
      "type": "header",
      "hide": "data.capability_7.ya_cap7_type.id != 'range'"
    },
    {
      "prop": "ya_cap7_range_instance",
      "title": "Название функции умения",
      "type": "droplist",
      "data": [
        {
          "id": "brightness",
          "title": "Изменение яркости световых элементов."
        },
        {
          "id": "channel",
          "title": "Изменение канала, например телевизионного."
        },
        {
          "id": "humidity",
          "title": "Изменение влажности."
        },
        {
          "id": "open",
          "title": "Открывание чего-либо (открывание штор, окна)."
        },
        {
          "id": "temperature",
          "title": "Изменение температуры. Может обозначать температуру нагрева чайника, обогревателя или температуру кондиционера в каком-либо его режиме."
        },
        {
          "id": "volume",
          "title": "Изменение громкости устройства."
        }
      ],
      "hide": "data.capability_7.ya_cap7_type.id != 'range'"
    },
    {
      "prop": "ya_cap7_range_unit",
      "title": "Единицы измерения значений функции. Должно подходить для выбранной выше функции.",
      "type": "droplist",
      "data": [
        {
          "id": "unit.percent",
          "title": "Проценты"
        },
        {
          "id": "unit.temperature.celsius",
          "title": "Градусы цельсия"
        },
        {
          "id": "unit.temperature.kelvin",
          "title": "Кельвины"
        }
      ],
      "hide": "data.capability_7.ya_cap7_type.id != 'range'"
    },
    {
      "prop": "ya_cap7_range_random_access",
      "title": "Возможность устанавливать произвольные значения функции",
      "type": "cb",
      "default": 1,
      "hide": "data.capability_7.ya_cap7_type.id != 'range'"
    },
    {
      "prop": "ya_cap7_range_range_min",
      "title": "Минимальное допустимое значение",
      "type": "number",
      "hide": "data.capability_7.ya_cap7_type.id != 'range'"
    },
    {
      "prop": "ya_cap7_range_range_max",
      "title": "Максимальное допустимое значение",
      "type": "number",
      "hide": "data.capability_7.ya_cap7_type.id != 'range'"
    },
    {
      "prop": "ya_cap7_range_range_precision",
      "title": "Минимальный шаг изменения значений внутри диапазона",
      "type": "number",
      "default": 1,
      "hide": "data.capability_7.ya_cap7_type.id != 'range'"
    },
    {
      "prop": "_range7_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: ",
      "type": "header",
      "hide": "data.capability_7.ya_cap7_type.id != 'range'"
    },
    {
      "prop": "ya_cap7_range_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_7.ya_cap7_type.id != 'range'"
    },
    {
      "prop": "ya_cap7_range_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_7.ya_cap7_type.id != 'range'"
    },
    {
      "prop": "ya_cap7_range_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_7.ya_cap7_type.id != 'range'"
    },
    {
      "prop": "ya_cap7_range_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "value",
      "hide": "data.capability_7.ya_cap7_type.id != 'range'"
    },
    {
      "prop": "ya_cap7_range_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value",
      "hide": "data.capability_7.ya_cap7_type.id != 'range'"
    },
    {
      "prop": "_toggle7_title_desc",
      "title": "Управление параметрами устройства, которые могут находиться только в одном из двух состояний. Например, кнопки, тумблеры и подобные им элементы управления, которые включают или выключают какую-либо дополнительную функцию устройства.",
      "type": "header",
      "hide": "data.capability_7.ya_cap7_type.id != 'toggle'"
    },
    {
      "prop": "ya_cap7_toggle_instance",
      "title": "Название функции умения",
      "type": "droplist",
      "data": [
        {
          "id": "backlight",
          "title": "Функция отвечает за включение подсветки."
        },
        {
          "id": "controls_locked",
          "title": "Функция отвечает за блокировку управления и включение детского режима."
        },
        {
          "id": "ionization",
          "title": "Функция отвечает за включение ионизации."
        },
        {
          "id": "keep_warm",
          "title": "Функция отвечает за включение поддержания тепла."
        },
        {
          "id": "mute",
          "title": "Функция отвечает за выключение звука на устройстве."
        },
        {
          "id": "oscillation",
          "title": "Функция отвечает за включение вращения. Например, включение вращения вентилятора."
        },
        {
          "id": "pause",
          "title": "Функция отвечает за временную остановку (паузу) текущей деятельности устройства. Например, постановка фильма на паузу или временная остановка работающего робота-пылесоса."
        }
      ],
      "hide": "data.capability_7.ya_cap7_type.id != 'toggle'"
    },
    {
      "prop": "_toggle7_fns_block_fns_title",
      "title": "Отсылаемое и принимаемое значение: ",
      "type": "header",
      "hide": "data.capability_7.ya_cap7_type.id != 'toggle'"
    },
    {
      "prop": "ya_cap7_toggle_fns_block_prop",
      "title": "Свойство (если заполнены обе команды ниже - используются они вместо записи в свойство)",
      "type": "droplist",
      "data": "__devprop",
      "hide": "data.capability_7.ya_cap7_type.id != 'toggle'"
    },
    {
      "prop": "ya_cap7_toggle_fns_block_cmd_on",
      "title": "Команда для запуска при true значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_7.ya_cap7_type.id != 'toggle'"
    },
    {
      "prop": "ya_cap7_toggle_fns_block_cmd_off",
      "title": "Команда для запуска при false значении",
      "type": "droplist",
      "data": "__devcmd",
      "hide": "data.capability_7.ya_cap7_type.id != 'toggle'"
    },
    {
      "prop": "ya_cap7_toggle_fns_block_set_fn",
      "title": "Функция пребразования для отправки значения, в value - свойство выбранное выше",
      "type": "input",
      "default": "value",
      "hide": "data.capability_7.ya_cap7_type.id != 'toggle'"
    },
    {
      "prop": "ya_cap7_toggle_fns_block_get_fn",
      "title": "Функция пребразования при приёме значения, в value - принимаемое значение",
      "type": "input",
      "default": "value",
      "hide": "data.capability_7.ya_cap7_type.id != 'toggle'"
    }
  ],
  "property_0": [
    {
      "prop": "_title",
      "title": "Свойство №1",
      "type": "header"
    },
    {
      "prop": "ya_prop0_type",
      "title": "Тип свойства",
      "default": "float",
      "type": "droplist",
      "data": [
        {
          "id": "float",
          "title": "Float"
        },
        {
          "id": "event",
          "title": "Event"
        }
      ]
    },
    {
      "prop": "_float0_title_desc",
      "title": "Отображение значений свойств устройства в числовом формате.",
      "type": "header",
      "hide": "data.property_0.ya_prop0_type.id != 'float'"
    },
    {
      "prop": "ya_prop0_float_instance",
      "title": "Название функции для свойства",
      "type": "droplist",
      "data": [
        {
          "id": "amperage",
          "title": "Отображение текущего потребления тока."
        },
        {
          "id": "battery_level",
          "title": "Отображение уровня заряда аккумулятора."
        },
        {
          "id": "co2_level",
          "title": "Отображение показаний уровня углекислого газа."
        },
        {
          "id": "electricity_meter",
          "title": "Отображение текущих показаний счетчика электроэнергии."
        },
        {
          "id": "food_level",
          "title": "Отображение показаний уровня корма."
        },
        {
          "id": "gas_meter",
          "title": "Отображение текущих показаний счетчика газа."
        },
        {
          "id": "heat_meter",
          "title": "Отображение текущих показаний счетчика тепла."
        },
        {
          "id": "humidity",
          "title": "Отображение показаний влажности."
        },
        {
          "id": "illumination",
          "title": "Отображение уровня освещенности."
        },
        {
          "id": "pm1_density",
          "title": "Отображение уровня загрязнения воздуха частицами PM1."
        },
        {
          "id": "pm2.5_density",
          "title": "Отображение уровня загрязнения воздуха частицами PM2.5."
        },
        {
          "id": "pm10_density",
          "title": "Отображение уровня загрязнения воздуха частицами PM10."
        },
        {
          "id": "power",
          "title": "Отображение текущей потребляемой мощности."
        },
        {
          "id": "pressure",
          "title": "Отображение давления."
        },
        {
          "id": "temperature",
          "title": "Отображение показаний температуры."
        },
        {
          "id": "tvoc",
          "title": "Отображение уровня загрязнения воздуха органическими веществами."
        },
        {
          "id": "voltage",
          "title": "Отображение текущего напряжения."
        },
        {
          "id": "water_level",
          "title": "Отображение показаний уровня воды."
        },
        {
          "id": "water_meter",
          "title": "Отображение текущих показаний счетчика воды."
        }
      ],
      "hide": "data.property_0.ya_prop0_type.id != 'float'"
    },
    {
      "prop": "ya_prop0_float_unit_amperage",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.ampere",
          "title": "Амперы"
        }
      ],
      "hide": "data.property_0.ya_prop0_type.id != 'float' || data.property_0.ya_prop0_float_instance.id != 'amperage'"
    },
    {
      "prop": "ya_prop0_float_unit_battery_level",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.percent",
          "title": "Проценты"
        }
      ],
      "hide": "data.property_0.ya_prop0_type.id != 'float' || data.property_0.ya_prop0_float_instance.id != 'battery_level'"
    },
    {
      "prop": "ya_prop0_float_unit_co2_level",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.ppm",
          "title": "ppm — parts per million"
        }
      ],
      "hide": "data.property_0.ya_prop0_type.id != 'float' || data.property_0.ya_prop0_float_instance.id != 'co2_level'"
    },
    {
      "prop": "ya_prop0_float_unit_electricity_meter",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.kilowatt_hour",
          "title": "киловатт-часы"
        }
      ],
      "hide": "data.property_0.ya_prop0_type.id != 'float' || data.property_0.ya_prop0_float_instance.id != 'electricity_meter'"
    },
    {
      "prop": "ya_prop0_float_unit_food_level",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.percent",
          "title": "Проценты"
        }
      ],
      "hide": "data.property_0.ya_prop0_type.id != 'float' || data.property_0.ya_prop0_float_instance.id != 'food_level'"
    },
    {
      "prop": "ya_prop0_float_unit_gas_meter",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.gas_meter",
          "title": "Кубические метры"
        }
      ],
      "hide": "data.property_0.ya_prop0_type.id != 'float' || data.property_0.ya_prop0_float_instance.id != 'gas_meter'"
    },
    {
      "prop": "ya_prop0_float_unit_heat_meter",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.gigacalorie",
          "title": "Гигакалории"
        }
      ],
      "hide": "data.property_0.ya_prop0_type.id != 'float' || data.property_0.ya_prop0_float_instance.id != 'heat_meter'"
    },
    {
      "prop": "ya_prop0_float_unit_humidity",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.percent",
          "title": "Проценты"
        }
      ],
      "hide": "data.property_0.ya_prop0_type.id != 'float' || data.property_0.ya_prop0_float_instance.id != 'humidity'"
    },
    {
      "prop": "ya_prop0_float_unit_illumination",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.illumination.lux",
          "title": "Люксы"
        }
      ],
      "hide": "data.property_0.ya_prop0_type.id != 'float' || data.property_0.ya_prop0_float_instance.id != 'illumination'"
    },
    {
      "prop": "ya_prop0_float_unit_pm1_density",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.density.mcg_m3",
          "title": "мкг/м3"
        }
      ],
      "hide": "data.property_0.ya_prop0_type.id != 'float' || data.property_0.ya_prop0_float_instance.id != 'pm1_density'"
    },
    {
      "prop": "ya_prop0_float_unit_pm2.5_density",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.density.mcg_m3",
          "title": "мкг/м3"
        }
      ],
      "hide": "data.property_0.ya_prop0_type.id != 'float' || data.property_0.ya_prop0_float_instance.id != 'pm2.5_density'"
    },
    {
      "prop": "ya_prop0_float_unit_pm10_density",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.density.mcg_m3",
          "title": "мкг/м3"
        }
      ],
      "hide": "data.property_0.ya_prop0_type.id != 'float' || data.property_0.ya_prop0_float_instance.id != 'pm10_density'"
    },
    {
      "prop": "ya_prop0_float_unit_power",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.watt",
          "title": "ватты"
        }
      ],
      "hide": "data.property_0.ya_prop0_type.id != 'float' || data.property_0.ya_prop0_float_instance.id != 'power'"
    },
    {
      "prop": "ya_prop0_float_unit_pressure",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.pressure.atm",
          "title": "атмосферы"
        },
        {
          "id": "unit.pressure.pascal",
          "title": "паскали"
        },
        {
          "id": "unit.pressure.bar",
          "title": "бары"
        },
        {
          "id": "unit.pressure.mmhg",
          "title": "миллиметры ртутного столба"
        }
      ],
      "hide": "data.property_0.ya_prop0_type.id != 'float' || data.property_0.ya_prop0_float_instance.id != 'pressure'"
    },
    {
      "prop": "ya_prop0_float_unit_temperature",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.temperature.celsius",
          "title": "градусы по цельсию"
        },
        {
          "id": "unit.temperature.kelvin",
          "title": "кельвины"
        }
      ],
      "hide": "data.property_0.ya_prop0_type.id != 'float' || data.property_0.ya_prop0_float_instance.id != 'temperature'"
    },
    {
      "prop": "ya_prop0_float_unit_tvoc",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.density.mcg_m3",
          "title": "мкг/м3"
        }
      ],
      "hide": "data.property_0.ya_prop0_type.id != 'float' || data.property_0.ya_prop0_float_instance.id != 'tvoc'"
    },
    {
      "prop": "ya_prop0_float_unit_voltage",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.volt",
          "title": "вольты"
        }
      ],
      "hide": "data.property_0.ya_prop0_type.id != 'float' || data.property_0.ya_prop0_float_instance.id != 'voltage'"
    },
    {
      "prop": "ya_prop0_float_unit_water_level",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.percent",
          "title": "проценты"
        }
      ],
      "hide": "data.property_0.ya_prop0_type.id != 'float' || data.property_0.ya_prop0_float_instance.id != 'water_level'"
    },
    {
      "prop": "ya_prop0_float_unit_water_meter",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.cubic_meter",
          "title": "кубические метры"
        }
      ],
      "hide": "data.property_0.ya_prop0_type.id != 'float' || data.property_0.ya_prop0_float_instance.id != 'water_meter'"
    },
    {
      "prop": "ya_prop0_float_calc",
      "title": "Выражение для вычисления для отправки данных. Можно использовать все свойства устройства.",
      "type": "input",
      "default": "value",
      "hide": "data.property_0.ya_prop0_type.id != 'float'"
    },
    {
      "prop": "_event0_title_desc",
      "title": "Отображение показаний свойств устройства в виде событий.",
      "type": "header",
      "hide": "data.property_0.ya_prop0_type.id != 'event'"
    },
    {
      "prop": "ya_prop0_event_instance",
      "title": "Название функции для свойства",
      "type": "droplist",
      "data": [
        {
          "id": "vibration",
          "title": "Отображение событий физического воздействия: вибрация, падение, переворачивание."
        },
        {
          "id": "open",
          "title": "Отображение событий открытия/закрытия дверей, окон и т.п."
        },
        {
          "id": "button",
          "title": "Отображение событий нажатия кнопки."
        },
        {
          "id": "motion",
          "title": "Отображение событий, связанных с наличием движения в области действия датчика."
        },
        {
          "id": "smoke",
          "title": "Отображение событий наличия дыма в помещении."
        },
        {
          "id": "gas",
          "title": "Отображение событий наличия газа в помещении."
        },
        {
          "id": "battery_level",
          "title": "Отображение событий заряда батареи."
        },
        {
          "id": "food_level",
          "title": "Отображение событий, связанных с уровнем корма."
        },
        {
          "id": "water_level",
          "title": "Отображение событий, связанных с уровнем воды."
        },
        {
          "id": "water_leak",
          "title": "Отображение событий протечки воды."
        }
      ],
      "hide": "data.property_0.ya_prop0_type.id != 'event'"
    },
    {
      "prop": "ya_prop0_event_event_vibration",
      "title": "Событие",
      "type": "droplist",
      "data": [
        {
          "id": "tilt",
          "title": "переворачивание"
        },
        {
          "id": "fall",
          "title": "падение"
        },
        {
          "id": "vibration",
          "title": "вибрация"
        }
      ],
      "hide": "data.property_0.ya_prop0_type.id != 'event' || data.property_0.ya_prop0_event_instance.id != 'vibration'"
    },
    {
      "prop": "ya_prop0_event_event_open",
      "title": "Событие",
      "type": "droplist",
      "data": [
        {
          "id": "opened",
          "title": "открыто"
        },
        {
          "id": "closed",
          "title": "закрыто"
        }
      ],
      "hide": "data.property_0.ya_prop0_type.id != 'event' || data.property_0.ya_prop0_event_instance.id != 'open'"
    },
    {
      "prop": "ya_prop0_event_event_button",
      "title": "Событие",
      "type": "droplist",
      "data": [
        {
          "id": "click",
          "title": "одиночное нажатие"
        },
        {
          "id": "double_click",
          "title": "двойное нажатие"
        },
        {
          "id": "long_press",
          "title": "долгое нажатие"
        }
      ],
      "hide": "data.property_0.ya_prop0_type.id != 'event' || data.property_0.ya_prop0_event_instance.id != 'button'"
    },
    {
      "prop": "ya_prop0_event_event_motion",
      "title": "Событие",
      "type": "droplist",
      "data": [
        {
          "id": "detected",
          "title": "обнаружено"
        },
        {
          "id": "not_detected",
          "title": "не обнаружено"
        }
      ],
      "hide": "data.property_0.ya_prop0_type.id != 'event' || data.property_0.ya_prop0_event_instance.id != 'motion'"
    },
    {
      "prop": "ya_prop0_event_event_smoke",
      "title": "Событие",
      "type": "droplist",
      "data": [
        {
          "id": "detected",
          "title": "обнаружено"
        },
        {
          "id": "not_detected",
          "title": "не обнаружено"
        },
        {
          "id": "high",
          "title": "высокий уровень"
        }
      ],
      "hide": "data.property_0.ya_prop0_type.id != 'event' || data.property_0.ya_prop0_event_instance.id != 'smoke'"
    },
    {
      "prop": "ya_prop0_event_event_gas",
      "title": "Событие",
      "type": "droplist",
      "data": [
        {
          "id": "detected",
          "title": "обнаружено"
        },
        {
          "id": "not_detected",
          "title": "не обнаружено"
        },
        {
          "id": "high",
          "title": "высокий уровень"
        }
      ],
      "hide": "data.property_0.ya_prop0_type.id != 'event' || data.property_0.ya_prop0_event_instance.id != 'gas'"
    },
    {
      "prop": "ya_prop0_event_event_battery_level",
      "title": "Событие",
      "type": "droplist",
      "data": [
        {
          "id": "low",
          "title": "низкий"
        },
        {
          "id": "normal",
          "title": "нормальный"
        }
      ],
      "hide": "data.property_0.ya_prop0_type.id != 'event' || data.property_0.ya_prop0_event_instance.id != 'battery_level'"
    },
    {
      "prop": "ya_prop0_event_event_food_level",
      "title": "Событие",
      "type": "droplist",
      "data": [
        {
          "id": "empty",
          "title": "пустой"
        },
        {
          "id": "low",
          "title": "низкий"
        },
        {
          "id": "normal",
          "title": "нормальный"
        }
      ],
      "hide": "data.property_0.ya_prop0_type.id != 'event' || data.property_0.ya_prop0_event_instance.id != 'food_level'"
    },
    {
      "prop": "ya_prop0_event_event_water_level",
      "title": "Событие",
      "type": "droplist",
      "data": [
        {
          "id": "empty",
          "title": "пустой"
        },
        {
          "id": "low",
          "title": "низкий"
        },
        {
          "id": "normal",
          "title": "нормальный"
        }
      ],
      "hide": "data.property_0.ya_prop0_type.id != 'event' || data.property_0.ya_prop0_event_instance.id != 'water_level'"
    },
    {
      "prop": "ya_prop0_event_event_water_leak",
      "title": "Событие",
      "type": "droplist",
      "data": [
        {
          "id": "dry",
          "title": "нет протечки"
        },
        {
          "id": "leak",
          "title": "протечка."
        }
      ],
      "hide": "data.property_0.ya_prop0_type.id != 'event' || data.property_0.ya_prop0_event_instance.id != 'water_leak'"
    },
    {
      "prop": "ya_prop0_event_calc",
      "title": "Выражение для вычисления, событие срабатывает при истинном значении выражения. Можно использовать все свойства устройства.",
      "type": "input",
      "default": "state == 1",
      "hide": "data.property_0.ya_prop0_type.id != 'event'"
    }
  ],
  "property_1": [
    {
      "prop": "_title",
      "title": "Свойство №2",
      "type": "header"
    },
    {
      "prop": "ya_prop1_type",
      "title": "Тип свойства",
      "default": "float",
      "type": "droplist",
      "data": [
        {
          "id": "float",
          "title": "Float"
        },
        {
          "id": "event",
          "title": "Event"
        }
      ]
    },
    {
      "prop": "_float1_title_desc",
      "title": "Отображение значений свойств устройства в числовом формате.",
      "type": "header",
      "hide": "data.property_1.ya_prop1_type.id != 'float'"
    },
    {
      "prop": "ya_prop1_float_instance",
      "title": "Название функции для свойства",
      "type": "droplist",
      "data": [
        {
          "id": "amperage",
          "title": "Отображение текущего потребления тока."
        },
        {
          "id": "battery_level",
          "title": "Отображение уровня заряда аккумулятора."
        },
        {
          "id": "co2_level",
          "title": "Отображение показаний уровня углекислого газа."
        },
        {
          "id": "electricity_meter",
          "title": "Отображение текущих показаний счетчика электроэнергии."
        },
        {
          "id": "food_level",
          "title": "Отображение показаний уровня корма."
        },
        {
          "id": "gas_meter",
          "title": "Отображение текущих показаний счетчика газа."
        },
        {
          "id": "heat_meter",
          "title": "Отображение текущих показаний счетчика тепла."
        },
        {
          "id": "humidity",
          "title": "Отображение показаний влажности."
        },
        {
          "id": "illumination",
          "title": "Отображение уровня освещенности."
        },
        {
          "id": "pm1_density",
          "title": "Отображение уровня загрязнения воздуха частицами PM1."
        },
        {
          "id": "pm2.5_density",
          "title": "Отображение уровня загрязнения воздуха частицами PM2.5."
        },
        {
          "id": "pm10_density",
          "title": "Отображение уровня загрязнения воздуха частицами PM10."
        },
        {
          "id": "power",
          "title": "Отображение текущей потребляемой мощности."
        },
        {
          "id": "pressure",
          "title": "Отображение давления."
        },
        {
          "id": "temperature",
          "title": "Отображение показаний температуры."
        },
        {
          "id": "tvoc",
          "title": "Отображение уровня загрязнения воздуха органическими веществами."
        },
        {
          "id": "voltage",
          "title": "Отображение текущего напряжения."
        },
        {
          "id": "water_level",
          "title": "Отображение показаний уровня воды."
        },
        {
          "id": "water_meter",
          "title": "Отображение текущих показаний счетчика воды."
        }
      ],
      "hide": "data.property_1.ya_prop1_type.id != 'float'"
    },
    {
      "prop": "ya_prop1_float_unit_amperage",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.ampere",
          "title": "Амперы"
        }
      ],
      "hide": "data.property_1.ya_prop1_type.id != 'float' || data.property_1.ya_prop1_float_instance.id != 'amperage'"
    },
    {
      "prop": "ya_prop1_float_unit_battery_level",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.percent",
          "title": "Проценты"
        }
      ],
      "hide": "data.property_1.ya_prop1_type.id != 'float' || data.property_1.ya_prop1_float_instance.id != 'battery_level'"
    },
    {
      "prop": "ya_prop1_float_unit_co2_level",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.ppm",
          "title": "ppm — parts per million"
        }
      ],
      "hide": "data.property_1.ya_prop1_type.id != 'float' || data.property_1.ya_prop1_float_instance.id != 'co2_level'"
    },
    {
      "prop": "ya_prop1_float_unit_electricity_meter",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.kilowatt_hour",
          "title": "киловатт-часы"
        }
      ],
      "hide": "data.property_1.ya_prop1_type.id != 'float' || data.property_1.ya_prop1_float_instance.id != 'electricity_meter'"
    },
    {
      "prop": "ya_prop1_float_unit_food_level",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.percent",
          "title": "Проценты"
        }
      ],
      "hide": "data.property_1.ya_prop1_type.id != 'float' || data.property_1.ya_prop1_float_instance.id != 'food_level'"
    },
    {
      "prop": "ya_prop1_float_unit_gas_meter",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.gas_meter",
          "title": "Кубические метры"
        }
      ],
      "hide": "data.property_1.ya_prop1_type.id != 'float' || data.property_1.ya_prop1_float_instance.id != 'gas_meter'"
    },
    {
      "prop": "ya_prop1_float_unit_heat_meter",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.gigacalorie",
          "title": "Гигакалории"
        }
      ],
      "hide": "data.property_1.ya_prop1_type.id != 'float' || data.property_1.ya_prop1_float_instance.id != 'heat_meter'"
    },
    {
      "prop": "ya_prop1_float_unit_humidity",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.percent",
          "title": "Проценты"
        }
      ],
      "hide": "data.property_1.ya_prop1_type.id != 'float' || data.property_1.ya_prop1_float_instance.id != 'humidity'"
    },
    {
      "prop": "ya_prop1_float_unit_illumination",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.illumination.lux",
          "title": "Люксы"
        }
      ],
      "hide": "data.property_1.ya_prop1_type.id != 'float' || data.property_1.ya_prop1_float_instance.id != 'illumination'"
    },
    {
      "prop": "ya_prop1_float_unit_pm1_density",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.density.mcg_m3",
          "title": "мкг/м3"
        }
      ],
      "hide": "data.property_1.ya_prop1_type.id != 'float' || data.property_1.ya_prop1_float_instance.id != 'pm1_density'"
    },
    {
      "prop": "ya_prop1_float_unit_pm2.5_density",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.density.mcg_m3",
          "title": "мкг/м3"
        }
      ],
      "hide": "data.property_1.ya_prop1_type.id != 'float' || data.property_1.ya_prop1_float_instance.id != 'pm2.5_density'"
    },
    {
      "prop": "ya_prop1_float_unit_pm10_density",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.density.mcg_m3",
          "title": "мкг/м3"
        }
      ],
      "hide": "data.property_1.ya_prop1_type.id != 'float' || data.property_1.ya_prop1_float_instance.id != 'pm10_density'"
    },
    {
      "prop": "ya_prop1_float_unit_power",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.watt",
          "title": "ватты"
        }
      ],
      "hide": "data.property_1.ya_prop1_type.id != 'float' || data.property_1.ya_prop1_float_instance.id != 'power'"
    },
    {
      "prop": "ya_prop1_float_unit_pressure",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.pressure.atm",
          "title": "атмосферы"
        },
        {
          "id": "unit.pressure.pascal",
          "title": "паскали"
        },
        {
          "id": "unit.pressure.bar",
          "title": "бары"
        },
        {
          "id": "unit.pressure.mmhg",
          "title": "миллиметры ртутного столба"
        }
      ],
      "hide": "data.property_1.ya_prop1_type.id != 'float' || data.property_1.ya_prop1_float_instance.id != 'pressure'"
    },
    {
      "prop": "ya_prop1_float_unit_temperature",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.temperature.celsius",
          "title": "градусы по цельсию"
        },
        {
          "id": "unit.temperature.kelvin",
          "title": "кельвины"
        }
      ],
      "hide": "data.property_1.ya_prop1_type.id != 'float' || data.property_1.ya_prop1_float_instance.id != 'temperature'"
    },
    {
      "prop": "ya_prop1_float_unit_tvoc",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.density.mcg_m3",
          "title": "мкг/м3"
        }
      ],
      "hide": "data.property_1.ya_prop1_type.id != 'float' || data.property_1.ya_prop1_float_instance.id != 'tvoc'"
    },
    {
      "prop": "ya_prop1_float_unit_voltage",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.volt",
          "title": "вольты"
        }
      ],
      "hide": "data.property_1.ya_prop1_type.id != 'float' || data.property_1.ya_prop1_float_instance.id != 'voltage'"
    },
    {
      "prop": "ya_prop1_float_unit_water_level",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.percent",
          "title": "проценты"
        }
      ],
      "hide": "data.property_1.ya_prop1_type.id != 'float' || data.property_1.ya_prop1_float_instance.id != 'water_level'"
    },
    {
      "prop": "ya_prop1_float_unit_water_meter",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.cubic_meter",
          "title": "кубические метры"
        }
      ],
      "hide": "data.property_1.ya_prop1_type.id != 'float' || data.property_1.ya_prop1_float_instance.id != 'water_meter'"
    },
    {
      "prop": "ya_prop1_float_calc",
      "title": "Выражение для вычисления для отправки данных. Можно использовать все свойства устройства.",
      "type": "input",
      "default": "value",
      "hide": "data.property_1.ya_prop1_type.id != 'float'"
    },
    {
      "prop": "_event1_title_desc",
      "title": "Отображение показаний свойств устройства в виде событий.",
      "type": "header",
      "hide": "data.property_1.ya_prop1_type.id != 'event'"
    },
    {
      "prop": "ya_prop1_event_instance",
      "title": "Название функции для свойства",
      "type": "droplist",
      "data": [
        {
          "id": "vibration",
          "title": "Отображение событий физического воздействия: вибрация, падение, переворачивание."
        },
        {
          "id": "open",
          "title": "Отображение событий открытия/закрытия дверей, окон и т.п."
        },
        {
          "id": "button",
          "title": "Отображение событий нажатия кнопки."
        },
        {
          "id": "motion",
          "title": "Отображение событий, связанных с наличием движения в области действия датчика."
        },
        {
          "id": "smoke",
          "title": "Отображение событий наличия дыма в помещении."
        },
        {
          "id": "gas",
          "title": "Отображение событий наличия газа в помещении."
        },
        {
          "id": "battery_level",
          "title": "Отображение событий заряда батареи."
        },
        {
          "id": "food_level",
          "title": "Отображение событий, связанных с уровнем корма."
        },
        {
          "id": "water_level",
          "title": "Отображение событий, связанных с уровнем воды."
        },
        {
          "id": "water_leak",
          "title": "Отображение событий протечки воды."
        }
      ],
      "hide": "data.property_1.ya_prop1_type.id != 'event'"
    },
    {
      "prop": "ya_prop1_event_event_vibration",
      "title": "Событие",
      "type": "droplist",
      "data": [
        {
          "id": "tilt",
          "title": "переворачивание"
        },
        {
          "id": "fall",
          "title": "падение"
        },
        {
          "id": "vibration",
          "title": "вибрация"
        }
      ],
      "hide": "data.property_1.ya_prop1_type.id != 'event' || data.property_1.ya_prop1_event_instance.id != 'vibration'"
    },
    {
      "prop": "ya_prop1_event_event_open",
      "title": "Событие",
      "type": "droplist",
      "data": [
        {
          "id": "opened",
          "title": "открыто"
        },
        {
          "id": "closed",
          "title": "закрыто"
        }
      ],
      "hide": "data.property_1.ya_prop1_type.id != 'event' || data.property_1.ya_prop1_event_instance.id != 'open'"
    },
    {
      "prop": "ya_prop1_event_event_button",
      "title": "Событие",
      "type": "droplist",
      "data": [
        {
          "id": "click",
          "title": "одиночное нажатие"
        },
        {
          "id": "double_click",
          "title": "двойное нажатие"
        },
        {
          "id": "long_press",
          "title": "долгое нажатие"
        }
      ],
      "hide": "data.property_1.ya_prop1_type.id != 'event' || data.property_1.ya_prop1_event_instance.id != 'button'"
    },
    {
      "prop": "ya_prop1_event_event_motion",
      "title": "Событие",
      "type": "droplist",
      "data": [
        {
          "id": "detected",
          "title": "обнаружено"
        },
        {
          "id": "not_detected",
          "title": "не обнаружено"
        }
      ],
      "hide": "data.property_1.ya_prop1_type.id != 'event' || data.property_1.ya_prop1_event_instance.id != 'motion'"
    },
    {
      "prop": "ya_prop1_event_event_smoke",
      "title": "Событие",
      "type": "droplist",
      "data": [
        {
          "id": "detected",
          "title": "обнаружено"
        },
        {
          "id": "not_detected",
          "title": "не обнаружено"
        },
        {
          "id": "high",
          "title": "высокий уровень"
        }
      ],
      "hide": "data.property_1.ya_prop1_type.id != 'event' || data.property_1.ya_prop1_event_instance.id != 'smoke'"
    },
    {
      "prop": "ya_prop1_event_event_gas",
      "title": "Событие",
      "type": "droplist",
      "data": [
        {
          "id": "detected",
          "title": "обнаружено"
        },
        {
          "id": "not_detected",
          "title": "не обнаружено"
        },
        {
          "id": "high",
          "title": "высокий уровень"
        }
      ],
      "hide": "data.property_1.ya_prop1_type.id != 'event' || data.property_1.ya_prop1_event_instance.id != 'gas'"
    },
    {
      "prop": "ya_prop1_event_event_battery_level",
      "title": "Событие",
      "type": "droplist",
      "data": [
        {
          "id": "low",
          "title": "низкий"
        },
        {
          "id": "normal",
          "title": "нормальный"
        }
      ],
      "hide": "data.property_1.ya_prop1_type.id != 'event' || data.property_1.ya_prop1_event_instance.id != 'battery_level'"
    },
    {
      "prop": "ya_prop1_event_event_food_level",
      "title": "Событие",
      "type": "droplist",
      "data": [
        {
          "id": "empty",
          "title": "пустой"
        },
        {
          "id": "low",
          "title": "низкий"
        },
        {
          "id": "normal",
          "title": "нормальный"
        }
      ],
      "hide": "data.property_1.ya_prop1_type.id != 'event' || data.property_1.ya_prop1_event_instance.id != 'food_level'"
    },
    {
      "prop": "ya_prop1_event_event_water_level",
      "title": "Событие",
      "type": "droplist",
      "data": [
        {
          "id": "empty",
          "title": "пустой"
        },
        {
          "id": "low",
          "title": "низкий"
        },
        {
          "id": "normal",
          "title": "нормальный"
        }
      ],
      "hide": "data.property_1.ya_prop1_type.id != 'event' || data.property_1.ya_prop1_event_instance.id != 'water_level'"
    },
    {
      "prop": "ya_prop1_event_event_water_leak",
      "title": "Событие",
      "type": "droplist",
      "data": [
        {
          "id": "dry",
          "title": "нет протечки"
        },
        {
          "id": "leak",
          "title": "протечка."
        }
      ],
      "hide": "data.property_1.ya_prop1_type.id != 'event' || data.property_1.ya_prop1_event_instance.id != 'water_leak'"
    },
    {
      "prop": "ya_prop1_event_calc",
      "title": "Выражение для вычисления, событие срабатывает при истинном значении выражения. Можно использовать все свойства устройства.",
      "type": "input",
      "default": "state == 1",
      "hide": "data.property_1.ya_prop1_type.id != 'event'"
    }
  ],
  "property_2": [
    {
      "prop": "_title",
      "title": "Свойство №3",
      "type": "header"
    },
    {
      "prop": "ya_prop2_type",
      "title": "Тип свойства",
      "default": "float",
      "type": "droplist",
      "data": [
        {
          "id": "float",
          "title": "Float"
        },
        {
          "id": "event",
          "title": "Event"
        }
      ]
    },
    {
      "prop": "_float2_title_desc",
      "title": "Отображение значений свойств устройства в числовом формате.",
      "type": "header",
      "hide": "data.property_2.ya_prop2_type.id != 'float'"
    },
    {
      "prop": "ya_prop2_float_instance",
      "title": "Название функции для свойства",
      "type": "droplist",
      "data": [
        {
          "id": "amperage",
          "title": "Отображение текущего потребления тока."
        },
        {
          "id": "battery_level",
          "title": "Отображение уровня заряда аккумулятора."
        },
        {
          "id": "co2_level",
          "title": "Отображение показаний уровня углекислого газа."
        },
        {
          "id": "electricity_meter",
          "title": "Отображение текущих показаний счетчика электроэнергии."
        },
        {
          "id": "food_level",
          "title": "Отображение показаний уровня корма."
        },
        {
          "id": "gas_meter",
          "title": "Отображение текущих показаний счетчика газа."
        },
        {
          "id": "heat_meter",
          "title": "Отображение текущих показаний счетчика тепла."
        },
        {
          "id": "humidity",
          "title": "Отображение показаний влажности."
        },
        {
          "id": "illumination",
          "title": "Отображение уровня освещенности."
        },
        {
          "id": "pm1_density",
          "title": "Отображение уровня загрязнения воздуха частицами PM1."
        },
        {
          "id": "pm2.5_density",
          "title": "Отображение уровня загрязнения воздуха частицами PM2.5."
        },
        {
          "id": "pm10_density",
          "title": "Отображение уровня загрязнения воздуха частицами PM10."
        },
        {
          "id": "power",
          "title": "Отображение текущей потребляемой мощности."
        },
        {
          "id": "pressure",
          "title": "Отображение давления."
        },
        {
          "id": "temperature",
          "title": "Отображение показаний температуры."
        },
        {
          "id": "tvoc",
          "title": "Отображение уровня загрязнения воздуха органическими веществами."
        },
        {
          "id": "voltage",
          "title": "Отображение текущего напряжения."
        },
        {
          "id": "water_level",
          "title": "Отображение показаний уровня воды."
        },
        {
          "id": "water_meter",
          "title": "Отображение текущих показаний счетчика воды."
        }
      ],
      "hide": "data.property_2.ya_prop2_type.id != 'float'"
    },
    {
      "prop": "ya_prop2_float_unit_amperage",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.ampere",
          "title": "Амперы"
        }
      ],
      "hide": "data.property_2.ya_prop2_type.id != 'float' || data.property_2.ya_prop2_float_instance.id != 'amperage'"
    },
    {
      "prop": "ya_prop2_float_unit_battery_level",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.percent",
          "title": "Проценты"
        }
      ],
      "hide": "data.property_2.ya_prop2_type.id != 'float' || data.property_2.ya_prop2_float_instance.id != 'battery_level'"
    },
    {
      "prop": "ya_prop2_float_unit_co2_level",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.ppm",
          "title": "ppm — parts per million"
        }
      ],
      "hide": "data.property_2.ya_prop2_type.id != 'float' || data.property_2.ya_prop2_float_instance.id != 'co2_level'"
    },
    {
      "prop": "ya_prop2_float_unit_electricity_meter",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.kilowatt_hour",
          "title": "киловатт-часы"
        }
      ],
      "hide": "data.property_2.ya_prop2_type.id != 'float' || data.property_2.ya_prop2_float_instance.id != 'electricity_meter'"
    },
    {
      "prop": "ya_prop2_float_unit_food_level",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.percent",
          "title": "Проценты"
        }
      ],
      "hide": "data.property_2.ya_prop2_type.id != 'float' || data.property_2.ya_prop2_float_instance.id != 'food_level'"
    },
    {
      "prop": "ya_prop2_float_unit_gas_meter",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.gas_meter",
          "title": "Кубические метры"
        }
      ],
      "hide": "data.property_2.ya_prop2_type.id != 'float' || data.property_2.ya_prop2_float_instance.id != 'gas_meter'"
    },
    {
      "prop": "ya_prop2_float_unit_heat_meter",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.gigacalorie",
          "title": "Гигакалории"
        }
      ],
      "hide": "data.property_2.ya_prop2_type.id != 'float' || data.property_2.ya_prop2_float_instance.id != 'heat_meter'"
    },
    {
      "prop": "ya_prop2_float_unit_humidity",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.percent",
          "title": "Проценты"
        }
      ],
      "hide": "data.property_2.ya_prop2_type.id != 'float' || data.property_2.ya_prop2_float_instance.id != 'humidity'"
    },
    {
      "prop": "ya_prop2_float_unit_illumination",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.illumination.lux",
          "title": "Люксы"
        }
      ],
      "hide": "data.property_2.ya_prop2_type.id != 'float' || data.property_2.ya_prop2_float_instance.id != 'illumination'"
    },
    {
      "prop": "ya_prop2_float_unit_pm1_density",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.density.mcg_m3",
          "title": "мкг/м3"
        }
      ],
      "hide": "data.property_2.ya_prop2_type.id != 'float' || data.property_2.ya_prop2_float_instance.id != 'pm1_density'"
    },
    {
      "prop": "ya_prop2_float_unit_pm2.5_density",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.density.mcg_m3",
          "title": "мкг/м3"
        }
      ],
      "hide": "data.property_2.ya_prop2_type.id != 'float' || data.property_2.ya_prop2_float_instance.id != 'pm2.5_density'"
    },
    {
      "prop": "ya_prop2_float_unit_pm10_density",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.density.mcg_m3",
          "title": "мкг/м3"
        }
      ],
      "hide": "data.property_2.ya_prop2_type.id != 'float' || data.property_2.ya_prop2_float_instance.id != 'pm10_density'"
    },
    {
      "prop": "ya_prop2_float_unit_power",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.watt",
          "title": "ватты"
        }
      ],
      "hide": "data.property_2.ya_prop2_type.id != 'float' || data.property_2.ya_prop2_float_instance.id != 'power'"
    },
    {
      "prop": "ya_prop2_float_unit_pressure",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.pressure.atm",
          "title": "атмосферы"
        },
        {
          "id": "unit.pressure.pascal",
          "title": "паскали"
        },
        {
          "id": "unit.pressure.bar",
          "title": "бары"
        },
        {
          "id": "unit.pressure.mmhg",
          "title": "миллиметры ртутного столба"
        }
      ],
      "hide": "data.property_2.ya_prop2_type.id != 'float' || data.property_2.ya_prop2_float_instance.id != 'pressure'"
    },
    {
      "prop": "ya_prop2_float_unit_temperature",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.temperature.celsius",
          "title": "градусы по цельсию"
        },
        {
          "id": "unit.temperature.kelvin",
          "title": "кельвины"
        }
      ],
      "hide": "data.property_2.ya_prop2_type.id != 'float' || data.property_2.ya_prop2_float_instance.id != 'temperature'"
    },
    {
      "prop": "ya_prop2_float_unit_tvoc",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.density.mcg_m3",
          "title": "мкг/м3"
        }
      ],
      "hide": "data.property_2.ya_prop2_type.id != 'float' || data.property_2.ya_prop2_float_instance.id != 'tvoc'"
    },
    {
      "prop": "ya_prop2_float_unit_voltage",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.volt",
          "title": "вольты"
        }
      ],
      "hide": "data.property_2.ya_prop2_type.id != 'float' || data.property_2.ya_prop2_float_instance.id != 'voltage'"
    },
    {
      "prop": "ya_prop2_float_unit_water_level",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.percent",
          "title": "проценты"
        }
      ],
      "hide": "data.property_2.ya_prop2_type.id != 'float' || data.property_2.ya_prop2_float_instance.id != 'water_level'"
    },
    {
      "prop": "ya_prop2_float_unit_water_meter",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.cubic_meter",
          "title": "кубические метры"
        }
      ],
      "hide": "data.property_2.ya_prop2_type.id != 'float' || data.property_2.ya_prop2_float_instance.id != 'water_meter'"
    },
    {
      "prop": "ya_prop2_float_calc",
      "title": "Выражение для вычисления для отправки данных. Можно использовать все свойства устройства.",
      "type": "input",
      "default": "value",
      "hide": "data.property_2.ya_prop2_type.id != 'float'"
    },
    {
      "prop": "_event2_title_desc",
      "title": "Отображение показаний свойств устройства в виде событий.",
      "type": "header",
      "hide": "data.property_2.ya_prop2_type.id != 'event'"
    },
    {
      "prop": "ya_prop2_event_instance",
      "title": "Название функции для свойства",
      "type": "droplist",
      "data": [
        {
          "id": "vibration",
          "title": "Отображение событий физического воздействия: вибрация, падение, переворачивание."
        },
        {
          "id": "open",
          "title": "Отображение событий открытия/закрытия дверей, окон и т.п."
        },
        {
          "id": "button",
          "title": "Отображение событий нажатия кнопки."
        },
        {
          "id": "motion",
          "title": "Отображение событий, связанных с наличием движения в области действия датчика."
        },
        {
          "id": "smoke",
          "title": "Отображение событий наличия дыма в помещении."
        },
        {
          "id": "gas",
          "title": "Отображение событий наличия газа в помещении."
        },
        {
          "id": "battery_level",
          "title": "Отображение событий заряда батареи."
        },
        {
          "id": "food_level",
          "title": "Отображение событий, связанных с уровнем корма."
        },
        {
          "id": "water_level",
          "title": "Отображение событий, связанных с уровнем воды."
        },
        {
          "id": "water_leak",
          "title": "Отображение событий протечки воды."
        }
      ],
      "hide": "data.property_2.ya_prop2_type.id != 'event'"
    },
    {
      "prop": "ya_prop2_event_event_vibration",
      "title": "Событие",
      "type": "droplist",
      "data": [
        {
          "id": "tilt",
          "title": "переворачивание"
        },
        {
          "id": "fall",
          "title": "падение"
        },
        {
          "id": "vibration",
          "title": "вибрация"
        }
      ],
      "hide": "data.property_2.ya_prop2_type.id != 'event' || data.property_2.ya_prop2_event_instance.id != 'vibration'"
    },
    {
      "prop": "ya_prop2_event_event_open",
      "title": "Событие",
      "type": "droplist",
      "data": [
        {
          "id": "opened",
          "title": "открыто"
        },
        {
          "id": "closed",
          "title": "закрыто"
        }
      ],
      "hide": "data.property_2.ya_prop2_type.id != 'event' || data.property_2.ya_prop2_event_instance.id != 'open'"
    },
    {
      "prop": "ya_prop2_event_event_button",
      "title": "Событие",
      "type": "droplist",
      "data": [
        {
          "id": "click",
          "title": "одиночное нажатие"
        },
        {
          "id": "double_click",
          "title": "двойное нажатие"
        },
        {
          "id": "long_press",
          "title": "долгое нажатие"
        }
      ],
      "hide": "data.property_2.ya_prop2_type.id != 'event' || data.property_2.ya_prop2_event_instance.id != 'button'"
    },
    {
      "prop": "ya_prop2_event_event_motion",
      "title": "Событие",
      "type": "droplist",
      "data": [
        {
          "id": "detected",
          "title": "обнаружено"
        },
        {
          "id": "not_detected",
          "title": "не обнаружено"
        }
      ],
      "hide": "data.property_2.ya_prop2_type.id != 'event' || data.property_2.ya_prop2_event_instance.id != 'motion'"
    },
    {
      "prop": "ya_prop2_event_event_smoke",
      "title": "Событие",
      "type": "droplist",
      "data": [
        {
          "id": "detected",
          "title": "обнаружено"
        },
        {
          "id": "not_detected",
          "title": "не обнаружено"
        },
        {
          "id": "high",
          "title": "высокий уровень"
        }
      ],
      "hide": "data.property_2.ya_prop2_type.id != 'event' || data.property_2.ya_prop2_event_instance.id != 'smoke'"
    },
    {
      "prop": "ya_prop2_event_event_gas",
      "title": "Событие",
      "type": "droplist",
      "data": [
        {
          "id": "detected",
          "title": "обнаружено"
        },
        {
          "id": "not_detected",
          "title": "не обнаружено"
        },
        {
          "id": "high",
          "title": "высокий уровень"
        }
      ],
      "hide": "data.property_2.ya_prop2_type.id != 'event' || data.property_2.ya_prop2_event_instance.id != 'gas'"
    },
    {
      "prop": "ya_prop2_event_event_battery_level",
      "title": "Событие",
      "type": "droplist",
      "data": [
        {
          "id": "low",
          "title": "низкий"
        },
        {
          "id": "normal",
          "title": "нормальный"
        }
      ],
      "hide": "data.property_2.ya_prop2_type.id != 'event' || data.property_2.ya_prop2_event_instance.id != 'battery_level'"
    },
    {
      "prop": "ya_prop2_event_event_food_level",
      "title": "Событие",
      "type": "droplist",
      "data": [
        {
          "id": "empty",
          "title": "пустой"
        },
        {
          "id": "low",
          "title": "низкий"
        },
        {
          "id": "normal",
          "title": "нормальный"
        }
      ],
      "hide": "data.property_2.ya_prop2_type.id != 'event' || data.property_2.ya_prop2_event_instance.id != 'food_level'"
    },
    {
      "prop": "ya_prop2_event_event_water_level",
      "title": "Событие",
      "type": "droplist",
      "data": [
        {
          "id": "empty",
          "title": "пустой"
        },
        {
          "id": "low",
          "title": "низкий"
        },
        {
          "id": "normal",
          "title": "нормальный"
        }
      ],
      "hide": "data.property_2.ya_prop2_type.id != 'event' || data.property_2.ya_prop2_event_instance.id != 'water_level'"
    },
    {
      "prop": "ya_prop2_event_event_water_leak",
      "title": "Событие",
      "type": "droplist",
      "data": [
        {
          "id": "dry",
          "title": "нет протечки"
        },
        {
          "id": "leak",
          "title": "протечка."
        }
      ],
      "hide": "data.property_2.ya_prop2_type.id != 'event' || data.property_2.ya_prop2_event_instance.id != 'water_leak'"
    },
    {
      "prop": "ya_prop2_event_calc",
      "title": "Выражение для вычисления, событие срабатывает при истинном значении выражения. Можно использовать все свойства устройства.",
      "type": "input",
      "default": "state == 1",
      "hide": "data.property_2.ya_prop2_type.id != 'event'"
    }
  ],
  "property_3": [
    {
      "prop": "_title",
      "title": "Свойство №4",
      "type": "header"
    },
    {
      "prop": "ya_prop3_type",
      "title": "Тип свойства",
      "default": "float",
      "type": "droplist",
      "data": [
        {
          "id": "float",
          "title": "Float"
        },
        {
          "id": "event",
          "title": "Event"
        }
      ]
    },
    {
      "prop": "_float3_title_desc",
      "title": "Отображение значений свойств устройства в числовом формате.",
      "type": "header",
      "hide": "data.property_3.ya_prop3_type.id != 'float'"
    },
    {
      "prop": "ya_prop3_float_instance",
      "title": "Название функции для свойства",
      "type": "droplist",
      "data": [
        {
          "id": "amperage",
          "title": "Отображение текущего потребления тока."
        },
        {
          "id": "battery_level",
          "title": "Отображение уровня заряда аккумулятора."
        },
        {
          "id": "co2_level",
          "title": "Отображение показаний уровня углекислого газа."
        },
        {
          "id": "electricity_meter",
          "title": "Отображение текущих показаний счетчика электроэнергии."
        },
        {
          "id": "food_level",
          "title": "Отображение показаний уровня корма."
        },
        {
          "id": "gas_meter",
          "title": "Отображение текущих показаний счетчика газа."
        },
        {
          "id": "heat_meter",
          "title": "Отображение текущих показаний счетчика тепла."
        },
        {
          "id": "humidity",
          "title": "Отображение показаний влажности."
        },
        {
          "id": "illumination",
          "title": "Отображение уровня освещенности."
        },
        {
          "id": "pm1_density",
          "title": "Отображение уровня загрязнения воздуха частицами PM1."
        },
        {
          "id": "pm2.5_density",
          "title": "Отображение уровня загрязнения воздуха частицами PM2.5."
        },
        {
          "id": "pm10_density",
          "title": "Отображение уровня загрязнения воздуха частицами PM10."
        },
        {
          "id": "power",
          "title": "Отображение текущей потребляемой мощности."
        },
        {
          "id": "pressure",
          "title": "Отображение давления."
        },
        {
          "id": "temperature",
          "title": "Отображение показаний температуры."
        },
        {
          "id": "tvoc",
          "title": "Отображение уровня загрязнения воздуха органическими веществами."
        },
        {
          "id": "voltage",
          "title": "Отображение текущего напряжения."
        },
        {
          "id": "water_level",
          "title": "Отображение показаний уровня воды."
        },
        {
          "id": "water_meter",
          "title": "Отображение текущих показаний счетчика воды."
        }
      ],
      "hide": "data.property_3.ya_prop3_type.id != 'float'"
    },
    {
      "prop": "ya_prop3_float_unit_amperage",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.ampere",
          "title": "Амперы"
        }
      ],
      "hide": "data.property_3.ya_prop3_type.id != 'float' || data.property_3.ya_prop3_float_instance.id != 'amperage'"
    },
    {
      "prop": "ya_prop3_float_unit_battery_level",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.percent",
          "title": "Проценты"
        }
      ],
      "hide": "data.property_3.ya_prop3_type.id != 'float' || data.property_3.ya_prop3_float_instance.id != 'battery_level'"
    },
    {
      "prop": "ya_prop3_float_unit_co2_level",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.ppm",
          "title": "ppm — parts per million"
        }
      ],
      "hide": "data.property_3.ya_prop3_type.id != 'float' || data.property_3.ya_prop3_float_instance.id != 'co2_level'"
    },
    {
      "prop": "ya_prop3_float_unit_electricity_meter",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.kilowatt_hour",
          "title": "киловатт-часы"
        }
      ],
      "hide": "data.property_3.ya_prop3_type.id != 'float' || data.property_3.ya_prop3_float_instance.id != 'electricity_meter'"
    },
    {
      "prop": "ya_prop3_float_unit_food_level",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.percent",
          "title": "Проценты"
        }
      ],
      "hide": "data.property_3.ya_prop3_type.id != 'float' || data.property_3.ya_prop3_float_instance.id != 'food_level'"
    },
    {
      "prop": "ya_prop3_float_unit_gas_meter",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.gas_meter",
          "title": "Кубические метры"
        }
      ],
      "hide": "data.property_3.ya_prop3_type.id != 'float' || data.property_3.ya_prop3_float_instance.id != 'gas_meter'"
    },
    {
      "prop": "ya_prop3_float_unit_heat_meter",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.gigacalorie",
          "title": "Гигакалории"
        }
      ],
      "hide": "data.property_3.ya_prop3_type.id != 'float' || data.property_3.ya_prop3_float_instance.id != 'heat_meter'"
    },
    {
      "prop": "ya_prop3_float_unit_humidity",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.percent",
          "title": "Проценты"
        }
      ],
      "hide": "data.property_3.ya_prop3_type.id != 'float' || data.property_3.ya_prop3_float_instance.id != 'humidity'"
    },
    {
      "prop": "ya_prop3_float_unit_illumination",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.illumination.lux",
          "title": "Люксы"
        }
      ],
      "hide": "data.property_3.ya_prop3_type.id != 'float' || data.property_3.ya_prop3_float_instance.id != 'illumination'"
    },
    {
      "prop": "ya_prop3_float_unit_pm1_density",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.density.mcg_m3",
          "title": "мкг/м3"
        }
      ],
      "hide": "data.property_3.ya_prop3_type.id != 'float' || data.property_3.ya_prop3_float_instance.id != 'pm1_density'"
    },
    {
      "prop": "ya_prop3_float_unit_pm2.5_density",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.density.mcg_m3",
          "title": "мкг/м3"
        }
      ],
      "hide": "data.property_3.ya_prop3_type.id != 'float' || data.property_3.ya_prop3_float_instance.id != 'pm2.5_density'"
    },
    {
      "prop": "ya_prop3_float_unit_pm10_density",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.density.mcg_m3",
          "title": "мкг/м3"
        }
      ],
      "hide": "data.property_3.ya_prop3_type.id != 'float' || data.property_3.ya_prop3_float_instance.id != 'pm10_density'"
    },
    {
      "prop": "ya_prop3_float_unit_power",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.watt",
          "title": "ватты"
        }
      ],
      "hide": "data.property_3.ya_prop3_type.id != 'float' || data.property_3.ya_prop3_float_instance.id != 'power'"
    },
    {
      "prop": "ya_prop3_float_unit_pressure",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.pressure.atm",
          "title": "атмосферы"
        },
        {
          "id": "unit.pressure.pascal",
          "title": "паскали"
        },
        {
          "id": "unit.pressure.bar",
          "title": "бары"
        },
        {
          "id": "unit.pressure.mmhg",
          "title": "миллиметры ртутного столба"
        }
      ],
      "hide": "data.property_3.ya_prop3_type.id != 'float' || data.property_3.ya_prop3_float_instance.id != 'pressure'"
    },
    {
      "prop": "ya_prop3_float_unit_temperature",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.temperature.celsius",
          "title": "градусы по цельсию"
        },
        {
          "id": "unit.temperature.kelvin",
          "title": "кельвины"
        }
      ],
      "hide": "data.property_3.ya_prop3_type.id != 'float' || data.property_3.ya_prop3_float_instance.id != 'temperature'"
    },
    {
      "prop": "ya_prop3_float_unit_tvoc",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.density.mcg_m3",
          "title": "мкг/м3"
        }
      ],
      "hide": "data.property_3.ya_prop3_type.id != 'float' || data.property_3.ya_prop3_float_instance.id != 'tvoc'"
    },
    {
      "prop": "ya_prop3_float_unit_voltage",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.volt",
          "title": "вольты"
        }
      ],
      "hide": "data.property_3.ya_prop3_type.id != 'float' || data.property_3.ya_prop3_float_instance.id != 'voltage'"
    },
    {
      "prop": "ya_prop3_float_unit_water_level",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.percent",
          "title": "проценты"
        }
      ],
      "hide": "data.property_3.ya_prop3_type.id != 'float' || data.property_3.ya_prop3_float_instance.id != 'water_level'"
    },
    {
      "prop": "ya_prop3_float_unit_water_meter",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.cubic_meter",
          "title": "кубические метры"
        }
      ],
      "hide": "data.property_3.ya_prop3_type.id != 'float' || data.property_3.ya_prop3_float_instance.id != 'water_meter'"
    },
    {
      "prop": "ya_prop3_float_calc",
      "title": "Выражение для вычисления для отправки данных. Можно использовать все свойства устройства.",
      "type": "input",
      "default": "value",
      "hide": "data.property_3.ya_prop3_type.id != 'float'"
    },
    {
      "prop": "_event3_title_desc",
      "title": "Отображение показаний свойств устройства в виде событий.",
      "type": "header",
      "hide": "data.property_3.ya_prop3_type.id != 'event'"
    },
    {
      "prop": "ya_prop3_event_instance",
      "title": "Название функции для свойства",
      "type": "droplist",
      "data": [
        {
          "id": "vibration",
          "title": "Отображение событий физического воздействия: вибрация, падение, переворачивание."
        },
        {
          "id": "open",
          "title": "Отображение событий открытия/закрытия дверей, окон и т.п."
        },
        {
          "id": "button",
          "title": "Отображение событий нажатия кнопки."
        },
        {
          "id": "motion",
          "title": "Отображение событий, связанных с наличием движения в области действия датчика."
        },
        {
          "id": "smoke",
          "title": "Отображение событий наличия дыма в помещении."
        },
        {
          "id": "gas",
          "title": "Отображение событий наличия газа в помещении."
        },
        {
          "id": "battery_level",
          "title": "Отображение событий заряда батареи."
        },
        {
          "id": "food_level",
          "title": "Отображение событий, связанных с уровнем корма."
        },
        {
          "id": "water_level",
          "title": "Отображение событий, связанных с уровнем воды."
        },
        {
          "id": "water_leak",
          "title": "Отображение событий протечки воды."
        }
      ],
      "hide": "data.property_3.ya_prop3_type.id != 'event'"
    },
    {
      "prop": "ya_prop3_event_event_vibration",
      "title": "Событие",
      "type": "droplist",
      "data": [
        {
          "id": "tilt",
          "title": "переворачивание"
        },
        {
          "id": "fall",
          "title": "падение"
        },
        {
          "id": "vibration",
          "title": "вибрация"
        }
      ],
      "hide": "data.property_3.ya_prop3_type.id != 'event' || data.property_3.ya_prop3_event_instance.id != 'vibration'"
    },
    {
      "prop": "ya_prop3_event_event_open",
      "title": "Событие",
      "type": "droplist",
      "data": [
        {
          "id": "opened",
          "title": "открыто"
        },
        {
          "id": "closed",
          "title": "закрыто"
        }
      ],
      "hide": "data.property_3.ya_prop3_type.id != 'event' || data.property_3.ya_prop3_event_instance.id != 'open'"
    },
    {
      "prop": "ya_prop3_event_event_button",
      "title": "Событие",
      "type": "droplist",
      "data": [
        {
          "id": "click",
          "title": "одиночное нажатие"
        },
        {
          "id": "double_click",
          "title": "двойное нажатие"
        },
        {
          "id": "long_press",
          "title": "долгое нажатие"
        }
      ],
      "hide": "data.property_3.ya_prop3_type.id != 'event' || data.property_3.ya_prop3_event_instance.id != 'button'"
    },
    {
      "prop": "ya_prop3_event_event_motion",
      "title": "Событие",
      "type": "droplist",
      "data": [
        {
          "id": "detected",
          "title": "обнаружено"
        },
        {
          "id": "not_detected",
          "title": "не обнаружено"
        }
      ],
      "hide": "data.property_3.ya_prop3_type.id != 'event' || data.property_3.ya_prop3_event_instance.id != 'motion'"
    },
    {
      "prop": "ya_prop3_event_event_smoke",
      "title": "Событие",
      "type": "droplist",
      "data": [
        {
          "id": "detected",
          "title": "обнаружено"
        },
        {
          "id": "not_detected",
          "title": "не обнаружено"
        },
        {
          "id": "high",
          "title": "высокий уровень"
        }
      ],
      "hide": "data.property_3.ya_prop3_type.id != 'event' || data.property_3.ya_prop3_event_instance.id != 'smoke'"
    },
    {
      "prop": "ya_prop3_event_event_gas",
      "title": "Событие",
      "type": "droplist",
      "data": [
        {
          "id": "detected",
          "title": "обнаружено"
        },
        {
          "id": "not_detected",
          "title": "не обнаружено"
        },
        {
          "id": "high",
          "title": "высокий уровень"
        }
      ],
      "hide": "data.property_3.ya_prop3_type.id != 'event' || data.property_3.ya_prop3_event_instance.id != 'gas'"
    },
    {
      "prop": "ya_prop3_event_event_battery_level",
      "title": "Событие",
      "type": "droplist",
      "data": [
        {
          "id": "low",
          "title": "низкий"
        },
        {
          "id": "normal",
          "title": "нормальный"
        }
      ],
      "hide": "data.property_3.ya_prop3_type.id != 'event' || data.property_3.ya_prop3_event_instance.id != 'battery_level'"
    },
    {
      "prop": "ya_prop3_event_event_food_level",
      "title": "Событие",
      "type": "droplist",
      "data": [
        {
          "id": "empty",
          "title": "пустой"
        },
        {
          "id": "low",
          "title": "низкий"
        },
        {
          "id": "normal",
          "title": "нормальный"
        }
      ],
      "hide": "data.property_3.ya_prop3_type.id != 'event' || data.property_3.ya_prop3_event_instance.id != 'food_level'"
    },
    {
      "prop": "ya_prop3_event_event_water_level",
      "title": "Событие",
      "type": "droplist",
      "data": [
        {
          "id": "empty",
          "title": "пустой"
        },
        {
          "id": "low",
          "title": "низкий"
        },
        {
          "id": "normal",
          "title": "нормальный"
        }
      ],
      "hide": "data.property_3.ya_prop3_type.id != 'event' || data.property_3.ya_prop3_event_instance.id != 'water_level'"
    },
    {
      "prop": "ya_prop3_event_event_water_leak",
      "title": "Событие",
      "type": "droplist",
      "data": [
        {
          "id": "dry",
          "title": "нет протечки"
        },
        {
          "id": "leak",
          "title": "протечка."
        }
      ],
      "hide": "data.property_3.ya_prop3_type.id != 'event' || data.property_3.ya_prop3_event_instance.id != 'water_leak'"
    },
    {
      "prop": "ya_prop3_event_calc",
      "title": "Выражение для вычисления, событие срабатывает при истинном значении выражения. Можно использовать все свойства устройства.",
      "type": "input",
      "default": "state == 1",
      "hide": "data.property_3.ya_prop3_type.id != 'event'"
    }
  ],
  "property_4": [
    {
      "prop": "_title",
      "title": "Свойство №5",
      "type": "header"
    },
    {
      "prop": "ya_prop4_type",
      "title": "Тип свойства",
      "default": "float",
      "type": "droplist",
      "data": [
        {
          "id": "float",
          "title": "Float"
        },
        {
          "id": "event",
          "title": "Event"
        }
      ]
    },
    {
      "prop": "_float4_title_desc",
      "title": "Отображение значений свойств устройства в числовом формате.",
      "type": "header",
      "hide": "data.property_4.ya_prop4_type.id != 'float'"
    },
    {
      "prop": "ya_prop4_float_instance",
      "title": "Название функции для свойства",
      "type": "droplist",
      "data": [
        {
          "id": "amperage",
          "title": "Отображение текущего потребления тока."
        },
        {
          "id": "battery_level",
          "title": "Отображение уровня заряда аккумулятора."
        },
        {
          "id": "co2_level",
          "title": "Отображение показаний уровня углекислого газа."
        },
        {
          "id": "electricity_meter",
          "title": "Отображение текущих показаний счетчика электроэнергии."
        },
        {
          "id": "food_level",
          "title": "Отображение показаний уровня корма."
        },
        {
          "id": "gas_meter",
          "title": "Отображение текущих показаний счетчика газа."
        },
        {
          "id": "heat_meter",
          "title": "Отображение текущих показаний счетчика тепла."
        },
        {
          "id": "humidity",
          "title": "Отображение показаний влажности."
        },
        {
          "id": "illumination",
          "title": "Отображение уровня освещенности."
        },
        {
          "id": "pm1_density",
          "title": "Отображение уровня загрязнения воздуха частицами PM1."
        },
        {
          "id": "pm2.5_density",
          "title": "Отображение уровня загрязнения воздуха частицами PM2.5."
        },
        {
          "id": "pm10_density",
          "title": "Отображение уровня загрязнения воздуха частицами PM10."
        },
        {
          "id": "power",
          "title": "Отображение текущей потребляемой мощности."
        },
        {
          "id": "pressure",
          "title": "Отображение давления."
        },
        {
          "id": "temperature",
          "title": "Отображение показаний температуры."
        },
        {
          "id": "tvoc",
          "title": "Отображение уровня загрязнения воздуха органическими веществами."
        },
        {
          "id": "voltage",
          "title": "Отображение текущего напряжения."
        },
        {
          "id": "water_level",
          "title": "Отображение показаний уровня воды."
        },
        {
          "id": "water_meter",
          "title": "Отображение текущих показаний счетчика воды."
        }
      ],
      "hide": "data.property_4.ya_prop4_type.id != 'float'"
    },
    {
      "prop": "ya_prop4_float_unit_amperage",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.ampere",
          "title": "Амперы"
        }
      ],
      "hide": "data.property_4.ya_prop4_type.id != 'float' || data.property_4.ya_prop4_float_instance.id != 'amperage'"
    },
    {
      "prop": "ya_prop4_float_unit_battery_level",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.percent",
          "title": "Проценты"
        }
      ],
      "hide": "data.property_4.ya_prop4_type.id != 'float' || data.property_4.ya_prop4_float_instance.id != 'battery_level'"
    },
    {
      "prop": "ya_prop4_float_unit_co2_level",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.ppm",
          "title": "ppm — parts per million"
        }
      ],
      "hide": "data.property_4.ya_prop4_type.id != 'float' || data.property_4.ya_prop4_float_instance.id != 'co2_level'"
    },
    {
      "prop": "ya_prop4_float_unit_electricity_meter",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.kilowatt_hour",
          "title": "киловатт-часы"
        }
      ],
      "hide": "data.property_4.ya_prop4_type.id != 'float' || data.property_4.ya_prop4_float_instance.id != 'electricity_meter'"
    },
    {
      "prop": "ya_prop4_float_unit_food_level",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.percent",
          "title": "Проценты"
        }
      ],
      "hide": "data.property_4.ya_prop4_type.id != 'float' || data.property_4.ya_prop4_float_instance.id != 'food_level'"
    },
    {
      "prop": "ya_prop4_float_unit_gas_meter",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.gas_meter",
          "title": "Кубические метры"
        }
      ],
      "hide": "data.property_4.ya_prop4_type.id != 'float' || data.property_4.ya_prop4_float_instance.id != 'gas_meter'"
    },
    {
      "prop": "ya_prop4_float_unit_heat_meter",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.gigacalorie",
          "title": "Гигакалории"
        }
      ],
      "hide": "data.property_4.ya_prop4_type.id != 'float' || data.property_4.ya_prop4_float_instance.id != 'heat_meter'"
    },
    {
      "prop": "ya_prop4_float_unit_humidity",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.percent",
          "title": "Проценты"
        }
      ],
      "hide": "data.property_4.ya_prop4_type.id != 'float' || data.property_4.ya_prop4_float_instance.id != 'humidity'"
    },
    {
      "prop": "ya_prop4_float_unit_illumination",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.illumination.lux",
          "title": "Люксы"
        }
      ],
      "hide": "data.property_4.ya_prop4_type.id != 'float' || data.property_4.ya_prop4_float_instance.id != 'illumination'"
    },
    {
      "prop": "ya_prop4_float_unit_pm1_density",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.density.mcg_m3",
          "title": "мкг/м3"
        }
      ],
      "hide": "data.property_4.ya_prop4_type.id != 'float' || data.property_4.ya_prop4_float_instance.id != 'pm1_density'"
    },
    {
      "prop": "ya_prop4_float_unit_pm2.5_density",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.density.mcg_m3",
          "title": "мкг/м3"
        }
      ],
      "hide": "data.property_4.ya_prop4_type.id != 'float' || data.property_4.ya_prop4_float_instance.id != 'pm2.5_density'"
    },
    {
      "prop": "ya_prop4_float_unit_pm10_density",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.density.mcg_m3",
          "title": "мкг/м3"
        }
      ],
      "hide": "data.property_4.ya_prop4_type.id != 'float' || data.property_4.ya_prop4_float_instance.id != 'pm10_density'"
    },
    {
      "prop": "ya_prop4_float_unit_power",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.watt",
          "title": "ватты"
        }
      ],
      "hide": "data.property_4.ya_prop4_type.id != 'float' || data.property_4.ya_prop4_float_instance.id != 'power'"
    },
    {
      "prop": "ya_prop4_float_unit_pressure",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.pressure.atm",
          "title": "атмосферы"
        },
        {
          "id": "unit.pressure.pascal",
          "title": "паскали"
        },
        {
          "id": "unit.pressure.bar",
          "title": "бары"
        },
        {
          "id": "unit.pressure.mmhg",
          "title": "миллиметры ртутного столба"
        }
      ],
      "hide": "data.property_4.ya_prop4_type.id != 'float' || data.property_4.ya_prop4_float_instance.id != 'pressure'"
    },
    {
      "prop": "ya_prop4_float_unit_temperature",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.temperature.celsius",
          "title": "градусы по цельсию"
        },
        {
          "id": "unit.temperature.kelvin",
          "title": "кельвины"
        }
      ],
      "hide": "data.property_4.ya_prop4_type.id != 'float' || data.property_4.ya_prop4_float_instance.id != 'temperature'"
    },
    {
      "prop": "ya_prop4_float_unit_tvoc",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.density.mcg_m3",
          "title": "мкг/м3"
        }
      ],
      "hide": "data.property_4.ya_prop4_type.id != 'float' || data.property_4.ya_prop4_float_instance.id != 'tvoc'"
    },
    {
      "prop": "ya_prop4_float_unit_voltage",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.volt",
          "title": "вольты"
        }
      ],
      "hide": "data.property_4.ya_prop4_type.id != 'float' || data.property_4.ya_prop4_float_instance.id != 'voltage'"
    },
    {
      "prop": "ya_prop4_float_unit_water_level",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.percent",
          "title": "проценты"
        }
      ],
      "hide": "data.property_4.ya_prop4_type.id != 'float' || data.property_4.ya_prop4_float_instance.id != 'water_level'"
    },
    {
      "prop": "ya_prop4_float_unit_water_meter",
      "title": "Единицы измерения значений функции",
      "type": "droplist",
      "data": [
        {
          "id": "unit.cubic_meter",
          "title": "кубические метры"
        }
      ],
      "hide": "data.property_4.ya_prop4_type.id != 'float' || data.property_4.ya_prop4_float_instance.id != 'water_meter'"
    },
    {
      "prop": "ya_prop4_float_calc",
      "title": "Выражение для вычисления для отправки данных. Можно использовать все свойства устройства.",
      "type": "input",
      "default": "value",
      "hide": "data.property_4.ya_prop4_type.id != 'float'"
    },
    {
      "prop": "_event4_title_desc",
      "title": "Отображение показаний свойств устройства в виде событий.",
      "type": "header",
      "hide": "data.property_4.ya_prop4_type.id != 'event'"
    },
    {
      "prop": "ya_prop4_event_instance",
      "title": "Название функции для свойства",
      "type": "droplist",
      "data": [
        {
          "id": "vibration",
          "title": "Отображение событий физического воздействия: вибрация, падение, переворачивание."
        },
        {
          "id": "open",
          "title": "Отображение событий открытия/закрытия дверей, окон и т.п."
        },
        {
          "id": "button",
          "title": "Отображение событий нажатия кнопки."
        },
        {
          "id": "motion",
          "title": "Отображение событий, связанных с наличием движения в области действия датчика."
        },
        {
          "id": "smoke",
          "title": "Отображение событий наличия дыма в помещении."
        },
        {
          "id": "gas",
          "title": "Отображение событий наличия газа в помещении."
        },
        {
          "id": "battery_level",
          "title": "Отображение событий заряда батареи."
        },
        {
          "id": "food_level",
          "title": "Отображение событий, связанных с уровнем корма."
        },
        {
          "id": "water_level",
          "title": "Отображение событий, связанных с уровнем воды."
        },
        {
          "id": "water_leak",
          "title": "Отображение событий протечки воды."
        }
      ],
      "hide": "data.property_4.ya_prop4_type.id != 'event'"
    },
    {
      "prop": "ya_prop4_event_event_vibration",
      "title": "Событие",
      "type": "droplist",
      "data": [
        {
          "id": "tilt",
          "title": "переворачивание"
        },
        {
          "id": "fall",
          "title": "падение"
        },
        {
          "id": "vibration",
          "title": "вибрация"
        }
      ],
      "hide": "data.property_4.ya_prop4_type.id != 'event' || data.property_4.ya_prop4_event_instance.id != 'vibration'"
    },
    {
      "prop": "ya_prop4_event_event_open",
      "title": "Событие",
      "type": "droplist",
      "data": [
        {
          "id": "opened",
          "title": "открыто"
        },
        {
          "id": "closed",
          "title": "закрыто"
        }
      ],
      "hide": "data.property_4.ya_prop4_type.id != 'event' || data.property_4.ya_prop4_event_instance.id != 'open'"
    },
    {
      "prop": "ya_prop4_event_event_button",
      "title": "Событие",
      "type": "droplist",
      "data": [
        {
          "id": "click",
          "title": "одиночное нажатие"
        },
        {
          "id": "double_click",
          "title": "двойное нажатие"
        },
        {
          "id": "long_press",
          "title": "долгое нажатие"
        }
      ],
      "hide": "data.property_4.ya_prop4_type.id != 'event' || data.property_4.ya_prop4_event_instance.id != 'button'"
    },
    {
      "prop": "ya_prop4_event_event_motion",
      "title": "Событие",
      "type": "droplist",
      "data": [
        {
          "id": "detected",
          "title": "обнаружено"
        },
        {
          "id": "not_detected",
          "title": "не обнаружено"
        }
      ],
      "hide": "data.property_4.ya_prop4_type.id != 'event' || data.property_4.ya_prop4_event_instance.id != 'motion'"
    },
    {
      "prop": "ya_prop4_event_event_smoke",
      "title": "Событие",
      "type": "droplist",
      "data": [
        {
          "id": "detected",
          "title": "обнаружено"
        },
        {
          "id": "not_detected",
          "title": "не обнаружено"
        },
        {
          "id": "high",
          "title": "высокий уровень"
        }
      ],
      "hide": "data.property_4.ya_prop4_type.id != 'event' || data.property_4.ya_prop4_event_instance.id != 'smoke'"
    },
    {
      "prop": "ya_prop4_event_event_gas",
      "title": "Событие",
      "type": "droplist",
      "data": [
        {
          "id": "detected",
          "title": "обнаружено"
        },
        {
          "id": "not_detected",
          "title": "не обнаружено"
        },
        {
          "id": "high",
          "title": "высокий уровень"
        }
      ],
      "hide": "data.property_4.ya_prop4_type.id != 'event' || data.property_4.ya_prop4_event_instance.id != 'gas'"
    },
    {
      "prop": "ya_prop4_event_event_battery_level",
      "title": "Событие",
      "type": "droplist",
      "data": [
        {
          "id": "low",
          "title": "низкий"
        },
        {
          "id": "normal",
          "title": "нормальный"
        }
      ],
      "hide": "data.property_4.ya_prop4_type.id != 'event' || data.property_4.ya_prop4_event_instance.id != 'battery_level'"
    },
    {
      "prop": "ya_prop4_event_event_food_level",
      "title": "Событие",
      "type": "droplist",
      "data": [
        {
          "id": "empty",
          "title": "пустой"
        },
        {
          "id": "low",
          "title": "низкий"
        },
        {
          "id": "normal",
          "title": "нормальный"
        }
      ],
      "hide": "data.property_4.ya_prop4_type.id != 'event' || data.property_4.ya_prop4_event_instance.id != 'food_level'"
    },
    {
      "prop": "ya_prop4_event_event_water_level",
      "title": "Событие",
      "type": "droplist",
      "data": [
        {
          "id": "empty",
          "title": "пустой"
        },
        {
          "id": "low",
          "title": "низкий"
        },
        {
          "id": "normal",
          "title": "нормальный"
        }
      ],
      "hide": "data.property_4.ya_prop4_type.id != 'event' || data.property_4.ya_prop4_event_instance.id != 'water_level'"
    },
    {
      "prop": "ya_prop4_event_event_water_leak",
      "title": "Событие",
      "type": "droplist",
      "data": [
        {
          "id": "dry",
          "title": "нет протечки"
        },
        {
          "id": "leak",
          "title": "протечка."
        }
      ],
      "hide": "data.property_4.ya_prop4_type.id != 'event' || data.property_4.ya_prop4_event_instance.id != 'water_leak'"
    },
    {
      "prop": "ya_prop4_event_calc",
      "title": "Выражение для вычисления, событие срабатывает при истинном значении выражения. Можно использовать все свойства устройства.",
      "type": "input",
      "default": "state == 1",
      "hide": "data.property_4.ya_prop4_type.id != 'event'"
    }
  ]
}